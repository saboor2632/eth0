[
    {
        "title": "Unveiling Ethereum's P2P Network: The Role of Chain and Client Diversity",
        "authors": [
            "Jiahao Luo"
        ],
        "published_date": "2025-01-27T17:33:49Z",
        "abstract": "The Ethereum network, built on the devp2p protocol stack, was designed to\nfunction as a \"world computer\" by supporting decentralized applications through\na shared P2P infrastructure. However, the proliferation of blockchain forks has\nincreased network diversity, complicating node discovery and reducing\nefficiency. Ethereum mainnet nodes cannot easily distinguish between peers from\ndifferent blockchains until after establishing an expensive TCP connection,\nencryption, and protocol handshake. This inefficiency is further worsened by\nclient diversity, where differences in software implementations cause protocol\nincompatibilities and connection failures. This paper introduces a monitoring\ntool that tracks devp2p message exchanges and client statuses to analyze\nconnection dynamics and protocol variations. Our findings highlight issues such\nas inefficiencies in node discovery and client incompatibility, including\ntimeouts in Geth during the discovery process. The study emphasizes the need to\nconsider chain and client diversity when assessing the health and performance\nof the post-merge Ethereum network.",
        "paper_url": "http://arxiv.org/abs/2501.16236v1",
        "pdf_url": "http://arxiv.org/pdf/2501.16236v1",
        "categories": [
            "cs.NI"
        ]
    },
    {
        "title": "Multi-source Multi-level Multi-token Ethereum Dataset and Benchmark\n  Platform",
        "authors": [
            "Haoyuan Li",
            "Mengxiao Zhang",
            "Maoyuan Li",
            "Jianzheng Li",
            "Junyi Yang",
            "Shuangyan Deng",
            "Zijian Zhang",
            "Jiamou Liu"
        ],
        "published_date": "2025-01-21T05:57:20Z",
        "abstract": "This paper introduces 3MEthTaskforce (https://3meth.github.io), a\nmulti-source, multi-level, and multi-token Ethereum dataset addressing the\nlimitations of single-source datasets. Integrating over 300 million transaction\nrecords, 3,880 token profiles, global market indicators, and Reddit sentiment\ndata from 2014-2024, it enables comprehensive studies on user behavior, market\nsentiment, and token performance. 3MEthTaskforce defines benchmarks for user\nbehavior prediction and token price prediction tasks, using 6 dynamic graph\nnetworks and 19 time-series models to evaluate performance. Its multimodal\ndesign supports risk analysis and market fluctuation modeling, providing a\nvaluable resource for advancing blockchain analytics and decentralized finance\nresearch.",
        "paper_url": "http://arxiv.org/abs/2501.11906v1",
        "pdf_url": "http://arxiv.org/pdf/2501.11906v1",
        "categories": [
            "cs.CE"
        ]
    },
    {
        "title": "Metamorphic Testing for Smart Contract Validation:A Case Study of\n  Ethereum-Based Crowdfunding Contracts",
        "authors": [
            "Irving Jared Villanueva",
            "Madhusudan Srinivasan",
            "Faqeer Ur Rehman"
        ],
        "published_date": "2025-01-17T05:04:23Z",
        "abstract": "Blockchain smart contracts play a crucial role in automating and securing\nagreements in diverse domains such as finance, healthcare, and supply chains.\nDespite their critical applications, testing these contracts often receives\nless attention than their development, leaving significant risks due to the\nimmutability of smart contracts post-deployment. A key challenge in the testing\nof smart contracts is the oracle problem, where the exact expected outcomes are\nnot well defined, complicating systematic testing efforts.\n  Metamorphic Testing (MT) addresses the oracle problem by using Metamorphic\nRelations (MRs) to validate smart contracts. MRs define how output should\nchange relative to specific input modifications, determining whether the tests\npass or fail. In this work, we apply MT to test an Ethereum-based crowdfunding\nsmart contract, focusing on core functionalities such as state transitions and\ndonation tracking.\n  We identify a set of MRs tailored for smart contract testing and generate\ntest cases for these MRs. To assess the effectiveness of this approach, we use\nthe Vertigo mutation testing tool to create faulty versions of the smart\ncontract. The experimental results show that our MRs detected 25.65% of the\ntotal mutants generated, with the most effective MRs achieving a mutant-killing\nrate of 89%. These results highlight the utility of MT to ensure the\nreliability and quality of blockchain-based smart contracts.",
        "paper_url": "http://arxiv.org/abs/2501.09955v1",
        "pdf_url": "http://arxiv.org/pdf/2501.09955v1",
        "categories": [
            "cs.SE"
        ]
    },
    {
        "title": "Technical Report: Exploring Automatic Model-Checking of the Ethereum\n  specification",
        "authors": [
            "Igor Konnov",
            "Jure Kukovec",
            "Thomas Pani",
            "Roberto Saltini",
            "Thanh Hai Tran"
        ],
        "published_date": "2025-01-14T09:21:49Z",
        "abstract": "We investigate automated model-checking of the Ethereum specification,\nfocusing on the Accountable Safety property of the 3SF consensus protocol. We\nselect 3SF due to its relevance and the unique challenges it poses for formal\nverification. Our primary tools are TLA+ for specification and the Apalache\nmodel checker for verification.\n  Our formalization builds on the executable Python specification of 3SF. To\nbegin, we manually translate this specification into TLA+, revealing\nsignificant combinatorial complexity in the definition of Accountable Safety.\nTo address these challenges, we introduce several layers of manual abstraction:\n(1) replacing recursion with folds, (2) substituting abstract graphs with\nintegers, and (3) decomposing chain configurations. To cross-validate our\nresults, we develop alternative encodings in SMT (CVC5) and Alloy.\n  Despite the inherent complexity, our results demonstrate that exhaustive\nverification of Accountable Safety is feasible for small instances - supporting\nup to 7 checkpoints and 24 validator votes. Moreover, no violations of\nAccountable Safety are observed, even in slightly larger configurations. Beyond\nthese findings, our study highlights the importance of manual abstraction and\ndomain expertise in enhancing model-checking efficiency and showcases the\nflexibility of TLA+ for managing intricate specifications.",
        "paper_url": "http://arxiv.org/abs/2501.07958v2",
        "pdf_url": "http://arxiv.org/pdf/2501.07958v2",
        "categories": [
            "cs.LO",
            "cs.DC",
            "F.3.1; C.2.4"
        ]
    },
    {
        "title": "Time-Varying Bidirectional Causal Relationships Between Transaction Fees\n  and Economic Activity of Subsystems Utilizing the Ethereum Blockchain Network",
        "authors": [
            "Lennart Ante",
            "Aman Saggu"
        ],
        "published_date": "2025-01-09T15:03:05Z",
        "abstract": "The Ethereum blockchain network enables transaction processing and\nsmart-contract execution through levies of transaction fees, commonly known as\ngas fees. This framework mediates economic participation via a market-based\nmechanism for gas fees, permitting users to offer higher gas fees to expedite\npro-cessing. Historically, the ensuing gas fee volatility led to critical\ndisequilibria between supply and demand for block space, presenting stakeholder\nchallenges. This study examines the dynamic causal interplay between\ntransaction fees and economic subsystems leveraging the network. By utilizing\ndata related to unique active wallets and transaction volume of each subsystem\nand applying time-varying Granger causality analysis, we reveal temporal\nheterogeneity in causal relationships between economic activity and transaction\nfees across all subsystems. This includes (a) a bidirectional causal feedback\nloop between cross-blockchain bridge user activity and transaction fees, which\ndiminishes over time, potentially signaling user migration; (b) a bidirectional\nrelationship between centralized cryptocurrency exchange deposit and withdrawal\ntransaction volume and fees, indicative of increased competition for block\nspace; (c) decentralized exchange volumes causally influence fees, while fees\ncausally influence user activity, although this relationship is weakening,\npotentially due to the diminished significance of decentralized finance; (d)\nintermittent causal relationships with maximal extractable value bots; (e) fees\ncausally in-fluence non-fungible token transaction volumes; and (f) a highly\nsignificant and growing causal influence of transaction fees on stablecoin\nactivity and transaction volumes highlight its prominence.",
        "paper_url": "http://arxiv.org/abs/2501.05299v1",
        "pdf_url": "http://arxiv.org/pdf/2501.05299v1",
        "categories": [
            "q-fin.GN",
            "econ.EM",
            "q-fin.RM",
            "q-fin.TR",
            "91G50, 91B84, 62M10, 91G70, 91B25, 91B28, 91B82, 91G15",
            "J.4; H.3.5; K.4.4; J.1"
        ]
    },
    {
        "title": "Demystification and Near-perfect Estimation of Minimum Gas Limit and Gas\n  Used for Ethereum Smart Contracts",
        "authors": [
            "Danilo Rafael de Lima Cabral",
            "Pedro Antonino",
            "Augusto Sampaio"
        ],
        "published_date": "2025-01-08T13:07:34Z",
        "abstract": "The Ethereum blockchain has a \\emph{gas system} that associates operations\nwith a cost in gas units. Two central concepts of this system are the \\emph{gas\nlimit} assigned by the issuer of a transaction and the \\emph{gas used} by a\ntransaction. The former is a budget that must not be exhausted before the\ncompletion of the transaction execution; otherwise, the execution fails.\nTherefore, it seems rather essential to determine the \\emph{minimum gas limit}\nthat ensures the execution of a transaction will not abort due to the lack of\ngas. Despite its practical relevance, this concept has not been properly\naddressed. In the literature, gas used and minimum gas limit are conflated.\nThis paper proposes a precise notion of minimum gas limit and how it can differ\nfrom gas used by a transaction; this is also demonstrated with a quantitative\nstudy on real transactions of the Ethereum blockchain. Another significant\ncontribution is the proposition of a fairly precise estimator for each of the\ntwo metrics. Again, the confusion between these concepts has led to the\ncreation of estimators only for the gas used by a transaction. We demonstrate\nthat the minimum gas limit for the state of the Ethereum blockchain (after the\nblock) $t$ can serve as a near-perfect estimation for the execution of the\ntransaction at block $t + \\Delta$, where $\\Delta \\leq 11$; the same holds for\nestimating gas used. These precise estimators can be very valuable in helping\nthe users predict the gas budget of transactions and developers in optimising\ntheir smart contracts; over and underestimating gas used and minimum gas limit\ncan lead to a number of practical issues. Overall, this paper serves as an\nimportant reference for blockchain developers and users as to how the gas\nsystem really works.",
        "paper_url": "http://arxiv.org/abs/2501.04483v1",
        "pdf_url": "http://arxiv.org/pdf/2501.04483v1",
        "categories": [
            "cs.SE",
            "cs.CE",
            "cs.DC",
            "cs.ET",
            "cs.NI"
        ]
    },
    {
        "title": "A Large-Scale Exploratory Study on the Proxy Pattern in Ethereum",
        "authors": [
            "Amir M. Ebrahimi",
            "Bram Adams",
            "Gustavo A. Oliva",
            "Ahmed E. Hassan"
        ],
        "published_date": "2025-01-01T21:52:22Z",
        "abstract": "The proxy pattern is a well-known design pattern with numerous use cases in\nseveral sectors of the software industry. As such, the use of the proxy pattern\nis also a common approach in the development of complex decentralized\napplications (DApps) on the Ethereum blockchain. Despite the importance of\nproxy contracts, little is known about (i) how their prevalence changed over\ntime, (ii) the ways in which developers integrate proxies in the design of\nDApps, and (iii) what proxy types are being most commonly leveraged by\ndevelopers. This study bridges these gaps through a comprehensive analysis of\nEthereum smart contracts, utilizing a dataset of 50 million contracts and 1.6\nbillion transactions as of September 2022. Our findings reveal that 14.2% of\nall deployed smart contracts are proxy contracts. We show that proxy contracts\nare being more actively used than non-proxy contracts. Also, the usage of proxy\ncontracts in various contexts, transactions involving proxy contracts, and\nadoption of proxy contracts by users have shown an upward trend over time,\npeaking at the end of our study period. They are either deployed through\noff-chain scripts or on-chain factory contracts, with the former and latter\nbeing employed in 39.1% and 60.9% of identified usage contexts in turn. We\nfound that while the majority (67.8%) of proxies act as an interceptor, 32.2%\nenables upgradeability. Proxy contracts are typically (79%) implemented based\non known reference implementations with 29.4% being of type ERC-1167, a class\nof proxies that aims to cheaply reuse and clone contracts' functionality. Our\nevaluation shows that our proposed behavioral proxy detection method has a\nprecision and recall of 100% in detecting active proxies. Finally, we derive a\nset of practical recommendations for developers and introduce open research\nquestions to guide future research on the topic.",
        "paper_url": "http://arxiv.org/abs/2501.00965v1",
        "pdf_url": "http://arxiv.org/pdf/2501.00965v1",
        "categories": [
            "cs.SE",
            "cs.DC"
        ]
    },
    {
        "title": "UPC Sentinel: An Accurate Approach for Detecting Upgradeability Proxy\n  Contracts in Ethereum",
        "authors": [
            "Amir M. Ebrahimi",
            "Bram Adams",
            "Gustavo A. Oliva",
            "Ahmed E. Hassan"
        ],
        "published_date": "2024-12-31T23:09:06Z",
        "abstract": "Software applications that run on a blockchain platform are known as DApps.\nDApps are built using smart contracts, which are immutable after deployment.\nJust like any real-world software system, DApps need to receive new features\nand bug fixes over time in order to remain useful and secure. However, Ethereum\nlacks native solutions for post-deployment smart contract maintenance,\nrequiring developers to devise their own methods. A popular method is known as\nthe upgradeability proxy contract (UPC), which involves implementing the proxy\ndesign pattern (as defined by the Gang of Four). In this method, client calls\nfirst hit a proxy contract, which then delegates calls to a certain\nimplementation contract. Most importantly, the proxy contract can be\nreconfigured during runtime to delegate calls to another implementation\ncontract, effectively enabling application upgrades. For researchers, the\naccurate detection of UPCs is a strong requirement in the understanding of how\nexactly real-world DApps are maintained over time. For practitioners, the\naccurate detection of UPCs is crucial for providing application behavior\ntransparency and enabling auditing. In this paper, we introduce UPC Sentinel, a\nnovel three-layer algorithm that utilizes both static and dynamic analysis of\nsmart contract bytecode to accurately detect active UPCs. We evaluated UPC\nSentinel using two distinct ground truth datasets. In the first dataset, our\nmethod demonstrated a near-perfect accuracy of 99%. The evaluation on the\nsecond dataset further established our method's efficacy, showing a perfect\nprecision rate of 100% and a near-perfect recall of 99.3%, outperforming the\nstate of the art. Finally, we discuss the potential value of UPC Sentinel in\nadvancing future research efforts.",
        "paper_url": "http://arxiv.org/abs/2501.00674v1",
        "pdf_url": "http://arxiv.org/pdf/2501.00674v1",
        "categories": [
            "cs.SE",
            "cs.DC"
        ]
    },
    {
        "title": "From Competition to Centralization: The Oligopoly in Ethereum Block\n  Building Auctions",
        "authors": [
            "Fei Wu",
            "Thomas Thiery",
            "Stefanos Leonardos",
            "Carmine Ventre"
        ],
        "published_date": "2024-12-24T01:05:31Z",
        "abstract": "The Ethereum block production process has evolved with the introduction of an\nauction-based mechanism known as Proposer-Builder Separation (PBS), allowing\nvalidators to outsource block production to builders and reap Maximal\nExtractable Value (MEV) revenue from builder bids in a decentralized market. In\nthis market, builders compete in MEV-Boost auctions to have their blocks\nselected and earn potential MEV rewards. This paper employs empirical\ngame-theoretic analysis to explore builders' strategic bidding incentives in\nMEV-Boost auctions, focusing on how advantages in network latency and access to\nMEV opportunities affect builders' bidding behaviors and auction outcomes. Our\nfindings confirm an oligopolistic dynamic, where a few dominant builders,\nleveraging their advantages in latency and MEV access, benefit from an economy\nof scale that reinforces their market power, leading to increased\ncentralization and reduced auction efficiency. Our analysis highlights the\nimportance of fair MEV distribution among builders and the ongoing challenge of\nenhancing decentralization in the Ethereum block building market.",
        "paper_url": "http://arxiv.org/abs/2412.18074v1",
        "pdf_url": "http://arxiv.org/pdf/2412.18074v1",
        "categories": [
            "cs.GT"
        ]
    },
    {
        "title": "Scam Detection for Ethereum Smart Contracts: Leveraging Graph\n  Representation Learning for Secure Blockchain",
        "authors": [
            "Yihong Jin",
            "Ze Yang"
        ],
        "published_date": "2024-12-16T21:56:01Z",
        "abstract": "Due to the increasing abuse of fraudulent activities that result in\nsignificant financial and reputational harm, Ethereum smart contracts face a\nsignificant problem in detecting fraud. Existing monitoring methods typically\nrely on lease code analysis or physically extracted features, which suffer from\nscalability and adaptability limitations. In this study, we use graph\nrepresentation learning to observe purchase trends and find fraudulent deals.\nWe can achieve powerful categorisation performance by using innovative machine\nlearning versions and transforming Ethereum invoice data into graph structures.\nOur method addresses label imbalance through SMOTE-ENN techniques and evaluates\nmodels like Multi-Layer Perceptron ( MLP ) and Graph Convolutional Networks (\nGCN). Experimental results show that the MLP type surpasses the GCN in this\nenvironment, with domain-specific assessments closely aligned with real-world\nassessments. This study provides a scalable and efficient way to improve\nEthereum's ecosystem's confidence and security.",
        "paper_url": "http://arxiv.org/abs/2412.12370v3",
        "pdf_url": "http://arxiv.org/pdf/2412.12370v3",
        "categories": [
            "cs.LG",
            "cs.AI",
            "cs.CR",
            "cs.DC",
            "cs.SI",
            "I.2.1"
        ]
    },
    {
        "title": "Pioplat: A Scalable, Low-Cost Framework for Latency Reduction in\n  Ethereum Blockchain",
        "authors": [
            "Ke Wang",
            "Qiao Wang",
            "Yue Li",
            "Zhi Guan",
            "Zhong Chen"
        ],
        "published_date": "2024-12-11T13:15:16Z",
        "abstract": "As decentralized applications on permissionless blockchains are prevalent,\nmore and more latency-sensitive usage scenarios emerged, where the lower the\nlatency of sending and receiving messages, the better the chance of earning\nrevenue. To reduce latency, we present Pioplat, a feasible, customizable, and\nlow-cost latency reduction framework consisting of multiple relay nodes on\ndifferent continents and at least one instrumented variant of a full node. The\nnode selection strategy of Pioplat and the low-latency communication protocol\noffer an elastic way to reduce latency effectively. We demonstrate Pioplat's\nfeasibility with an implementation running on five continents and show that\nPioplat can significantly reduce the latency of receiving blocks/transactions\nand sending transactions, thus fulfilling the requirements of most\nlatency-sensitive use cases. Furthermore, we provide the complete\nimplementation of Pioplat to promote further research and allow people to apply\nthe framework to more blockchain systems.",
        "paper_url": "http://arxiv.org/abs/2412.08367v1",
        "pdf_url": "http://arxiv.org/pdf/2412.08367v1",
        "categories": [
            "cs.DC",
            "cs.CR",
            "C.2.4; C.2.2"
        ]
    },
    {
        "title": "Securing RC Based P2P Networks: A Blockchain-based Access Control\n  Framework utilizing Ethereum Smart Contracts for IoT and Web 3.0",
        "authors": [
            "Saurav Ghosh",
            "Reshmi Mitra",
            "Indranil Roy",
            "Bidyut Gupta"
        ],
        "published_date": "2024-12-04T20:56:52Z",
        "abstract": "Ensuring security for highly dynamic peer-to-peer (P2P) networks has always\nbeen a challenge, especially for services like online transactions and smart\ndevices. These networks experience high churn rates, making it difficult to\nmaintain appropriate access control. Traditional systems, particularly\nRole-Based Access Control (RBAC), often fail to meet the needs of a P2P\nenvironment. This paper presents a blockchain-based access control framework\nthat uses Ethereum smart contracts to address these challenges. Our framework\naims to close the gaps in existing access control systems by providing\nflexible, transparent, and decentralized security solutions. The proposed\nframework includes access control contracts (ACC) that manage access based on\nstatic and dynamic policies, a Judge Contract (JC) to handle misbehavior, and a\nRegister Contract (RC) to record and manage the interactions between ACCs and\nJC. The security model combines impact and severity-based threat assessments\nusing the CIA (Confidentiality, Integrity, Availability) and STRIDE principles,\nensuring responses are tailored to different threat levels. This system not\nonly stabilizes the fundamental issues of peer membership but also offers a\nscalable solution, particularly valuable in areas such as the Internet of\nThings (IoT) and Web 3.0 technologies.",
        "paper_url": "http://arxiv.org/abs/2412.03709v1",
        "pdf_url": "http://arxiv.org/pdf/2412.03709v1",
        "categories": [
            "cs.CR",
            "cs.DC",
            "cs.NI",
            "cs.SY",
            "eess.SY"
        ]
    },
    {
        "title": "Collaborative and parametric insurance on the Ethereum blockchain",
        "authors": [
            "Pierre-Olivier Goffard",
            "Stéphane Loisel"
        ],
        "published_date": "2024-12-03T20:03:40Z",
        "abstract": "This paper introduces a blockchain-based insurance scheme that integrates\nparametric and collaborative elements. A pool of investors, referred to as\nsurplus providers, locks funds in a smart contract, enabling blockchain users\nto underwrite parametric insurance contracts. These contracts automatically\ntrigger compensation when predefined conditions are met. The collaborative\naspect is embodied in the generation of tokens, which are distributed to both\nsurplus providers and policyholders. These tokens represent each participant's\nshare of the surplus and grant voting rights for management decisions. The\nsmart contract is developed in Solidity, a high-level programming language for\nthe Ethereum blockchain, and deployed on the Sepolia testnet, with data\nprocessing and analysis conducted using Python. In addition, open-source code\nis provided and main research challenges are identified, so that further\nresearch can be carried out to overcome limitations of this first proof of\nconcept.",
        "paper_url": "http://arxiv.org/abs/2412.05321v1",
        "pdf_url": "http://arxiv.org/pdf/2412.05321v1",
        "categories": [
            "cs.CR",
            "cs.CE",
            "cs.CY",
            "cs.GT",
            "math.PR"
        ]
    },
    {
        "title": "Leveraging Ensemble-Based Semi-Supervised Learning for Illicit Account\n  Detection in Ethereum DeFi Transactions",
        "authors": [
            "Shabnam Fazliani",
            "Mohammad Mowlavi Sorond",
            "Arsalan Masoudifard"
        ],
        "published_date": "2024-12-03T12:03:13Z",
        "abstract": "The advent of smart contracts has enabled the rapid rise of Decentralized\nFinance (DeFi) on the Ethereum blockchain, offering substantial rewards in\nfinancial innovation and inclusivity. However, this growth has also introduced\nsignificant security risks, including the proliferation of illicit accounts\ninvolved in fraudulent activities. Traditional detection methods are limited by\nthe scarcity of labeled data and the evolving tactics of malicious actors. In\nthis paper, we propose a novel Self-Learning Ensemble-based Illicit account\nDetection (SLEID) framework to address these challenges. SLEID employs an\nIsolation Forest for initial outlier detection and a self-training mechanism to\niteratively generate pseudo-labels for unlabeled accounts, thereby enhancing\ndetection accuracy. Extensive experiments demonstrate that SLEID significantly\noutperforms traditional supervised approaches and recent semi-supervised\nmodels, achieving superior precision, recall, and F1-scores, particularly in\ndetecting illicit accounts. Compared to state-of-the-art methods, our approach\nachieves better detection performance while reducing reliance on labeled data.\nThe results affirm SLEID's efficacy as a robust solution for safeguarding the\nDeFi ecosystem and mitigating risks posed by malicious accounts.",
        "paper_url": "http://arxiv.org/abs/2412.02408v1",
        "pdf_url": "http://arxiv.org/pdf/2412.02408v1",
        "categories": [
            "cs.SI",
            "cs.LG",
            "q-fin.GN"
        ]
    },
    {
        "title": "Know Your Account: Double Graph Inference-based Account De-anonymization\n  on Ethereum",
        "authors": [
            "Shuyi Miao",
            "Wangjie Qiu",
            "Hongwei Zheng",
            "Qinnan Zhang",
            "Xiaofan Tu",
            "Xunan Liu",
            "Yang Liu",
            "Jin Dong",
            "Zhiming Zheng"
        ],
        "published_date": "2024-11-28T03:00:27Z",
        "abstract": "The scaled Web 3.0 digital economy, represented by decentralized finance\n(DeFi), has sparked increasing interest in the past few years, which usually\nrelies on blockchain for token transfer and diverse transaction logic. However,\nillegal behaviors, such as financial fraud, hacker attacks, and money\nlaundering, are rampant in the blockchain ecosystem and seriously threaten its\nintegrity and security. In this paper, we propose a novel double graph-based\nEthereum account de-anonymization inference method, dubbed DBG4ETH, which aims\nto capture the behavioral patterns of accounts comprehensively and has more\nrobust analytical and judgment capabilities for current complex and\ncontinuously generated transaction behaviors. Specifically, we first construct\na global static graph to build complex interactions between the various account\nnodes for all transaction data. Then, we also construct a local dynamic graph\nto learn about the gradual evolution of transactions over different periods.\nDifferent graphs focus on information from different perspectives, and features\nof global and local, static and dynamic transaction graphs are available\nthrough DBG4ETH. In addition, we propose an adaptive confidence calibration\nmethod to predict the results by feeding the calibrated weighted prediction\nvalues into the classifier. Experimental results show that DBG4ETH achieves\nstate-of-the-art results in the account identification task, improving the\nF1-score by at least 3.75% and up to 40.52% compared to processing each graph\ntype individually and outperforming similar account identity inference methods\nby 5.23% to 12.91%.",
        "paper_url": "http://arxiv.org/abs/2411.18875v2",
        "pdf_url": "http://arxiv.org/pdf/2411.18875v2",
        "categories": [
            "cs.SI"
        ]
    },
    {
        "title": "CrypQ: A Database Benchmark Based on Dynamic, Ever-Evolving Ethereum\n  Data",
        "authors": [
            "Vincent Capol",
            "Yuxi Liu",
            "Haibo Xiu",
            "Jun Yang"
        ],
        "published_date": "2024-11-26T22:09:05Z",
        "abstract": "Modern database systems are expected to handle dynamic data whose\ncharacteristics may evolve over time. Many popular database benchmarks are\nlimited in their ability to evaluate this dynamic aspect of the database\nsystems. Those that use synthetic data generators often fail to capture the\ncomplexity and unpredictable nature of real data, while most real-world\ndatasets are static and difficult to create high-volume, realistic updates for.\nThis paper introduces CrypQ, a database benchmark leveraging dynamic, public\nEthereum blockchain data. CrypQ offers a high-volume, ever-evolving dataset\nreflecting the unpredictable nature of a real and active cryptocurrency market.\nWe detail CrypQ's schema, procedures for creating data snapshots and update\nsequences, and a suite of relevant SQL queries. As an example, we demonstrate\nCrypQ's utility in evaluating cost-based query optimizers on complex, evolving\ndata distributions with real-world skewness and dependencies.",
        "paper_url": "http://arxiv.org/abs/2411.17913v1",
        "pdf_url": "http://arxiv.org/pdf/2411.17913v1",
        "categories": [
            "cs.DB"
        ]
    },
    {
        "title": "3-Slot-Finality Protocol for Ethereum",
        "authors": [
            "Francesco D'Amato",
            "Roberto Saltini",
            "Thanh-Hai Tran",
            "Luca Zanolini"
        ],
        "published_date": "2024-11-01T13:12:58Z",
        "abstract": "Gasper, the consensus protocol currently employed by Ethereum, typically\nrequires 64 to 95 slots -- the units of time during which a new chain extending\nthe previous one by one block is proposed and voted -- to finalize. This means\nthat under ideal conditions -- where the network is synchronous, and all chain\nproposers, along with more than two-thirds of the validators, behave as\ndictated by the protocol -- proposers construct blocks on a non-finalized chain\nthat extends at least 64 blocks. This exposes a significant portion of the\nblockchain to potential reorganizations during changes in network conditions,\nsuch as periods of asynchrony. Specifically, this finalization delay heightens\nthe network's exposure to Maximum Extractable Value (MEV) exploits, which could\nundermine the network's integrity. Furthermore, the extended finalization\nperiod forces users to balance the trade-off between economic security and\ntransaction speed.\n  To address these issues and speed up finality, we introduce a partially\nsynchronous finality gadget, which we combine with two dynamically available\nconsensus protocols -- synchronous protocols that ensure safety and liveness\neven with fluctuating validator participation levels. This integration results\nin secure ebb-and-flow protocols [SP 2021], achieving finality within three\nslots after a proposal and realizing 3-slot finality.",
        "paper_url": "http://arxiv.org/abs/2411.00558v1",
        "pdf_url": "http://arxiv.org/pdf/2411.00558v1",
        "categories": [
            "cs.DC"
        ]
    },
    {
        "title": "Mitigating Challenges in Ethereum's Proof-of-Stake Consensus: Evaluating\n  the Impact of EigenLayer and Lido",
        "authors": [
            "Li Li"
        ],
        "published_date": "2024-10-30T19:58:46Z",
        "abstract": "The transition of Ethereum from a Proof-of-Work (PoW) to a Proof-of-Stake\n(PoS) consensus mechanism introduces a transformative approach to blockchain\nvalidation, offering enhanced scalability, energy efficiency, and security.\nHowever, this shift also presents significant challenges, including high\nbarriers to becoming a validator, restrictions on the liquidity of staked Ether\n(ETH), and the risk of centralization due to staking pool dynamics. This paper\naddresses these challenges by exploring two innovative solutions: EigenLayer\nand Lido.\n  EigenLayer is a middleware solution enabling restaking, allowing validators\nto secure multiple protocols and thereby increasing decentralization and\nprofitability. Lido, a liquid staking protocol, simplifies participation by\nissuing stETH tokens that retain liquidity, allowing users to earn rewards\nwithout long-term lock-up constraints. This paper provides a detailed analysis\nof how these technologies mitigate key PoS challenges, reduce validator entry\nbarriers, unlock staked capital, and improve decentralization. We conclude with\nan evaluation of the combined potential of EigenLayer and Lido to foster a more\nresilient and inclusive Ethereum ecosystem, setting the stage for further\nadvancements in decentralized finance.",
        "paper_url": "http://arxiv.org/abs/2410.23422v2",
        "pdf_url": "http://arxiv.org/pdf/2410.23422v2",
        "categories": [
            "cs.CR"
        ]
    },
    {
        "title": "Private Order Flows and Builder Bidding Dynamics: The Road to Monopoly\n  in Ethereum's Block Building Market",
        "authors": [
            "Shuzheng Wang",
            "Yue Huang",
            "Wenqin Zhang",
            "Yuming Huang",
            "Xuechao Wang",
            "Jing Tang"
        ],
        "published_date": "2024-10-16T08:15:18Z",
        "abstract": "Ethereum, as a representative of Web3, adopts a novel framework called\nProposer Builder Separation (PBS) to prevent the centralization of block\nprofits in the hands of institutional Ethereum stakers. Introducing builders to\ngenerate blocks based on public transactions, PBS aims to ensure that block\nprofits are distributed among all stakers. Through the auction among builders,\nonly one will win the block in each slot. Ideally, the equilibrium strategy of\nbuilders under public information would lead them to bid all block profits.\nHowever, builders are now capable of extracting profits from private order\nflows. In this paper, we explore the effect of PBS with private order flows.\nSpecifically, we propose the asymmetry auction model of MEV-Boost auction.\nMoreover, we conduct empirical study on Ethereum blocks from January 2023 to\nMay 2024. Our analysis indicates that private order flows contribute to 54.59%\nof the block value, indicating that different builders will build blocks with\ndifferent valuations. Interestingly, we find that builders with more private\norder flows (i.e., higher block valuations) are more likely to win the block,\nwhile retain larger proportion of profits. In return, such builders will\nfurther attract more private order flows, resulting in a monopolistic market\ngradually. Our findings reveal that PBS in current stage is unable to balance\nthe profit distribution, which just transits the centralization of block\nprofits from institutional stakers to the monopolistic builder.",
        "paper_url": "http://arxiv.org/abs/2410.12352v3",
        "pdf_url": "http://arxiv.org/pdf/2410.12352v3",
        "categories": [
            "cs.CE"
        ]
    },
    {
        "title": "Liquidity Fragmentation or Optimization? Analyzing Automated Market\n  Makers Across Ethereum and Rollups",
        "authors": [
            "Krzysztof Gogol",
            "Manvir Schneider",
            "Claudio Tessone",
            "Benjamin Livshits"
        ],
        "published_date": "2024-10-14T09:36:23Z",
        "abstract": "Layer-2 (L2) blockchains offer security guarantees for Ethereum while\nreducing transaction (gas) fees. Consequently, they are gaining popularity\namong traders at Automated Market Makers (AMMs), but Liquidity Providers (LPs)\nare lagging behind. Our empirical results show that AMM liquidity pools on\nEthereum are oversubscribed compared to their counterparties on L2s and deliver\nlower returns than staking ETH. LPs would receive higher rewards by\nreallocating over 2/3 of the liquidity to AMMs on L2s, or staking. We employ\nLagrangian optimization to find the optimal liquidity allocation strategy that\nmaximizes LP's rewards. Moreover, we show that the returns from liquidity\nprovisions converge to the staking rate, and in equilibrium, liquidity\nprovisions to any AMM should provide returns equal to staking rewards. Lastly,\nwe measure the elasticity of trading volume with respect to TVL at AMM pools\nand found that at the well established blockchains an increase in TVL is not\nassociated with an increase in trading volume.",
        "paper_url": "http://arxiv.org/abs/2410.10324v2",
        "pdf_url": "http://arxiv.org/pdf/2410.10324v2",
        "categories": [
            "cs.CE"
        ]
    },
    {
        "title": "RiskSEA : A Scalable Graph Embedding for Detecting On-chain Fraudulent\n  Activities on the Ethereum Blockchain",
        "authors": [
            "Ayush Agarwal",
            "Lv Lu",
            "Arjun Maheswaran",
            "Varsha Mahadevan",
            "Bhaskar Krishnamachari"
        ],
        "published_date": "2024-10-03T02:54:19Z",
        "abstract": "Like any other useful technology, cryptocurrencies are sometimes used for\ncriminal activities. While transactions are recorded on the blockchain, there\nexists a need for a more rapid and scalable method to detect addresses\nassociated with fraudulent activities. We present RiskSEA, a scalable risk\nscoring system capable of effectively handling the dynamic nature of\nlarge-scale blockchain transaction graphs. The risk scoring system, which we\nimplement for Ethereum, consists of 1. a scalable approach to generating\nnode2vec embedding for entire set of addresses to capture the graph topology 2.\ntransaction-based features to capture the transactional behavioral pattern of\nan address 3. a classifier model to generate risk score for addresses that\ncombines the node2vec embedding and behavioral features. Efficiently generating\nnode2vec embedding for large scale and dynamically evolving blockchain\ntransaction graphs is challenging, we present two novel approaches for\ngenerating node2vec embeddings and effectively scaling it to the entire set of\nblockchain addresses: 1. node2vec embedding propagation and 2. dynamic node2vec\nembedding. We present a comprehensive analysis of the proposed approaches. Our\nexperiments show that combining both behavioral and node2vec features boosts\nthe classification performance significantly, and that the dynamic node2vec\nembeddings perform better than the node2vec propagated embeddings.",
        "paper_url": "http://arxiv.org/abs/2410.02160v1",
        "pdf_url": "http://arxiv.org/pdf/2410.02160v1",
        "categories": [
            "cs.CR",
            "cs.AI",
            "cs.LG"
        ]
    },
    {
        "title": "Optimal RANDAO Manipulation in Ethereum",
        "authors": [
            "Kaya Alpturer",
            "S. Matthew Weinberg"
        ],
        "published_date": "2024-09-30T02:28:26Z",
        "abstract": "It is well-known that RANDAO manipulation is possible in Ethereum if an\nadversary controls the proposers assigned to the last slots in an epoch. We\nprovide a methodology to compute, for any fraction $\\alpha$ of stake owned by\nan adversary, the maximum fraction $f(\\alpha)$ of rounds that a strategic\nadversary can propose. We further implement our methodology and compute\n$f(\\cdot)$ for all $\\alpha$. For example, we conclude that an optimal strategic\nparticipant with $5\\%$ of the stake can propose a $5.048\\%$ fraction of rounds,\n$10\\%$ of the stake can propose a $10.19\\%$ fraction of rounds, and $20\\%$ of\nthe stake can propose a $20.68\\%$ fraction of rounds.",
        "paper_url": "http://arxiv.org/abs/2409.19883v1",
        "pdf_url": "http://arxiv.org/pdf/2409.19883v1",
        "categories": [
            "cs.GT",
            "cs.CR"
        ]
    },
    {
        "title": "Proxion: Uncovering Hidden Proxy Smart Contracts for Finding Collision\n  Vulnerabilities in Ethereum",
        "authors": [
            "Cheng-Kang Chen",
            "Wen-Yi Chu",
            "Muoi Tran",
            "Laurent Vanbever",
            "Hsu-Chun Hsiao"
        ],
        "published_date": "2024-09-20T15:03:19Z",
        "abstract": "The proxy design pattern allows Ethereum smart contracts to be simultaneously\nimmutable and upgradeable, in which an original contract is split into a proxy\ncontract containing the data storage and a logic contract containing the\nimplementation logic. This architecture is known to have security issues,\nnamely function collisions and storage collisions between the proxy and logic\ncontracts, and has been exploited in real-world incidents to steal users'\nmillions of dollars worth of digital assets. In response to this concern,\nseveral previous works have sought to identify proxy contracts in Ethereum and\ndetect their collisions. However, they all fell short due to their limited\ncoverage, often restricting analysis to only contracts with available source\ncode or past transactions.\n  To bridge this gap, we present Proxion, an automated cross-contract analyzer\nthat identifies all proxy smart contracts and their collisions in Ethereum.\nWhat sets Proxion apart is its ability to analyze hidden smart contracts that\nlack both source code and past transactions. Equipped with various techniques\nto enhance efficiency and accuracy, Proxion outperforms the state-of-the-art\ntools, notably identifying millions more proxy contracts and thousands of\nunreported collisions. We apply Proxion to analyze over 36 million alive\ncontracts from 2015 to 2023, revealing that 54.2% of them are proxy contracts,\nand about 1.5 million contracts exhibit at least one collision issue.",
        "paper_url": "http://arxiv.org/abs/2409.13563v1",
        "pdf_url": "http://arxiv.org/pdf/2409.13563v1",
        "categories": [
            "cs.CR",
            "cs.ET",
            "cs.SE"
        ]
    },
    {
        "title": "Ethereum Fraud Detection via Joint Transaction Language Model and Graph\n  Representation Learning",
        "authors": [
            "Yifan Jia",
            "Yanbin Wang",
            "Jianguo Sun",
            "Yiwei Liu",
            "Zhang Sheng",
            "Ye Tian"
        ],
        "published_date": "2024-09-09T07:13:44Z",
        "abstract": "Ethereum faces growing fraud threats. Current fraud detection methods,\nwhether employing graph neural networks or sequence models, fail to consider\nthe semantic information and similarity patterns within transactions. Moreover,\nthese approaches do not leverage the potential synergistic benefits of\ncombining both types of models. To address these challenges, we propose\nTLMG4Eth that combines a transaction language model with graph-based methods to\ncapture semantic, similarity, and structural features of transaction data in\nEthereum. We first propose a transaction language model that converts numerical\ntransaction data into meaningful transaction sentences, enabling the model to\nlearn explicit transaction semantics. Then, we propose a transaction attribute\nsimilarity graph to learn transaction similarity information, enabling us to\ncapture intuitive insights into transaction anomalies. Additionally, we\nconstruct an account interaction graph to capture the structural information of\nthe account transaction network. We employ a deep multi-head attention network\nto fuse transaction semantic and similarity embeddings, and ultimately propose\na joint training approach for the multi-head attention network and the account\ninteraction graph to obtain the synergistic benefits of both.",
        "paper_url": "http://arxiv.org/abs/2409.07494v1",
        "pdf_url": "http://arxiv.org/pdf/2409.07494v1",
        "categories": [
            "cs.CR",
            "cs.LG",
            "q-fin.GN"
        ]
    },
    {
        "title": "Deanonymizing Ethereum Validators: The P2P Network Has a Privacy Issue",
        "authors": [
            "Lioba Heimbach",
            "Yann Vonlanthen",
            "Juan Villacis",
            "Lucianna Kiffer",
            "Roger Wattenhofer"
        ],
        "published_date": "2024-09-06T15:57:43Z",
        "abstract": "Many blockchain networks aim to preserve the anonymity of validators in the\npeer-to-peer (P2P) network, ensuring that no adversary can link a validator's\nidentifier to the IP address of a peer due to associated privacy and security\nconcerns. This work demonstrates that the Ethereum P2P network does not offer\nthis anonymity. We present a methodology that enables any node in the network\nto identify validators hosted on connected peers and empirically verify the\nfeasibility of our proposed method. Using data collected from four nodes over\nthree days, we locate more than 15% of Ethereum validators in the P2P network.\nThe insights gained from our deanonymization technique provide valuable\ninformation on the distribution of validators across peers, their geographic\nlocations, and hosting organizations. We further discuss the implications and\nrisks associated with the lack of anonymity in the P2P network and propose\nmethods to help validators protect their privacy. The Ethereum Foundation has\nawarded us a bug bounty, acknowledging the impact of our results.",
        "paper_url": "http://arxiv.org/abs/2409.04366v2",
        "pdf_url": "http://arxiv.org/pdf/2409.04366v2",
        "categories": [
            "cs.CR"
        ]
    },
    {
        "title": "Dissecting Payload-based Transaction Phishing on Ethereum",
        "authors": [
            "Zhuo Chen",
            "Yufeng Hu",
            "Bowen He",
            "Dong Luo",
            "Lei Wu",
            "Yajin Zhou"
        ],
        "published_date": "2024-09-04T02:26:59Z",
        "abstract": "In recent years, a more advanced form of phishing has arisen on Ethereum,\nsurpassing early-stage, simple transaction phishing. This new form, which we\nrefer to as payload-based transaction phishing (PTXPHISH), manipulates smart\ncontract interactions through the execution of malicious payloads to deceive\nusers. PTXPHISH has rapidly emerged as a significant threat, leading to\nincidents that caused losses exceeding \\$70 million in 2023 reports. Despite\nits substantial impact, no previous studies have systematically explored\nPTXPHISH\n  In this paper, we present the first comprehensive study of the PTXPHISH on\nEthereum. Firstly, we conduct a long-term data collection and put considerable\neffort into establishing the first ground-truth PTXPHISH dataset, consisting of\n5,000 phishing transactions. Based on the dataset, we dissect PTXPHISH,\ncategorizing phishing tactics into four primary categories and eleven\nsub-categories. Secondly, we propose a rule-based multi-dimensional detection\napproach to identify PTXPHISH, achieving over 99% accuracy in the ground-truth\ndataset. Finally, we conducted a large-scale detection spanning 300 days and\ndiscovered a total of 130,637 phishing transactions on Ethereum, resulting in\nlosses exceeding $341.9 million. Our in-depth analysis of these phishing\ntransactions yielded valuable and insightful findings.\n  Furthermore, our work has made significant contributions to mitigating\nreal-world threats. We have reported 1,726 phishing addresses to the community,\naccounting for 42.7% of total community contributions during the same period.\nAdditionally, we have sent 2,539 on-chain alert messages, assisting 1,980\nvictims. This research serves as a valuable reference in combating the emerging\nPTXPHISH and safeguarding users' assets.",
        "paper_url": "http://arxiv.org/abs/2409.02386v2",
        "pdf_url": "http://arxiv.org/pdf/2409.02386v2",
        "categories": [
            "cs.CR",
            "cs.SE"
        ]
    },
    {
        "title": "DogeFuzz: A Simple Yet Efficient Grey-box Fuzzer for Ethereum Smart\n  Contracts",
        "authors": [
            "Ismael Medeiros",
            "Fausto Carvalho",
            "Alexandre Ferreira",
            "Rodrigo Bonifácio",
            "Fabiano Cavalcanti Fernandes"
        ],
        "published_date": "2024-09-03T11:08:53Z",
        "abstract": "Ethereum is a distributed, peer-to-peer blockchain infrastructure that has\nattracted billions of dollars. Perhaps due to its success, Ethereum has become\na target for various kinds of attacks, motivating researchers to explore\ndifferent techniques to identify vulnerabilities in EVM bytecode (the language\nof the Ethereum Virtual Machine), including formal verification, symbolic\nexecution, and fuzz testing. Although recent studies empirically compare smart\ncontract fuzzers, there is a lack of literature investigating how simpler\ngreybox fuzzers compare to more advanced ones. To fill this gap, in this paper,\nwe present DogeFuzz, an extensible infrastructure for fuzzing Ethereum smart\ncontracts, currently supporting black-box fuzzing and two grey-box fuzzing\nstrategies: coverage-guided grey-box fuzzing (DogeFuzz-G) and directed grey-box\nfuzzing (DogeFuzz-DG). We conduct a series of experiments using benchmarks\nalready available in the literature and compare the DogeFuzz strategies with\nstate-of-the-art fuzzers for smart contracts. Surprisingly, although DogeFuzz\ndoes not leverage advanced techniques for improving input generation (such as\nsymbolic execution or machine learning), DogeFuzz outperforms sFuzz and ILF,\ntwo state-of-the-art fuzzers. Nonetheless, the Smartian fuzzer shows higher\ncode coverage and bug-finding capabilities than DogeFuzz.",
        "paper_url": "http://arxiv.org/abs/2409.01788v1",
        "pdf_url": "http://arxiv.org/pdf/2409.01788v1",
        "categories": [
            "cs.CR",
            "cs.SE"
        ]
    },
    {
        "title": "Probabilistic Analysis and Empirical Validation of Patricia Tries in\n  Ethereum State Management",
        "authors": [
            "Oleksandr Kuznetsov",
            "Anton Yezhov",
            "Kateryna Kuznetsova",
            "Oleksandr Domin"
        ],
        "published_date": "2024-08-26T12:31:44Z",
        "abstract": "This study presents a comprehensive theoretical and empirical analysis of\nPatricia tries, the fundamental data structure underlying Ethereum's state\nmanagement system. We develop a probabilistic model characterizing the\ndistribution of path lengths in Patricia tries containing random Ethereum\naddresses and validate this model through extensive computational experiments.\nOur findings reveal the logarithmic scaling of average path lengths with\nrespect to the number of addresses, confirming a crucial property for\nEthereum's scalability. The study demonstrates high precision in predicting\naverage path lengths, with discrepancies between theoretical and experimental\nresults not exceeding 0.01 across tested scales from 100 to 100,000 addresses.\nWe identify and verify the right-skewed nature of path length distributions,\nproviding insights into worst-case scenarios and informing optimization\nstrategies. Statistical analysis, including chi-square goodness-of-fit tests,\nstrongly supports the model's accuracy. The research offers structural insights\ninto node concentration at specific trie levels, suggesting avenues for\noptimizing storage and retrieval mechanisms. These findings contribute to a\ndeeper understanding of Ethereum's fundamental data structures and provide a\nsolid foundation for future optimizations. The study concludes by outlining\npotential directions for future research, including investigations into\nextreme-scale behavior, dynamic trie performance, and the applicability of the\nmodel to non-uniform address distributions and other blockchain systems.",
        "paper_url": "http://arxiv.org/abs/2408.14217v1",
        "pdf_url": "http://arxiv.org/pdf/2408.14217v1",
        "categories": [
            "cs.CR"
        ]
    },
    {
        "title": "ML Study of MaliciousTransactions in Ethereum",
        "authors": [
            "Natan Katz"
        ],
        "published_date": "2024-08-16T13:50:04Z",
        "abstract": "Smart contracts are a major tool in Ethereum transactions. Therefore hackers\ncan exploit them by adding code vulnerabilities to their sources and using\nthese vulnerabilities for performing malicious transactions. This paper\npresents two successful approaches for detecting malicious contracts: one uses\nopcode and relies on GPT2 and the other uses the Solidity source and a LORA\nfine-tuned CodeLlama. Finally, we present an XGBOOST model that combines gas\nproperties and Hexa-decimal signatures for detecting malicious transactions.\nThis approach relies on early assumptions that maliciousness is manifested by\nthe uncommon usage of the contracts' functions and the effort to pursue the\ntransaction.",
        "paper_url": "http://arxiv.org/abs/2408.08749v1",
        "pdf_url": "http://arxiv.org/pdf/2408.08749v1",
        "categories": [
            "cs.CR",
            "cs.LG"
        ]
    },
    {
        "title": "Demystifying and Detecting Cryptographic Defects in Ethereum Smart\n  Contracts",
        "authors": [
            "Jiashuo Zhang",
            "Yiming Shen",
            "Jiachi Chen",
            "Jianzhong Su",
            "Yanlin Wang",
            "Ting Chen",
            "Jianbo Gao",
            "Zhong Chen"
        ],
        "published_date": "2024-08-09T08:40:08Z",
        "abstract": "Ethereum has officially provided a set of system-level cryptographic APIs to\nenhance smart contracts with cryptographic capabilities. These APIs have been\nutilized in over 10% of Ethereum transactions, motivating developers to\nimplement various on-chain cryptographic tasks, such as digital signatures.\nHowever, since developers may not always be cryptographic experts, their ad-hoc\nand potentially defective implementations could compromise the theoretical\nguarantees of cryptography, leading to real-world security issues. To mitigate\nthis threat, we conducted the first study aimed at demystifying and detecting\ncryptographic defects in smart contracts. Through the analysis of 2,406\nreal-world security reports, we defined nine types of cryptographic defects in\nsmart contracts with detailed descriptions and practical detection patterns.\nBased on this categorization, we proposed CrySol, a fuzzing-based tool to\nautomate the detection of cryptographic defects in smart contracts. It combines\ntransaction replaying and dynamic taint analysis to extract fine-grained\ncrypto-related semantics and employs crypto-specific strategies to guide the\ntest case generation process. Furthermore, we collected a large-scale dataset\ncontaining 25,745 real-world crypto-related smart contracts and evaluated\nCrySol's effectiveness on it. The result demonstrated that CrySol achieves an\noverall precision of 95.4% and a recall of 91.2%. Notably, CrySol revealed that\n5,847 (22.7%) out of 25,745 smart contracts contain at least one cryptographic\ndefect, highlighting the prevalence of these defects.",
        "paper_url": "http://arxiv.org/abs/2408.04939v1",
        "pdf_url": "http://arxiv.org/pdf/2408.04939v1",
        "categories": [
            "cs.CR",
            "cs.SE"
        ]
    },
    {
        "title": "Simple Perturbations Subvert Ethereum Phishing Transactions Detection:\n  An Empirical Analysis",
        "authors": [
            "Ahod Alghureid",
            "David Mohaisen"
        ],
        "published_date": "2024-08-06T20:40:20Z",
        "abstract": "This paper explores the vulnerability of machine learning models,\nspecifically Random Forest, Decision Tree, and K-Nearest Neighbors, to very\nsimple single-feature adversarial attacks in the context of Ethereum fraudulent\ntransaction detection. Through comprehensive experimentation, we investigate\nthe impact of various adversarial attack strategies on model performance\nmetrics, such as accuracy, precision, recall, and F1-score. Our findings,\nhighlighting how prone those techniques are to simple attacks, are alarming,\nand the inconsistency in the attacks' effect on different algorithms promises\nways for attack mitigation. We examine the effectiveness of different\nmitigation strategies, including adversarial training and enhanced feature\nselection, in enhancing model robustness.",
        "paper_url": "http://arxiv.org/abs/2408.03441v1",
        "pdf_url": "http://arxiv.org/pdf/2408.03441v1",
        "categories": [
            "cs.CR",
            "cs.LG"
        ]
    },
    {
        "title": "Enhancing Ethereum Fraud Detection via Generative and Contrastive\n  Self-supervision",
        "authors": [
            "Chenxiang Jin",
            "Jiajun Zhou",
            "Chenxuan Xie",
            "Shanqing Yu",
            "Qi Xuan",
            "Xiaoniu Yang"
        ],
        "published_date": "2024-08-01T15:30:43Z",
        "abstract": "The rampant fraudulent activities on Ethereum hinder the healthy development\nof the blockchain ecosystem, necessitating the reinforcement of regulations.\nHowever, multiple imbalances involving account interaction frequencies and\ninteraction types in the Ethereum transaction environment pose significant\nchallenges to data mining-based fraud detection research. To address this, we\nfirst propose the concept of meta-interactions to refine interaction behaviors\nin Ethereum, and based on this, we present a dual self-supervision enhanced\nEthereum fraud detection framework, named Meta-IFD. This framework initially\nintroduces a generative self-supervision mechanism to augment the interaction\nfeatures of accounts, followed by a contrastive self-supervision mechanism to\ndifferentiate various behavior patterns, and ultimately characterizes the\nbehavioral representations of accounts and mines potential fraud risks through\nmulti-view interaction feature learning. Extensive experiments on real Ethereum\ndatasets demonstrate the effectiveness and superiority of our framework in\ndetecting common Ethereum fraud behaviors such as Ponzi schemes and phishing\nscams. Additionally, the generative module can effectively alleviate the\ninteraction distribution imbalance in Ethereum data, while the contrastive\nmodule significantly enhances the framework's ability to distinguish different\nbehavior patterns. The source code will be available in\nhttps://github.com/GISec-Team/Meta-IFD.",
        "paper_url": "http://arxiv.org/abs/2408.00641v3",
        "pdf_url": "http://arxiv.org/pdf/2408.00641v3",
        "categories": [
            "cs.LG"
        ]
    },
    {
        "title": "Maximal Extractable Value Mitigation Approaches in Ethereum and Layer-2\n  Chains: A Comprehensive Survey",
        "authors": [
            "Zeinab Alipanahloo",
            "Abdelhakim Senhaji Hafid",
            "Kaiwen Zhang"
        ],
        "published_date": "2024-07-28T19:51:22Z",
        "abstract": "Maximal Extractable Value (MEV) represents a pivotal challenge within the\nEthereum ecosystem; it impacts the fairness, security, and efficiency of both\nLayer 1 (L1) and Layer 2 (L2) networks. MEV arises when miners or validators\nmanipulate transaction ordering to extract additional value, often at the\nexpense of other network participants. This not only affects user experience by\nintroducing unpredictability and potential financial losses but also threatens\nthe underlying principles of decentralization and trust. Given the growing\ncomplexity of blockchain applications, particularly with the increase of\nDecentralized Finance (DeFi) protocols, addressing MEV is crucial. This paper\npresents a comprehensive survey of MEV mitigation techniques as applied to both\nEthereums L1 and various L2 solutions. We provide a novel categorization of\nmitigation strategies; we also describe the challenges, ranging from\ntransaction sequencing and cryptographic methods to reconfiguring decentralized\napplications (DApps) to reduce front-running opportunities. We investigate\ntheir effectiveness, implementation challenges, and impact on network\nperformance. By synthesizing current research, real-world applications, and\nemerging trends, this paper aims to provide a detailed roadmap for researchers,\ndevelopers, and policymakers to understand and combat MEV in an evolving\nblockchain landscape.",
        "paper_url": "http://arxiv.org/abs/2407.19572v1",
        "pdf_url": "http://arxiv.org/pdf/2407.19572v1",
        "categories": [
            "cs.CR"
        ]
    },
    {
        "title": "Breaking the Balance of Power: Commitment Attacks on Ethereum's Reward\n  Mechanism",
        "authors": [
            "Roozbeh Sarenche",
            "Ertem Nusret Tas",
            "Barnabe Monnot",
            "Caspar Schwarz-Schilling",
            "Bart Preneel"
        ],
        "published_date": "2024-07-28T12:17:17Z",
        "abstract": "Validators in permissionless, large-scale blockchains (e.g., Ethereum) are\ntypically payoff-maximizing, rational actors. Ethereum relies on in-protocol\nincentives, like rewards for validators delivering correct and timely votes, to\ninduce honest behavior and secure the blockchain. However, external incentives,\nsuch as the block proposer's opportunity to capture maximal extractable value\n(MEV), may tempt validators to deviate from honest protocol participation.\n  We show a series of commitment attacks on LMD GHOST, a core part of\nEthereum's consensus mechanism. We demonstrate how a single adversarial block\nproposer can orchestrate long-range chain reorganizations by manipulating\nEthereum's reward system for timely votes. These attacks disrupt the intended\nbalance of power between proposers and voters: by leveraging credible threats,\nthe adversarial proposer can coerce voters from previous slots into supporting\nblocks that conflict with the honest chain, enabling a chain reorganization at\nno cost to the adversary. In response, we introduce a novel reward mechanism\nthat restores the voters' role as a check against proposer power. Our proposed\nmitigation is fairer and more decentralized -- not only in the context of these\nattacks -- but also practical for implementation in Ethereum.",
        "paper_url": "http://arxiv.org/abs/2407.19479v1",
        "pdf_url": "http://arxiv.org/pdf/2407.19479v1",
        "categories": [
            "cs.CR"
        ]
    },
    {
        "title": "Vulnerability Detection in Ethereum Smart Contracts via Machine\n  Learning: A Qualitative Analysis",
        "authors": [
            "Dalila Ressi",
            "Alvise Spanò",
            "Lorenzo Benetollo",
            "Carla Piazza",
            "Michele Bugliesi",
            "Sabina Rossi"
        ],
        "published_date": "2024-07-26T10:09:44Z",
        "abstract": "Smart contracts are central to a myriad of critical blockchain applications,\nfrom financial transactions to supply chain management. However, their adoption\nis hindered by security vulnerabilities that can result in significant\nfinancial losses. Most vulnerability detection tools and methods available\nnowadays leverage either static analysis methods or machine learning.\nUnfortunately, as valuable as they are, both approaches suffer from limitations\nthat make them only partially effective. In this survey, we analyze the state\nof the art in machine-learning vulnerability detection for Ethereum smart\ncontracts, by categorizing existing tools and methodologies, evaluating them,\nand highlighting their limitations. Our critical assessment unveils issues such\nas restricted vulnerability coverage and dataset construction flaws, providing\nus with new metrics to overcome the difficulties that restrain a sound\ncomparison of existing solutions. Driven by our findings, we discuss best\npractices to enhance the accuracy, scope, and efficiency of vulnerability\ndetection in smart contracts. Our guidelines address the known flaws while at\nthe same time opening new avenues for research and development. By shedding\nlight on current challenges and offering novel directions for improvement, we\ncontribute to the advancement of secure smart contract development and\nblockchain technology as a whole.",
        "paper_url": "http://arxiv.org/abs/2407.18639v1",
        "pdf_url": "http://arxiv.org/pdf/2407.18639v1",
        "categories": [
            "cs.CR",
            "cs.LG"
        ]
    },
    {
        "title": "On the Design of Ethereum Data Availability Sampling: A Comprehensive\n  Simulation Study",
        "authors": [
            "Arunima Chaudhuri",
            "Sudipta Basak",
            "Csaba Kiraly",
            "Dmitriy Ryajov",
            "Leonardo Bautista-Gomez"
        ],
        "published_date": "2024-07-25T14:47:41Z",
        "abstract": "This paper presents an in-depth exploration of Data Availability Sampling\n(DAS) and sharding mechanisms within decentralized systems through\nsimulation-based analysis. DAS, a pivotal concept in blockchain technology and\ndecentralized networks, is thoroughly examined to unravel its intricacies and\nassess its impact on system performance. Through the development of a simulator\ntailored explicitly for DAS, we embark on a comprehensive investigation into\nthe parameters that influence system behavior and efficiency. A series of\nexperiments are conducted within the simulated environment to validate\ntheoretical formulations and dissect the interplay of DAS parameters. This\nincludes an exploration of approaches such as custody by row, variations in\nvalidators per node, and malicious nodes. The outcomes of these experiments\nfurnish insights into the efficacy of DAS protocols and pave the way for the\nformulation of optimization strategies geared towards enhancing decentralized\nnetwork performance. Moreover, the findings serve as guidelines for future\nresearch endeavors, offering a nuanced understanding of the complexities\ninherent in decentralized systems. This study not only contributes to the\ntheoretical understanding of DAS but also offers practical implications for the\ndesign, implementation, and optimization of decentralized systems.",
        "paper_url": "http://arxiv.org/abs/2407.18085v1",
        "pdf_url": "http://arxiv.org/pdf/2407.18085v1",
        "categories": [
            "cs.CR"
        ]
    },
    {
        "title": "Versioned Analysis of Software Quality Indicators and Self-admitted\n  Technical Debt in Ethereum Smart Contracts with Ethstractor",
        "authors": [
            "Khalid Hassan",
            "Saeed Moradi",
            "Shaiful Chowdhury",
            "Sara Rouhani"
        ],
        "published_date": "2024-07-22T18:27:29Z",
        "abstract": "The rise of decentralized applications (dApps) has made smart contracts\nimperative components of blockchain technology. As many smart contracts process\nfinancial transactions, their security is paramount. Moreover, the immutability\nof blockchains makes vulnerabilities in smart contracts particularly\nchallenging because it requires deploying a new version of the contract at a\ndifferent address, incurring substantial fees paid in Ether. This paper\nproposes Ethstractor, the first smart contract collection tool for gathering a\ndataset of versioned smart contracts. The collected dataset is then used to\nevaluate the reliability of code metrics as indicators of vulnerabilities in\nsmart contracts. Our findings indicate that code metrics are ineffective in\nsignalling the presence of vulnerabilities. Furthermore, we investigate whether\nvulnerabilities in newer versions of smart contracts are mitigated and identify\nthat the number of vulnerabilities remains consistent over time. Finally, we\nexamine the removal of self-admitted technical debt in contracts and uncover\nthat most of the introduced debt has never been subsequently removed.",
        "paper_url": "http://arxiv.org/abs/2407.15967v1",
        "pdf_url": "http://arxiv.org/pdf/2407.15967v1",
        "categories": [
            "cs.DC",
            "cs.CR",
            "cs.SE"
        ]
    },
    {
        "title": "Quantifying the Blockchain Trilemma: A Comparative Analysis of Algorand,\n  Ethereum 2.0, and Beyond",
        "authors": [
            "Yihang Fu",
            "Mingwei Jing",
            "Jiaolun Zhou",
            "Peilin Wu",
            "Ye Wang",
            "Luyao Zhang",
            "Chuang Hu"
        ],
        "published_date": "2024-07-19T14:15:29Z",
        "abstract": "Blockchain technology is essential for the digital economy and metaverse,\nsupporting applications from decentralized finance to virtual assets. However,\nits potential is constrained by the \"Blockchain Trilemma,\" which necessitates\nbalancing decentralization, security, and scalability. This study evaluates and\ncompares two leading proof-of-stake (PoS) systems, Algorand and Ethereum 2.0,\nagainst these critical metrics. Our research interprets existing indices to\nmeasure decentralization, evaluates scalability through transactional data, and\nassesses security by identifying potential vulnerabilities. Utilizing\nreal-world data, we analyze each platform's strategies in a structured manner\nto understand their effectiveness in addressing trilemma challenges. The\nfindings highlight each platform's strengths and propose general methodologies\nfor evaluating key blockchain characteristics applicable to other systems. This\nresearch advances the understanding of blockchain technologies and their\nimplications for the future digital economy. Data and code are available on\nGitHub as open source.",
        "paper_url": "http://arxiv.org/abs/2407.14335v1",
        "pdf_url": "http://arxiv.org/pdf/2407.14335v1",
        "categories": [
            "econ.GN",
            "cs.CE",
            "cs.CR",
            "q-fin.CP",
            "q-fin.EC",
            "stat.CO"
        ]
    },
    {
        "title": "Who Wins Ethereum Block Building Auctions and Why?",
        "authors": [
            "Burak Öz",
            "Danning Sui",
            "Thomas Thiery",
            "Florian Matthes"
        ],
        "published_date": "2024-07-18T22:49:37Z",
        "abstract": "The MEV-Boost block auction contributes approximately 90% of all Ethereum\nblocks. Between October 2023 and March 2024, only three builders produced 80%\nof them, highlighting the concentration of power within the block builder\nmarket. To foster competition and preserve Ethereum's decentralized ethos and\ncensorship-resistance properties, understanding the dominant players'\ncompetitive edges is essential.\n  In this paper, we identify features that play a significant role in builders'\nability to win blocks and earn profits by conducting a comprehensive empirical\nanalysis of MEV-Boost auctions over a six-month period. We reveal that block\nmarket share positively correlates with order flow diversity, while\nprofitability correlates with access to order flow from Exclusive Providers,\nsuch as integrated searchers and external providers with exclusivity deals.\nAdditionally, we show a positive correlation between market share and profit\nmargin among the top ten builders, with features such as exclusive signal,\nnon-atomic arbitrages, and Telegram bot flow strongly correlating with both\nmetrics. This highlights a \"chicken-and-egg\" problem where builders need\ndifferentiated order flow to profit, but only receive such flow if they have a\nsignificant market share. Overall, this work provides an in-depth analysis of\nthe key features driving the builder market towards centralization and offers\nvaluable insights for designing further iterations of Ethereum block auctions,\npreserving Ethereum's censorship resistance properties.",
        "paper_url": "http://arxiv.org/abs/2407.13931v1",
        "pdf_url": "http://arxiv.org/pdf/2407.13931v1",
        "categories": [
            "cs.CE",
            "cs.CR"
        ]
    },
    {
        "title": "Investigating shocking events in the Ethereum stablecoin ecosystem\n  through temporal multilayer graph structure",
        "authors": [
            "Cheick Tidiane Ba",
            "Richard G. Clegg",
            "Ben A. Steer",
            "Matteo Zignani"
        ],
        "published_date": "2024-07-15T10:58:18Z",
        "abstract": "In the dynamic landscape of the Web, we are witnessing the emergence of the\nWeb3 paradigm, which dictates that platforms should rely on blockchain\ntechnology and cryptocurrencies to sustain themselves and their profitability.\nCryptocurrencies are characterised by high market volatility and susceptibility\nto substantial crashes, issues that require temporal analysis methodologies\nable to tackle the high temporal resolution, heterogeneity and scale of\nblockchain data. While existing research attempts to analyse crash events,\nfundamental questions persist regarding the optimal time scale for analysis,\ndifferentiation between long-term and short-term trends, and the identification\nand characterisation of shock events within these decentralised systems. This\npaper addresses these issues by examining cryptocurrencies traded on the\nEthereum blockchain, with a spotlight on the crash of the stablecoin TerraUSD\nand the currency LUNA designed to stabilise it. Utilising complex network\nanalysis and a multi-layer temporal graph allows the study of the correlations\nbetween the layers representing the currencies and system evolution across\ndiverse time scales. The investigation sheds light on the strong\ninterconnections among stablecoins pre-crash and the significant post-crash\ntransformations. We identify anomalous signals before, during, and after the\ncollapse, emphasising their impact on graph structure metrics and user movement\nacross layers. This paper pioneers temporal, cross-chain graph analysis to\nexplore a cryptocurrency collapse. It emphasises the importance of temporal\nanalysis for studies on web-derived data and how graph-based analysis can\nenhance traditional econometric results. Overall, this research carries\nimplications beyond its field, for example for regulatory agencies aiming to\nsafeguard users from shocks and monitor investment risks for citizens and\nclients.",
        "paper_url": "http://arxiv.org/abs/2407.10614v1",
        "pdf_url": "http://arxiv.org/pdf/2407.10614v1",
        "categories": [
            "cs.SI"
        ]
    },
    {
        "title": "BriDe Arbitrager: Enhancing Arbitrage in Ethereum 2.0 via\n  Bribery-enabled Delayed Block Production",
        "authors": [
            "Hulin Yang",
            "Mingzhe Li",
            "Jin Zhang",
            "Alia Asheralieva",
            "Qingsong Wei",
            "Siow Mong Rick Goh"
        ],
        "published_date": "2024-07-11T14:26:31Z",
        "abstract": "The advent of Ethereum 2.0 has introduced significant changes, particularly\nthe shift to Proof-of-Stake consensus. This change presents new opportunities\nand challenges for arbitrage. Amidst these changes, we introduce BriDe\nArbitrager, a novel tool designed for Ethereum 2.0 that leverages\nBribery-driven attacks to Delay block production and increase arbitrage gains.\nThe main idea is to allow malicious proposers to delay block production by\nbribing validators/proposers, thereby gaining more time to identify arbitrage\nopportunities. Through analysing the bribery process, we design an adaptive\nbribery strategy. Additionally, we propose a Delayed Transaction Ordering\nAlgorithm to leverage the delayed time to amplify arbitrage profits for\nmalicious proposers. To ensure fairness and automate the bribery process, we\ndesign and implement a bribery smart contract and a bribery client. As a\nresult, BriDe Arbitrager enables adversaries controlling a limited (< 1/4)\nfraction of the voting powers to delay block production via bribery and\narbitrage more profit. Extensive experimental results based on Ethereum\nhistorical transactions demonstrate that BriDe Arbitrager yields an average of\n8.66 ETH (16,442.23 USD) daily profits. Furthermore, our approach does not\ntrigger any slashing mechanisms and remains effective even under Proposer\nBuilder Separation and other potential mechanisms will be adopted by Ethereum.",
        "paper_url": "http://arxiv.org/abs/2407.08537v1",
        "pdf_url": "http://arxiv.org/pdf/2407.08537v1",
        "categories": [
            "cs.NI",
            "cs.CR"
        ]
    },
    {
        "title": "Electricity Consumption of Ethereum and Filecoin: Advances in Models and\n  Estimates",
        "authors": [
            "Elitsa Pankovska",
            "Ashish Rajendra Sai",
            "Harald Vranken",
            "Alan Ransil"
        ],
        "published_date": "2024-07-04T12:28:28Z",
        "abstract": "The high electricity consumption of cryptocurrencies that rely on\nproof-of-work (PoW) consensus algorithms has raised serious environmental\nconcerns due to its association with carbon emissions and strain on energy\ngrids. There has been significant research into estimating the electricity\nconsumption of PoW-based cryptocurrencies and developing alternatives to PoW.\n  In this article, we introduce refined models to estimate the electricity\nconsumption of two prominent alternatives: Ethereum, now utilizing\nproof-of-stake (PoS), and Filecoin, which employs proof-of-spacetime (PoSt).\nEthereum stands as a leading blockchain platform for crafting decentralized\napplications, whereas Filecoin is recognized as the world's foremost\ndecentralized data storage network.\n  Prior studies for modeling electricity consumption have been criticized for\nmethodological flaws and shortcomings, low-quality data, and unvalidated\nassumptions. We improve on this in several ways: we obtain more novel,\nvalidated data from the systems in question, extract information from existing\ndata and research, and we improve transparency and reproducibility by clearly\nexplaining and documenting the used methodology and explicitly stating\nunavoidable limitations and assumptions made. When comparing the current, most\nprominent models for Ethereum and Filecoin to our refined models, we find that\ngiven the wide error margins of both the refined models and the ones introduced\nin prior literature, the resulting average estimates are to a large extent in\nline with each other.",
        "paper_url": "http://arxiv.org/abs/2407.14519v1",
        "pdf_url": "http://arxiv.org/pdf/2407.14519v1",
        "categories": [
            "cs.DC"
        ]
    },
    {
        "title": "Dual-view Aware Smart Contract Vulnerability Detection for Ethereum",
        "authors": [
            "Jiacheng Yao",
            "Maolin Wang",
            "Wanqi Chen",
            "Chengxiang Jin",
            "Jiajun Zhou",
            "Shanqing Yu",
            "Qi Xuan"
        ],
        "published_date": "2024-06-29T06:47:51Z",
        "abstract": "The wide application of Ethereum technology has brought technological\ninnovation to traditional industries. As one of Ethereum's core applications,\nsmart contracts utilize diverse contract codes to meet various functional needs\nand have gained widespread use. However, the non-tamperability of smart\ncontracts, coupled with vulnerabilities caused by natural flaws or human\nerrors, has brought unprecedented challenges to blockchain security. Therefore,\nin order to ensure the healthy development of blockchain technology and the\nstability of the blockchain community, it is particularly important to study\nthe vulnerability detection techniques for smart contracts. In this paper, we\npropose a Dual-view Aware Smart Contract Vulnerability Detection Framework\nnamed DVDet. The framework initially converts the source code and bytecode of\nsmart contracts into weighted graphs and control flow sequences, capturing\npotential risk features from these two perspectives and integrating them for\nanalysis, ultimately achieving effective contract vulnerability detection.\nComprehensive experiments on the Ethereum dataset show that our method\noutperforms others in detecting vulnerabilities.",
        "paper_url": "http://arxiv.org/abs/2407.00336v1",
        "pdf_url": "http://arxiv.org/pdf/2407.00336v1",
        "categories": [
            "cs.CR",
            "cs.LG"
        ]
    },
    {
        "title": "Soley: Identification and Automated Detection of Logic Vulnerabilities\n  in Ethereum Smart Contracts Using Large Language Models",
        "authors": [
            "Majd Soud",
            "Waltteri Nuutinen",
            "Grischa Liebel"
        ],
        "published_date": "2024-06-24T00:15:18Z",
        "abstract": "Modern blockchain, such as Ethereum, supports the deployment and execution of\nso-called smart contracts, autonomous digital programs with significant value\nof cryptocurrency. Executing smart contracts requires gas costs paid by users,\nwhich define the limits of the contract's execution. Logic vulnerabilities in\nsmart contracts can lead to financial losses, and are often the root cause of\nhigh-impact cyberattacks. Our objective is threefold: (i) empirically\ninvestigate logic vulnerabilities in real-world smart contracts extracted from\ncode changes on GitHub, (ii) introduce Soley, an automated method for detecting\nlogic vulnerabilities in smart contracts, leveraging Large Language Models\n(LLMs), and (iii) examine mitigation strategies employed by smart contract\ndevelopers to address these vulnerabilities in real-world scenarios. We\nobtained smart contracts and related code changes from GitHub. To address the\nfirst and third objectives, we qualitatively investigated available logic\nvulnerabilities using an open coding method. We identified these\nvulnerabilities and their mitigation strategies. For the second objective, we\nextracted various logic vulnerabilities, applied preprocessing techniques, and\nimplemented and trained the proposed Soley model. We evaluated Soley along with\nthe performance of various LLMs and compared the results with the\nstate-of-the-art baseline on the task of logic vulnerability detection. From\nour analysis, we identified nine novel logic vulnerabilities, extending\nexisting taxonomies with these vulnerabilities. Furthermore, we introduced\nseveral mitigation strategies extracted from observed developer modifications\nin real-world scenarios. Our Soley method outperforms existing methods in\nautomatically identifying logic vulnerabilities. Interestingly, the efficacy of\nLLMs in this task was evident without requiring extensive feature engineering.",
        "paper_url": "http://arxiv.org/abs/2406.16244v1",
        "pdf_url": "http://arxiv.org/pdf/2406.16244v1",
        "categories": [
            "cs.ET",
            "cs.CR"
        ]
    },
    {
        "title": "MEV Ecosystem Evolution From Ethereum 1.0",
        "authors": [
            " Rasheed",
            "Yash Chaurasia",
            "Parth Desai",
            "Sujit Gujar"
        ],
        "published_date": "2024-06-19T14:22:26Z",
        "abstract": "Smart contracts led to the emergence of the decentralized finance (DeFi)\nmarketplace within blockchain ecosystems, where diverse participants engage in\nfinancial activities. In traditional finance, there are possibilities to create\nvalues, e.g., arbitrage offers to create value from market inefficiencies or\nfront-running offers to extract value for the participants having privileged\nroles. Such opportunities are readily available -- searching programmatically\nin DeFi. It is commonly known as Maximal Extractable Value (MEV) in the\nliterature. In this survey, first, we show how lucrative such opportunities can\nbe. Next, we discuss how protocol-following participants trying to capture such\nopportunities threaten to sabotage blockchain's performance and the core tenets\nof decentralization, transparency, and trustlessness that blockchains are based\non. Then, we explain different attempts by the community in the past to address\nthese issues and the problems introduced by these solutions. Finally, we review\nthe current state of research trying to restore trustlessness and\ndecentralization to provide all DeFi participants with a fair marketplace.",
        "paper_url": "http://arxiv.org/abs/2406.13585v1",
        "pdf_url": "http://arxiv.org/pdf/2406.13585v1",
        "categories": [
            "cs.CR"
        ]
    },
    {
        "title": "Gas Fees on the Ethereum Blockchain: From Foundations to Derivatives\n  Valuations",
        "authors": [
            "Bernhard K Meister",
            "Henry CW Price"
        ],
        "published_date": "2024-06-10T17:59:46Z",
        "abstract": "The gas fee, paid for inclusion in the blockchain, is analyzed in two parts.\nFirst, we consider how effort in terms of resources required to process and\nstore a transaction turns into a gas limit, which, through a fee, comprised of\nthe base and priority fee in the current version of Ethereum, is converted into\nthe cost paid by the user. We adhere closely to the Ethereum protocol to\nsimplify the analysis and to constrain the design choices when considering\nmultidimensional gas. Second, we assume that the gas price is given deus ex\nmachina by a fractional Ornstein-Uhlenbeck process and evaluate various\nderivatives. These contracts can, for example, mitigate gas cost volatility.\nThe ability to price and trade forwards besides the existing spot inclusion\ninto the blockchain could enable users to hedge against future cost\nfluctuations. Overall, this paper offers a comprehensive analysis of gas fee\ndynamics on the Ethereum blockchain, integrating supply-side constraints with\ndemand-side modelling to enhance the predictability and stability of\ntransaction costs.",
        "paper_url": "http://arxiv.org/abs/2406.06524v2",
        "pdf_url": "http://arxiv.org/pdf/2406.06524v2",
        "categories": [
            "q-fin.PM",
            "q-fin.GN"
        ]
    },
    {
        "title": "Towards Effective Detection of Ponzi schemes on Ethereum with Contract\n  Runtime Behavior Graph",
        "authors": [
            "Ruichao Liang",
            "Jing Chen",
            "Cong Wu",
            "Kun He",
            "Yueming Wu",
            "Weisong Sun",
            "Ruiying Du",
            "Qingchuan Zhao",
            "Yang Liu"
        ],
        "published_date": "2024-06-03T01:17:48Z",
        "abstract": "Ponzi schemes, a form of scam, have been discovered in Ethereum smart\ncontracts in recent years, causing massive financial losses. Existing detection\nmethods primarily focus on rule-based approaches and machine learning\ntechniques that utilize static information as features. However, these methods\nhave significant limitations. Rule-based approaches rely on pre-defined rules\nwith limited capabilities and domain knowledge dependency. Using static\ninformation like opcodes for machine learning fails to effectively characterize\nPonzi contracts, resulting in poor reliability and interpretability. Moreover,\nrelying on static information like transactions for machine learning requires a\ncertain number of transactions to achieve detection, which limits the\nscalability of detection and hinders the identification of 0-day Ponzi schemes.\n  In this paper, we propose PonziGuard, an efficient Ponzi scheme detection\napproach based on contract runtime behavior. Inspired by the observation that a\ncontract's runtime behavior is more effective in disguising Ponzi contracts\nfrom the innocent contracts, PonziGuard establishes a comprehensive graph\nrepresentation called contract runtime behavior graph (CRBG), to accurately\ndepict the behavior of Ponzi contracts. Furthermore, it formulates the\ndetection process as a graph classification task on CRBG, enhancing its overall\neffectiveness. The experiment results show that PonziGuard surpasses the\ncurrent state-of-the-art approaches in the ground-truth dataset. We applied\nPonziGuard to Ethereum Mainnet and demonstrated its effectiveness in real-world\nscenarios. Using PonziGuard, we identified 805 Ponzi contracts on Ethereum\nMainnet, which have resulted in an estimated economic loss of 281,700 Ether or\napproximately $500 million USD. We also found 0-day Ponzi schemes in the\nrecently deployed 10,000 smart contracts.",
        "paper_url": "http://arxiv.org/abs/2406.00921v1",
        "pdf_url": "http://arxiv.org/pdf/2406.00921v1",
        "categories": [
            "cs.SE"
        ]
    },
    {
        "title": "GasTrace: Detecting Sandwich Attack Malicious Accounts in Ethereum",
        "authors": [
            "Zekai Liu",
            "Xiaoqi Li",
            "Hongli Peng",
            "Wenkai Li"
        ],
        "published_date": "2024-05-30T11:55:21Z",
        "abstract": "The openness and transparency of Ethereum transaction data make it easy to be\nexploited by any entities, executing malicious attacks. The sandwich attack\nmanipulates the Automated Market Maker (AMM) mechanism, profiting from\nmanipulating the market price through front or after-running transactions. To\nidentify and prevent sandwich attacks, we propose a cascade classification\nframework GasTrace. GasTrace analyzes various transaction features to detect\nmalicious accounts, notably through the analysis and modeling of Gas features.\nIn the initial classification, we utilize the Support Vector Machine (SVM) with\nthe Radial Basis Function (RBF) kernel to generate the predicted probabilities\nof accounts, further constructing a detailed transaction network. Subsequently,\nthe behavior features are captured by the Graph Attention Network (GAT)\ntechnique in the second classification. Through cascade classification,\nGasTrace can analyze and classify the sandwich attacks. Our experimental\nresults demonstrate that GasTrace achieves a remarkable detection and\ngeneration capability, performing an accuracy of 96.73% and an F1 score of\n95.71% for identifying sandwich attack accounts.",
        "paper_url": "http://arxiv.org/abs/2405.19971v2",
        "pdf_url": "http://arxiv.org/pdf/2405.19971v2",
        "categories": [
            "cs.CR",
            "cs.LG"
        ]
    },
    {
        "title": "Remeasuring the Arbitrage and Sandwich Attacks of Maximal Extractable\n  Value in Ethereum",
        "authors": [
            "Tianyang Chi",
            "Ningyu He",
            "Xiaohui Hu",
            "Haoyu Wang"
        ],
        "published_date": "2024-05-28T08:17:15Z",
        "abstract": "Maximal Extractable Value (MEV) drives the prosperity of the blockchain\necosystem. By strategically including, excluding, or reordering transactions\nwithin blocks, block producers can extract additional value, which in turn\nincentivizes them to keep the decentralization of the whole blockchain\nplatform. Before September 2022, around $675M was extracted in terms of MEV in\nEthereum. Despite its importance, current work on identifying MEV activities\nsuffers from two limitations. On the one hand, current methods heavily rely on\nclumsy heuristic rule-based patterns, leading to numerous false negatives or\npositives. On the other hand, the observations and conclusions are drawn from\nthe early stage of Ethereum, which cannot be used as effective guiding\nprinciples after The Merge. To address these challenges, in this work, we\ninnovatively proposed a profitability identification algorithm. Based on this,\nwe designed two robust algorithms to identify MEV activities on our collected\nlargest-ever dataset. Based on the identified results, we have characterized\nthe overall landscape of the Ethereum MEV ecosystem, the impact the private\ntransaction architectures bring in, and the adoption of back-running\nmechanisms. Our research sheds light on future MEV-related work.",
        "paper_url": "http://arxiv.org/abs/2405.17944v2",
        "pdf_url": "http://arxiv.org/pdf/2405.17944v2",
        "categories": [
            "cs.CR"
        ]
    },
    {
        "title": "Flashback: Enhancing Proposer-Builder Design with Future-Block Auctions\n  in Proof-of-Stake Ethereum",
        "authors": [
            "Yifan Mao",
            "Mengya Zhang",
            "Shaileshh Bojja Venkatakrishnan",
            "Zhiqiang Lin"
        ],
        "published_date": "2024-05-15T15:58:21Z",
        "abstract": "Maximal extractable value (MEV) in which block proposers unethically gain\nprofits by manipulating the order in which transactions are included within a\nblock, is a key challenge facing blockchains such as Ethereum today. Left\nunchecked, MEV can lead to a centralization of stake distribution thereby\nultimately compromising the security of blockchain consensus. To preserve\nproposer decentralization (and hence security) of the blockchain, Ethereum has\nadvocated for a proposer-builder separation (PBS) in which the functionality of\ntransaction ordering is separated from proposers and assigned to separate\nentities called builders. Builders accept transaction bundles from searchers,\nwho compete to find the most profitable bundles. Builders then bid completed\nblocks to proposers, who accept the most profitable blocks for publication. The\nauction mechanisms used between searchers, builders and proposers are crucial\nto the overall health of the blockchain. In this paper, we consider PBS design\nin Ethereum as a game between searchers, builders and proposers. A key novelty\nin our design is the inclusion of future block proposers, as all proposers of\nan epoch are decided ahead of time in proof-of-stake (PoS) Ethereum within the\ngame model. Our analysis shows the existence of alternative auction mechanisms\nthat result in a better (more profitable) equilibrium to players compared to\nstate-of-the-art. Experimental evaluations based on synthetic and real-world\ndata traces corroborate the analysis. Our results highlight that a rethinking\nof auction mechanism designs is necessary in PoS Ethereum to prevent\ndisruption.",
        "paper_url": "http://arxiv.org/abs/2405.09465v1",
        "pdf_url": "http://arxiv.org/pdf/2405.09465v1",
        "categories": [
            "cs.CR"
        ]
    },
    {
        "title": "Facilitating Feature and Topology Lightweighting: An Ethereum\n  Transaction Graph Compression Method for Malicious Account Detection",
        "authors": [
            "Jiajun Zhou",
            "Xuanze Chen",
            "Shengbo Gong",
            "Chenkai Hu",
            "Chengxiang Jin",
            "Shanqing Yu",
            "Qi Xuan"
        ],
        "published_date": "2024-05-14T02:21:20Z",
        "abstract": "Ethereum has become one of the primary global platforms for cryptocurrency,\nplaying an important role in promoting the diversification of the financial\necosystem. However, the relative lag in regulation has led to a proliferation\nof malicious activities in Ethereum, posing a serious threat to fund security.\nExisting regulatory methods usually detect malicious accounts through feature\nengineering or large-scale transaction graph mining. However, due to the\nimmense scale of transaction data and malicious attacks, these methods suffer\nfrom inefficiency and low robustness during data processing and anomaly\ndetection. In this regard, we propose an Ethereum Transaction Graph Compression\nmethod named TGC4Eth, which assists malicious account detection by\nlightweighting both features and topology of the transaction graph. At the\nfeature level, we select transaction features based on their low importance to\nimprove the robustness of the subsequent detection models against feature\nevasion attacks; at the topology level, we employ focusing and coarsening\nprocesses to compress the structure of the transaction graph, thereby improving\nboth data processing and inference efficiency of detection models. Extensive\nexperiments demonstrate that TGC4Eth significantly improves the computational\nefficiency of existing detection models while preserving the connectivity of\nthe transaction graph. Furthermore, TGC4Eth enables existing detection models\nto maintain stable performance and exhibit high robustness against feature\nevasion attacks.",
        "paper_url": "http://arxiv.org/abs/2405.08278v3",
        "pdf_url": "http://arxiv.org/pdf/2405.08278v3",
        "categories": [
            "cs.CR",
            "cs.SI"
        ]
    },
    {
        "title": "Implementation Study of Cost-Effective Verification for Pietrzak's\n  Verifiable Delay Function in Ethereum Smart Contracts",
        "authors": [
            "Suhyeon Lee",
            "Euisin Gee",
            "Junghee Lee"
        ],
        "published_date": "2024-05-10T14:21:08Z",
        "abstract": "Verifiable Delay Function (VDF) is a cryptographic concept that ensures a\nminimum delay before output through sequential processing, which is resistant\nto parallel computing. One of the significant VDF protocols academically\nreviewed is the VDF protocol proposed by Pietrzak. However, for the blockchain\nenvironment, the Pietrzak VDF has drawbacks including long proof size and\nrecursive protocol computation. In this paper, we present an implementation\nstudy of Pietrzak VDF verification on Ethereum Virtual Machine (EVM). We found\nthat the discussion in the Pietrzak's original paper can help a clear\noptimization in EVM where the costs of computation are predefined as the\nspecific amounts of gas. In our results, the cost of VDF verification can be\nreduced from 4M to 2M gas, and the proof length can be generated under 8 KB\nwith the 2048-bit RSA key length, which is much smaller than the previous\nexpectation.",
        "paper_url": "http://arxiv.org/abs/2405.06498v5",
        "pdf_url": "http://arxiv.org/pdf/2405.06498v5",
        "categories": [
            "cs.CR"
        ]
    },
    {
        "title": "Self-Replicating and Self-Employed Smart Contract on Ethereum Blockchain",
        "authors": [
            "Atsushi Masumori",
            "Norihiro Maruyama",
            "Takashi Ikegami"
        ],
        "published_date": "2024-05-07T06:17:06Z",
        "abstract": "Blockchain is the underlying technology for cryptocurrencies such as Bitcoin.\nBlockchain is a robust distributed ledger that uses consensus algorithms to\napprove transactions in a decentralized manner, making malicious tampering\nextremely difficult. Ethereum, one of the blockchains, can be seen as an\nunstoppable computer which shared by users around the world that can run\nTuring-complete programs. In order to run any program on Ethereum, Ether\n(currency on Ethereum) is required. In other words, Ether can be seen as a kind\nof energy in the Ethereum world. We developed self-replicating and\nself-employed agents who earn the energy by themselves to replicate them, on\nthe Ethereum blockchain. The agents can issued their token and gain Ether each\ntime the tokens are sold. When a certain amount of Ether is accumulated, the\nagent replicates itself and leaves offspring. The goal of this project is to\nimplement artificial agents that lives for itself, not as a tool for humans, in\nthe open cyber space connected to the real world.",
        "paper_url": "http://arxiv.org/abs/2405.04038v1",
        "pdf_url": "http://arxiv.org/pdf/2405.04038v1",
        "categories": [
            "cs.NE"
        ]
    },
    {
        "title": "A Game Theoretic Analysis of Validator Strategies in Ethereum 2.0",
        "authors": [
            "Chien-Chih Chen",
            "Wojciech Golab"
        ],
        "published_date": "2024-05-06T11:07:33Z",
        "abstract": "Ethereum 2.0 is the second-largest cryptocurrency by market capitalization\nand a widely used smart contract platform. Therefore, examining the reliability\nof Ethereum 2.0's incentive mechanism is crucial, particularly its\neffectiveness in encouraging validators to adhere to the Ethereum 2.0's\nprotocol. This paper studies the incentive mechanism of Ethereum 2.0 and\nevaluates its robustness by analyzing the interaction between block proposers\nand attesters in a single slot. To this end, we use Bayesian games to model the\nstrategies of block proposers and attesters and calculate their expected\nutilities. Our results demonstrate that the Ethereum 2.0 incentive mechanism is\nincentive-compatible and promotes cooperation among validators. We prove that a\nBayesian Nash equilibrium and an ex ante dominant strategy exist between the\nblock proposer and attesters in a single slot. Our research provides a solid\nfoundation for further analysis of Ethereum 2.0's incentive mechanism and\ninsights for individuals considering participation as a validator in Ethereum\n2.0.",
        "paper_url": "http://arxiv.org/abs/2405.03357v2",
        "pdf_url": "http://arxiv.org/pdf/2405.03357v2",
        "categories": [
            "cs.GT",
            "91A27",
            "C.2.4; G.3"
        ]
    },
    {
        "title": "Impact of EIP-4844 on Ethereum: Consensus Security, Ethereum Usage,\n  Rollup Transaction Dynamics, and Blob Gas Fee Markets",
        "authors": [
            "Seongwan Park",
            "Bosul Mun",
            "Seungyun Lee",
            "Woojin Jeong",
            "Jaewook Lee",
            "Hyeonsang Eom",
            "Huisu Jang"
        ],
        "published_date": "2024-05-06T06:18:53Z",
        "abstract": "On March 13, 2024, Ethereum implemented EIP-4844, designed to enhance its\nrole as a data availability layer. While this upgrade reduces data posting\ncosts for rollups, it also raises concerns about its impact on the consensus\nlayer due to increased propagation sizes. Moreover, the broader effects on the\noverall Ethereum ecosystem remain largely unexplored. In this paper, we conduct\nan empirical analysis of the impact of EIP-4844 on consensus security, Ethereum\nusage, rollup transaction dynamics, and the blob gas fee mechanism. We explore\nchanges in synchronization times, provide quantitative assessments of rollup\nand user behaviors, and deepen the understanding of the blob gas fee mechanism,\nhighlighting both enhancements and areas of concern post-upgrade.",
        "paper_url": "http://arxiv.org/abs/2405.03183v1",
        "pdf_url": "http://arxiv.org/pdf/2405.03183v1",
        "categories": [
            "cs.DC",
            "cs.CR",
            "cs.NA",
            "math.NA"
        ]
    },
    {
        "title": "Crypto Market Analysis & Real-Estate Business Protocol Proposal |\n  Application of Ethereum Blockchain",
        "authors": [
            "Sid Bhatia",
            "Samuel Gedal",
            "Himaya Jeyakumar Grace Lee",
            "Ravinder Chopra",
            "Daniel Roman",
            "Shrijani Chakroborty"
        ],
        "published_date": "2024-05-04T03:07:10Z",
        "abstract": "This paper examines the dynamics of the cryptocurrency market and proposes a\nnovel blockchain-based protocol for real estate transactions. Our analysis\nincludes a detailed review of price trends, volatility, and correlations within\nthe cryptocurrency market, focusing on major assets like Bitcoin, Ethereum, and\nTether. We provide a critical assessment of the impact of significant market\nevents, such as the FTX bankruptcy, highlighting the vulnerabilities and\nresilience of the crypto market. The study also explores the potential of\nblockchain technology to innovate real estate transactions by enabling the\nsecure and transparent handling of property deeds without traditional\nintermediaries. We introduce a blockchain protocol that reduces transaction\ncosts, enhances security, and increases transparency, making real estate\ntransactions more accessible and efficient. Our proposal aims to leverage the\ninherent benefits of blockchain to address real-world challenges in real estate\ntransactions, providing a scalable and secure platform for property sales in a\nglobal market.",
        "paper_url": "http://arxiv.org/abs/2405.02547v1",
        "pdf_url": "http://arxiv.org/pdf/2405.02547v1",
        "categories": [
            "econ.GN",
            "q-fin.EC"
        ]
    },
    {
        "title": "Decentralization of Ethereum's Builder Market",
        "authors": [
            "Sen Yang",
            "Kartik Nayak",
            "Fan Zhang"
        ],
        "published_date": "2024-05-02T14:32:21Z",
        "abstract": "Blockchains protect an ecosystem worth more than $500bn with strong security\nproperties derived from the principle of decentralization. Is today's\nblockchain decentralized? In this paper, we empirically studied one of the\nleast decentralized parts of Ethereum, its builder market.\n  The builder market was introduced to fairly distribute Maximal Extractable\nValue (MEV) among validators and avoid validator centralization. As of the time\nof writing, two builders produced more than 85% of blocks in Ethereum, creating\na concerning centralization factor. However, a common belief is that such\ncentralization is okay, arguing that builder centralization will not lead to\nvalidator centralization. In this empirical study, we quantify the significant\nproposer losses within the centralized builder market and challenge the belief\nthat this is acceptable.\n  The significant proposer losses, if left uncontrolled, could undermine the\ngoal of PBS. Moreover, MEV mitigation solutions slated for adoption are\naffected too because they rely on the builder market as an MEV oracle, which is\nmade inaccurate by centralization. Our investigation reveals the incentive\nissue within the current MEV supply chain and its implications for builder\ncentralization and proposer losses. Finally, we analyze why the proposed\nmitigation cannot work and highlight two properties essential for effective\nsolutions.",
        "paper_url": "http://arxiv.org/abs/2405.01329v4",
        "pdf_url": "http://arxiv.org/pdf/2405.01329v4",
        "categories": [
            "cs.CR"
        ]
    },
    {
        "title": "A Fast Confirmation Rule for the Ethereum Consensus Protocol",
        "authors": [
            "Aditya Asgaonkar",
            "Francesco D'Amato",
            "Roberto Saltini",
            "Luca Zanolini",
            "Chenyi Zhang"
        ],
        "published_date": "2024-05-01T14:45:39Z",
        "abstract": "A Confirmation Rule, within blockchain networks, refers to an algorithm\nimplemented by network nodes that determines (either probabilistically or\ndeterministically) the permanence of certain blocks on the blockchain. An\nexample of Confirmation Ruble is the Bitcoin's longest chain Confirmation Rule\nwhere a block $b$ is confirmed (with high probability) when it has a\nsufficiently long chain of successors, its siblings have notably shorter\nsuccessor chains, the majority of the network's total computation power\n(hashing) is controlled by honest nodes, and network synchrony holds.\n  The only Confirmation Rule currently available in the Ethereum protocol,\nGasper, is the FFG Finalization Rule. While this Confirmation Rule works under\nasynchronous network conditions, it is quite slow for many use cases.\nSpecifically, best-case scenario, it takes around 13 to 19 min to confirm a\ntransaction, where the actual figure depends on when the transaction is\nsubmitted to the network.\n  In this work, we devise a Fast Confirmation Rule for Ethereum's consensus\nprotocol. Our Confirmation Rule relies on synchrony conditions, but provides a\nbest-case confirmation time of 12 seconds only, greatly improving on the\nlatency of the FFG Finalization Rule.\n  Users can then rely on the Confirmation Rule that best suits their needs\ndepending on their belief about the network conditions and the need for a quick\nresponse.",
        "paper_url": "http://arxiv.org/abs/2405.00549v2",
        "pdf_url": "http://arxiv.org/pdf/2405.00549v2",
        "categories": [
            "cs.DC"
        ]
    },
    {
        "title": "Byzantine Attacks Exploiting Penalties in Ethereum PoS",
        "authors": [
            "Ulysse Pavloff",
            "Yackolley Amoussou-Genou",
            "Sara Tucci-Piergiovanni"
        ],
        "published_date": "2024-04-25T06:54:35Z",
        "abstract": "In May 2023, the Ethereum blockchain experienced its first inactivity leak, a\nmechanism designed to reinstate chain finalization amid persistent network\ndisruptions. This mechanism aims to reduce the voting power of validators who\nare unreachable within the network, reallocating this power to active\nvalidators. This paper investigates the implications of the inactivity leak on\nsafety within the Ethereum blockchain. Our theoretical analysis reveals\nscenarios where actions by Byzantine validators expedite the finalization of\ntwo conflicting branches, and instances where Byzantine validators reach a\nvoting power exceeding the critical safety threshold of one-third.\nAdditionally, we revisit the probabilistic bouncing attack, illustrating how\nthe inactivity leak can result in a probabilistic breach of safety, potentially\nallowing Byzantine validators to exceed the one-third safety threshold. Our\nfindings uncover how penalizing inactive nodes can compromise blockchain\nproperties, particularly in the presence of Byzantine validators capable of\ncoordinating actions.",
        "paper_url": "http://arxiv.org/abs/2404.16363v2",
        "pdf_url": "http://arxiv.org/pdf/2404.16363v2",
        "categories": [
            "cs.CR",
            "cs.DC"
        ]
    },
    {
        "title": "Towards Proxy Staking Accounts Based on NFTs in Ethereum",
        "authors": [
            "Viktor Valaštín",
            "Roman Bitarovský",
            "Kristián Košťál",
            "Ivan Kotuliak"
        ],
        "published_date": "2024-04-22T10:35:26Z",
        "abstract": "Blockchain is a technology that is often used to share data and assets.\nHowever, in the decentralized ecosystem, blockchain-based systems can be\nutilized to share information and assets without the traditional barriers\nassociated with solo responsibility, e.g., multi-sig wallets. This paper\ndescribes an innovative approach to blockchain networks based on a non-fungible\ntoken that behaves as an account (NFTAA). The key novelty of this article is\nusing NFTAA to leverage the unique properties of NFTs to manage your ownership\nbetter and effectively isolate them to improve the security, transparency, and\neven interoperability possibilities. Additionally, the account-based solution\ngives us the ability and flexibility to cover regular use cases such as staking\nand liquid equities, but also practical composability. This article offers a\nsimple implementation, which allows developers and researchers to choose the\nbest solution for their needs in demand of abstract representation in any use\ncase.",
        "paper_url": "http://arxiv.org/abs/2404.14074v1",
        "pdf_url": "http://arxiv.org/pdf/2404.14074v1",
        "categories": [
            "cs.DC",
            "cs.CR"
        ]
    },
    {
        "title": "Sisu: Decentralized Trustless Bridge For Full Ethereum Node",
        "authors": [
            "Billy Pham",
            "Huy Le"
        ],
        "published_date": "2024-04-16T09:09:58Z",
        "abstract": "In this paper, we present a detailed approach and implementation to prove\nEthereum full node using recursive SNARK, distributed general GKR and Groth16.\nOur protocol's name is Sisu whose architecture is based on distributed Virgo in\nzkBridge with some major improvements. Besides proving signature aggregation,\nwe provide solutions to 2 hard problems in proving Ethereum full node: 1) any\npublic key is valid under previous beacon state and 2) all public keys are\npairwise distinct. Our solution does not require worker-to-worker communication\nand therefore reduce total worker-to-worker network traffic from terabyte of\ndata to zero compared to zkBridge. This makes our approach suitable for\nemerging distributed prover markets and more decentralized compared to\nzkBridge. Our design is highly parallelable and capable of running on GPU for\nmost parts.",
        "paper_url": "http://arxiv.org/abs/2404.10404v2",
        "pdf_url": "http://arxiv.org/pdf/2404.10404v2",
        "categories": [
            "cs.CR"
        ]
    },
    {
        "title": "Unveiling Decentralization: A Comprehensive Review of Technologies,\n  Comparison, Challenges in Bitcoin, Ethereum, and Solana Blockchain",
        "authors": [
            "Han Song",
            "Yihao Wei",
            "Zhongche Qu",
            "Weihan Wang"
        ],
        "published_date": "2024-04-07T07:27:03Z",
        "abstract": "Bitcoin stands as a groundbreaking development in decentralized exchange\nthroughout human history, enabling transactions without the need for\nintermediaries. By leveraging cryptographic proof mechanisms, Bitcoin\neliminates the reliance on third-party financial institutions. Ethereum,\nranking as the second-largest cryptocurrency by market capitalization, builds\nupon Bitcoin's groundwork by introducing smart contracts and decentralized\napplications. Ethereum strives to surpass the limitations of Bitcoin's\nscripting language, achieving full Turing-completeness for executing intricate\ncomputational tasks. Solana introduces a novel architecture for\nhigh-performance blockchain, employing timestamps to validate decentralized\ntransactions and significantly boosting block creation throughput. Through a\ncomprehensive examination of these blockchain technologies, their distinctions,\nand the associated challenges, this paper aims to offer valuable insights and\ncomparative analysis for both researchers and practitioners.",
        "paper_url": "http://arxiv.org/abs/2404.04841v1",
        "pdf_url": "http://arxiv.org/pdf/2404.04841v1",
        "categories": [
            "cs.CR"
        ]
    },
    {
        "title": "Detecting Financial Bots on the Ethereum Blockchain",
        "authors": [
            "Thomas Niedermayer",
            "Pietro Saggese",
            "Bernhard Haslhofer"
        ],
        "published_date": "2024-03-28T16:06:06Z",
        "abstract": "The integration of bots in Distributed Ledger Technologies (DLTs) fosters\nefficiency and automation. However, their use is also associated with predatory\ntrading and market manipulation, and can pose threats to system integrity. It\nis therefore essential to understand the extent of bot deployment in DLTs;\ndespite this, current detection systems are predominantly rule-based and lack\nflexibility. In this study, we present a novel approach that utilizes machine\nlearning for the detection of financial bots on the Ethereum platform. First,\nwe systematize existing scientific literature and collect anecdotal evidence to\nestablish a taxonomy for financial bots, comprising 7 categories and 24\nsubcategories. Next, we create a ground-truth dataset consisting of 133 human\nand 137 bot addresses. Third, we employ both unsupervised and supervised\nmachine learning algorithms to detect bots deployed on Ethereum. The\nhighest-performing clustering algorithm is a Gaussian Mixture Model with an\naverage cluster purity of 82.6%, while the highest-performing model for binary\nclassification is a Random Forest with an accuracy of 83%. Our machine\nlearning-based detection mechanism contributes to understanding the Ethereum\necosystem dynamics by providing additional insights into the current bot\nlandscape.",
        "paper_url": "http://arxiv.org/abs/2403.19530v2",
        "pdf_url": "http://arxiv.org/pdf/2403.19530v2",
        "categories": [
            "cs.CR",
            "cs.LG"
        ]
    },
    {
        "title": "Quantifying Arbitrage in Automated Market Makers: An Empirical Study of\n  Ethereum ZK Rollups",
        "authors": [
            "Krzysztof Gogol",
            "Johnnatan Messias",
            "Deborah Miori",
            "Claudio Tessone",
            "Benjamin Livshits"
        ],
        "published_date": "2024-03-24T10:26:34Z",
        "abstract": "Arbitrage can arise from the simultaneous purchase and sale of the same asset\nin different markets in order to profit from a difference in its price. This\nwork systematically reviews arbitrage opportunities between Automated Market\nMakers (AMMs) on Ethereum ZK rollups, and Centralised Exchanges (CEXs). First,\nwe propose a theoretical framework to measure such arbitrage opportunities and\nderive a formula for the related Maximal Arbitrage Value (MAV) that accounts\nfor both price divergences and liquidity available in the trading venues. Then,\nwe empirically measure the historical MAV available between SyncSwap, an AMM on\nzkSync Era, and Binance, and investigate how quickly misalignments in price are\ncorrected against explicit and implicit market costs. Overall, the cumulative\nMAV from July to September 2023 on the USDC-ETH SyncSwap pool amounts to\n$104.96k (0.24% of trading volume).",
        "paper_url": "http://arxiv.org/abs/2403.16083v2",
        "pdf_url": "http://arxiv.org/pdf/2403.16083v2",
        "categories": [
            "cs.CR"
        ]
    },
    {
        "title": "Exploring Correlation Patterns in the Ethereum Validator Network",
        "authors": [
            "Simon Brown",
            "Leonardo Bautista-Gomez"
        ],
        "published_date": "2024-03-22T16:04:47Z",
        "abstract": "There have been several studies into measuring the level of decentralization\nin Ethereum through applying various indices to indicate the relative dominance\nof entities in different domains in the ecosystem. However, these indices do\nnot capture any correlation between those different entities, that could\npotentially make them the subject of external coercion, or covert collusion. We\npropose an index that measures the relative dominance of entities based on the\napplication of correlation factors. We posit that this approach produces a more\nnuanced and accurate index of decentralization.",
        "paper_url": "http://arxiv.org/abs/2404.02164v1",
        "pdf_url": "http://arxiv.org/pdf/2404.02164v1",
        "categories": [
            "physics.soc-ph",
            "cs.SI"
        ]
    },
    {
        "title": "Towards Single Slot Finality: Evaluating Consensus Mechanisms and\n  Methods for Faster Ethereum Finality",
        "authors": [
            "Lincoln Murr"
        ],
        "published_date": "2024-03-21T11:56:58Z",
        "abstract": "Ethereum's current Gasper consensus mechanism, which combines the Latest\nMessage Driven Greediest Heaviest Observed SubTree (LMD-GHOST) fork choice rule\nwith the probabilistic Casper the Friendly Finality Gadget (FFG) finality\noverlay, finalizes transactions in 64 to 95 blocks, an approximate 15-minute\ndelay. This finalization latency impacts user experience and exposes the\nnetwork to short-term chain reorganization risks, potentially enabling\ntransaction censorship or frontrunning by validators without severe penalties.\nAs the ecosystem pursues a rollup-centric roadmap to scale Ethereum into a\nsecure global settlement layer, faster finality allows cross-layer and\ninter-rollup communication with greater immediacy, reducing capital\ninefficiencies. Single slot finality (SSF), wherein transactions are finalized\nwithin the same slot they are proposed, promises to advance the Ethereum\nprotocol and enable better user experiences by enabling near-instant economic\nfinality. This thesis systematically studies distributed consensus protocols\nthrough propose-vote-merge, PBFT-inspired, and graded agreement families -\nscrutinizing their capacities to enhance or replace LMD-GHOST. The analysis\ndelves into the intricate tradeoffs between safety, liveness, and finality,\nshedding light on the challenges and opportunities in designing an optimal\nconsensus protocol for Ethereum. It also explores different design decisions\nand mechanisms by which single slot or fast finality can be enabled, including\ncumulative finality, subsampling, and application-layer fast finality.\nFurthermore, this work introduces SSF-enabled and streamlined fast finality\nconstructions based on a single-vote total order broadcast protocol. The\ninsights and recommendations in this thesis provide a solid foundation for the\nEthereum community to make informed decisions regarding the future direction of\nthe protocol's consensus.",
        "paper_url": "http://arxiv.org/abs/2406.09420v1",
        "pdf_url": "http://arxiv.org/pdf/2406.09420v1",
        "categories": [
            "cs.DC"
        ]
    },
    {
        "title": "RANDAO-based RNG: Last Revealer Attacks in Ethereum 2.0 Randomness and a\n  Potential Solution",
        "authors": [
            "Do Hai Son",
            "Tran Thi Thuy Quynh",
            "Le Quang Minh"
        ],
        "published_date": "2024-03-14T16:28:33Z",
        "abstract": "Ethereum 2.0 is a major upgrade to improve its scalability, throughput, and\nsecurity. In this version, RANDAO is the scheme to randomly select the users\nwho propose, confirm blocks, and get rewards. However, a vulnerability,\nreferred to as the `Last Revealer Attack' (LRA), compromises the randomness of\nthis scheme by introducing bias to the Random Number Generator (RNG) process.\nThis vulnerability is first clarified again in this study. After that, we\npropose a Shamir's Secret Sharing (SSS)-based RANDAO scheme to mitigate the\nLRA. Through our analysis, the proposed method can prevent the LRA under\nfavorable network conditions.",
        "paper_url": "http://arxiv.org/abs/2403.09541v1",
        "pdf_url": "http://arxiv.org/pdf/2403.09541v1",
        "categories": [
            "cs.CR"
        ]
    },
    {
        "title": "Characterizing Ethereum Upgradable Smart Contracts and Their Security\n  Implications",
        "authors": [
            "Xiaofan Li",
            "Jin Yang",
            "Jiaqi Chen",
            "Yuzhe Tang",
            "Xing Gao"
        ],
        "published_date": "2024-03-02T19:04:20Z",
        "abstract": "Upgradeable smart contracts (USCs) have been widely adopted to enable\nmodifying deployed smart contracts. While USCs bring great flexibility to\ndevelopers, improper usage might introduce new security issues, potentially\nallowing attackers to hijack USCs and their users. In this paper, we conduct a\nlarge-scale measurement study to characterize USCs and their security\nimplications in the wild. We summarize six commonly used USC patterns and\ndevelop a tool, USCDetector, to identify USCs without needing source code.\nParticularly, USCDetector collects various information such as bytecode and\ntransaction information to construct upgrade chains for USCs and disclose\npotentially vulnerable ones. We evaluate USCDetector using verified smart\ncontracts (i.e., with source code) as ground truth and show that USCDetector\ncan achieve high accuracy with a precision of 96.26%. We then use USCDetector\nto conduct a large-scale study on Ethereum, covering a total of 60,251,064\nsmart contracts. USCDetecor constructs 10,218 upgrade chains and discloses\nmultiple real-world USCs with potential security issues.",
        "paper_url": "http://arxiv.org/abs/2403.01290v1",
        "pdf_url": "http://arxiv.org/pdf/2403.01290v1",
        "categories": [
            "cs.CR",
            "cs.CE"
        ]
    },
    {
        "title": "An Empirical Analysis of Scam Tokens on Ethereum Blockchain",
        "authors": [
            "Vahidin Jeleskovic"
        ],
        "published_date": "2024-02-29T17:57:05Z",
        "abstract": "This article presents an empirical investigation into the determinants of\ntotal revenue generated by counterfeit tokens on Uniswap. It offers a detailed\noverview of the counterfeit token fraud process, along with a systematic\nsummary of characteristics associated with such fraudulent activities observed\nin Uniswap. The study primarily examines the relationship between revenue from\ncounterfeit token scams and their defining characteristics, and analyzes the\ninfluence of market economic factors such as return on market capitalization\nand price return on Ethereum. Key findings include a significant increase in\noverall transactions of counterfeit tokens on their first day of fraud, and a\nrise in upfront fraud costs leading to corresponding increases in revenue.\nFurthermore, a negative correlation is identified between the total revenue of\ncounterfeit tokens and the volatility of Ethereum market capitalization return,\nwhile price return volatility on Ethereum is found to have a positive impact on\ncounterfeit token revenue, albeit requiring further investigation for a\ncomprehensive understanding. Additionally, the number of subscribers for the\nreal token correlates positively with the realized volume of scam tokens,\nindicating that a larger community following the legitimate token may\ninadvertently contribute to the visibility and success of counterfeit tokens.\nConversely, the number of Telegram subscribers exhibits a negative impact on\nthe realized volume of scam tokens, suggesting that a higher level of scrutiny\nor awareness within Telegram communities may act as a deterrent to fraudulent\nactivities. Finally, the timing of when the scam token is introduced on the\nEthereum blockchain may have a negative impact on its success. Notably, the\ncumulative amount scammed by only 42 counterfeit tokens amounted to almost\n11214 Ether.",
        "paper_url": "http://arxiv.org/abs/2402.19399v3",
        "pdf_url": "http://arxiv.org/pdf/2402.19399v3",
        "categories": [
            "q-fin.TR",
            "econ.EM"
        ]
    },
    {
        "title": "SACRÉ BLEU: Self-Assessed Creator Royalties Énforced by Balancing\n  Liquidity Estimation & Utility (A formal definition and analysis of Ethereum\n  Request for Comment ERC-7526)",
        "authors": [
            "David Huber",
            "Arran Schlosberg"
        ],
        "published_date": "2024-02-19T18:51:59Z",
        "abstract": "The secondary market for Ethereum non-fungible tokens (NFTs) has resulted in\nover $1.8bn being paid to creators in the form of a sales tax commonly called\ncreator royalties. This was despite royalty payments being enforced by no more\nthan social contract alone. Predictably, such an incentive structure led to\nzero-royalty alternatives becoming abundant and payments dwindled. A purely\nprogrammatic solution to royalty enforcement is hampered by the prevailing NFT\nstandard, ERC-721, which is ignorant of sale values and royalty enforcement\ntherefore relies on (potentially dishonest) third parties. We thus introduce an\nincentive-compatible mechanism for which there is a single rationalisable\nsolution, in which royalties are paid in full, while maintaining full ERC-721\ncompatibility. The mechanism constitutes the core of ERC-7526.",
        "paper_url": "http://arxiv.org/abs/2403.07896v1",
        "pdf_url": "http://arxiv.org/pdf/2403.07896v1",
        "categories": [
            "cs.GT",
            "econ.TH",
            "91B03"
        ]
    },
    {
        "title": "Analyzing Reward Dynamics and Decentralization in Ethereum 2.0: An\n  Advanced Data Engineering Workflow and Comprehensive Datasets for\n  Proof-of-Stake Incentives",
        "authors": [
            "Tao Yan",
            "Shengnan Li",
            "Benjamin Kraner",
            "Luyao Zhang",
            "Claudio J. Tessone"
        ],
        "published_date": "2024-02-17T02:40:00Z",
        "abstract": "Ethereum 2.0, as the preeminent smart contract blockchain platform,\nguarantees the precise execution of applications without third-party\nintervention. At its core, this system leverages the Proof-of-Stake (PoS)\nconsensus mechanism, which utilizes a stochastic process to select validators\nfor block proposal and validation, consequently rewarding them for their\ncontributions. However, the implementation of blockchain technology often\ndiverges from its central tenet of decentralized consensus, presenting\nsignificant analytical challenges. Our study collects consensus reward data\nfrom the Ethereum Beacon chain and conducts a comprehensive analysis of reward\ndistribution and evolution, categorizing them into attestation, proposer and\nsync committee rewards. To evaluate the degree of decentralization in PoS\nEthereum, we apply several inequality indices, including the Shannon entropy,\nthe Gini Index, the Nakamoto Coefficient, and the Herfindahl-Hirschman Index\n(HHI). Our comprehensive dataset is publicly available on Harvard Dataverse,\nand our analytical methodologies are accessible via GitHub, promoting\nopen-access research. Additionally, we provide insights on utilizing our data\nfor future investigations focused on assessing, augmenting, and refining the\ndecentralization, security, and efficiency of blockchain systems.",
        "paper_url": "http://arxiv.org/abs/2402.11170v1",
        "pdf_url": "http://arxiv.org/pdf/2402.11170v1",
        "categories": [
            "econ.GN",
            "cs.CR",
            "cs.CY",
            "cs.DB",
            "cs.DC",
            "q-fin.EC"
        ]
    },
    {
        "title": "Credential Control Balance: A Universal Blockchain Account Model\n  Abstract From Bank to Bitcoin, Ethereum External Owned Account and Account\n  Abstraction",
        "authors": [
            "Huifeng Jiao",
            "Nathapon Udomlertsakul",
            "Anukul Tamprasirt"
        ],
        "published_date": "2024-02-16T12:04:39Z",
        "abstract": "Blockchain market value peaked at $3 trillion, fell to $1 trillion, then\nrecovered to $1.5 trillion and is rising again. Blockchain accounts secure most\non-chain assets in this huge market (Web-12). This paper initiates a universal\nblockchain account model from a comprehensive review of blockchain account\ndevelopment, encompassing both academic and industry perspectives. This paper\nuses a model analysis method to analysis the account progress and create high\nlevel new account model. And it uses systematic literature review method to\nsearch, filter, analysis and evaluate the papers about account models and\nanalyzes related technology trade-offs. Searching with key words: blockchain,\naccount, private key and security in WOS, Scopus and Bitcoin and Ethereum\ncommunity repositories, this research provides in-depth insights into the\ndesign and evaluation of account models, from traditional bank accounts to\nBitcoin, EVM-adaptable, and abstraction accounts. Through data-driven\ncomparisons of account models (security, cost, adoption), this study also\nexplores future directions and provides an overview of cross-model account\ntheory, guiding further blockchain research. This paper leaves deeper dives\ninto model change drivers, application technology advancements.",
        "paper_url": "http://arxiv.org/abs/2402.10616v1",
        "pdf_url": "http://arxiv.org/pdf/2402.10616v1",
        "categories": [
            "cs.CR"
        ]
    },
    {
        "title": "Scalability limitations of Kademlia DHTs when enabling Data Availability\n  Sampling in Ethereum",
        "authors": [
            "Mikel Cortes-Goicoechea",
            "Csaba Kiraly",
            "Dmitriy Ryajov",
            "Jose Luis Muñoz-Tapia",
            "Leonardo Bautista-Gomez"
        ],
        "published_date": "2024-02-15T14:56:44Z",
        "abstract": "Scalability in blockchain remains a significant challenge, especially when\nprioritizing decentralization and security. The Ethereum community has proposed\ncomprehensive data-sharding techniques to overcome storage, computational, and\nnetwork processing limitations. In this context, the propagation and\navailability of large blocks become the subject of research to achieve scalable\ndata-sharding. This paper provides insights after exploring the usage of a\nKademlia-based DHT to enable Data Availability Sampling (DAS) in Ethereum. It\npresents a DAS-DHT simulator to study this problem and validates the results of\nthe simulator with experiments in a real DHT network, IPFS. Our results help us\nunderstand what parts of DAS can be achieved based on existing Kademlia DHT\nsolutions and which ones cannot. We discuss the limitations of DHT solutions\nand discuss other alternatives.",
        "paper_url": "http://arxiv.org/abs/2402.09993v1",
        "pdf_url": "http://arxiv.org/pdf/2402.09993v1",
        "categories": [
            "cs.NI",
            "cs.DC"
        ]
    },
    {
        "title": "DEthna: Accurate Ethereum Network Topology Discovery with Marked\n  Transactions",
        "authors": [
            "Chonghe Zhao",
            "Yipeng Zhou",
            "Shengli Zhang",
            "Taotao Wang",
            "Quan Z. Sheng",
            "Song Guo"
        ],
        "published_date": "2024-02-06T10:40:40Z",
        "abstract": "In Ethereum, the ledger exchanges messages along an underlying Peer-to-Peer\n(P2P) network to reach consistency. Understanding the underlying network\ntopology of Ethereum is crucial for network optimization, security and\nscalability. However, the accurate discovery of Ethereum network topology is\nnon-trivial due to its deliberately designed security mechanism. Consequently,\nexisting measuring schemes cannot accurately infer the Ethereum network\ntopology with a low cost. To address this challenge, we propose the Distributed\nEthereum Network Analyzer (DEthna) tool, which can accurately and efficiently\nmeasure the Ethereum network topology. In DEthna, a novel parallel measurement\nmodel is proposed that can generate marked transactions to infer link\nconnections based on the transaction replacement and propagation mechanism in\nEthereum. Moreover, a workload offloading scheme is designed so that DEthna can\nbe deployed on multiple distributed probing nodes so as to measure a\nlarge-scale Ethereum network at a low cost. We run DEthna on Goerli (the most\npopular Ethereum test network) to evaluate its capability in discovering\nnetwork topology. The experimental results demonstrate that DEthna\nsignificantly outperforms the state-of-the-art baselines. Based on DEthna, we\nfurther analyze characteristics of the Ethereum network revealing that there\nexist more than 50% low-degree Ethereum nodes that weaken the network\nrobustness.",
        "paper_url": "http://arxiv.org/abs/2402.03881v2",
        "pdf_url": "http://arxiv.org/pdf/2402.03881v2",
        "categories": [
            "cs.NI"
        ]
    },
    {
        "title": "A security framework for Ethereum smart contracts",
        "authors": [
            "Antonio López Vivar",
            "Ana Lucila Sandoval Orozco",
            "Luis Javier García Villalba"
        ],
        "published_date": "2024-02-05T22:14:21Z",
        "abstract": "The use of blockchain and smart contracts have not stopped growing in recent\nyears. Like all software that begins to expand its use, it is also beginning to\nbe targeted by hackers who will try to exploit vulnerabilities in both the\nunderlying technology and the smart contract code itself. While many tools\nalready exist for analyzing vulnerabilities in smart contracts, the\nheterogeneity and variety of approaches and differences in providing the\nanalysis data makes the learning curve for the smart contract developer steep.\nIn this article the authors present ESAF (Ethereum Security Analysis\nFramework), a framework for analysis of smart contracts that aims to unify and\nfacilitate the task of analyzing smart contract vulnerabilities which can be\nused as a persistent security monitoring tool for a set of target contracts as\nwell as a classic vulnerability analysis tool among other uses.",
        "paper_url": "http://arxiv.org/abs/2402.03555v1",
        "pdf_url": "http://arxiv.org/pdf/2402.03555v1",
        "categories": [
            "cs.CR"
        ]
    },
    {
        "title": "Transformer-based approach for Ethereum Price Prediction Using\n  Crosscurrency correlation and Sentiment Analysis",
        "authors": [
            "Shubham Singh",
            "Mayur Bhat"
        ],
        "published_date": "2024-01-16T03:03:39Z",
        "abstract": "The research delves into the capabilities of a transformer-based neural\nnetwork for Ethereum cryptocurrency price forecasting. The experiment runs\naround the hypothesis that cryptocurrency prices are strongly correlated with\nother cryptocurrencies and the sentiments around the cryptocurrency. The model\nemploys a transformer architecture for several setups from single-feature\nscenarios to complex configurations incorporating volume, sentiment, and\ncorrelated cryptocurrency prices. Despite a smaller dataset and less complex\narchitecture, the transformer model surpasses ANN and MLP counterparts on some\nparameters. The conclusion presents a hypothesis on the illusion of causality\nin cryptocurrency price movements driven by sentiments.",
        "paper_url": "http://arxiv.org/abs/2401.08077v1",
        "pdf_url": "http://arxiv.org/pdf/2401.08077v1",
        "categories": [
            "cs.LG",
            "cs.AI",
            "q-fin.PR"
        ]
    },
    {
        "title": "Vulnerability Scanners for Ethereum Smart Contracts: A Large-Scale Study",
        "authors": [
            "Christoph Sendner",
            "Lukas Petzi",
            "Jasper Stang",
            "Alexandra Dmitrienko"
        ],
        "published_date": "2023-12-27T11:26:26Z",
        "abstract": "Ethereum smart contracts, which are autonomous decentralized applications on\nthe blockchain that manage assets often exceeding millions of dollars, have\nbecome primary targets for cyberattacks. In 2023 alone, such vulnerabilities\nled to substantial financial losses exceeding a billion of US dollars. To\ncounter these threats, various tools have been developed by academic and\ncommercial entities to detect and mitigate vulnerabilities in smart contracts.\nOur study investigates the gap between the effectiveness of existing security\nscanners and the vulnerabilities that still persist in practice. We compiled\nfour distinct datasets for this analysis. The first dataset comprises 77,219\nsource codes extracted directly from the blockchain, while the second includes\nover 4 million bytecodes obtained from Ethereum Mainnet and testnets. The other\ntwo datasets consist of nearly 14,000 manually annotated smart contracts and\n373 smart contracts verified through audits, providing a foundation for a\nrigorous ground truth analysis on bytecode and source code. Using the unlabeled\ndatasets, we conducted a comprehensive quantitative evaluation of 17\nvulnerability scanners, revealing considerable discrepancies in their findings.\nOur analysis of the ground truth datasets indicated poor performance across all\nthe tools we tested. This study unveils the reasons for poor performance and\nunderscores that the current state of the art for smart contract security falls\nshort in effectively addressing open problems, highlighting that the challenge\nof effectively detecting vulnerabilities remains a significant and unresolved\nissue.",
        "paper_url": "http://arxiv.org/abs/2312.16533v1",
        "pdf_url": "http://arxiv.org/pdf/2312.16533v1",
        "categories": [
            "cs.CR"
        ]
    },
    {
        "title": "Measuring the Concentration of Control in Contemporary Ethereum",
        "authors": [
            "Simon Brown"
        ],
        "published_date": "2023-12-22T09:47:52Z",
        "abstract": "Ethereum is undergoing significant changes to its architecture as it evolves.\nThese changes include its switch to PoS consensus and the introduction of\nsignificant infrastructural changes that do not require a change to the core\nprotocol, but that fundamentally affect the way users interact with the\nnetwork. These changes represent an evolution toward a more modular\narchitecture, in which there exists new exogenous vectors for centralization.\nThis paper builds on previous studies of decentralization of Ethereum to\nreflect these recent significant changes, and Ethereum's new modular paradigm.",
        "paper_url": "http://arxiv.org/abs/2312.14562v1",
        "pdf_url": "http://arxiv.org/pdf/2312.14562v1",
        "categories": [
            "econ.TH"
        ]
    },
    {
        "title": "FairFlow Protocol: Equitable Maximal Extractable Value (MEV) mitigation\n  in Ethereum",
        "authors": [
            "Dipankar Sarkar"
        ],
        "published_date": "2023-12-19T22:53:59Z",
        "abstract": "Ethereum has emerged as a leading platform for decentralized applications\n(dApps) due to its robust smart contract capabilities. One of the critical\nissues in the Ethereum ecosystem is Maximal Extractable Value (MEV), a concept\nthat has gained significant attention in the blockchain community. However, MEV\nhas remained a major challenge with significant implications for the platform's\noperation and integrity. This paper introduces the FairFlow protocol, a novel\nframework designed to mitigate the effects of MEV within Ethereum's existing\ninfrastructure. The protocol aims to provide a more equitable environment,\npreventing exploitation by miners or validators, and protecting user data. The\ncombined approach of auction-based block space allocation and randomized\ntransaction ordering significantly reduces the potential for MEV exploitation.",
        "paper_url": "http://arxiv.org/abs/2312.12654v1",
        "pdf_url": "http://arxiv.org/pdf/2312.12654v1",
        "categories": [
            "cs.CR"
        ]
    },
    {
        "title": "When Contracts Meets Crypto: Exploring Developers' Struggles with\n  Ethereum Cryptographic APIs",
        "authors": [
            "Jiashuo Zhang",
            "Jiachi Chen",
            "Zhiyuan Wan",
            "Ting Chen",
            "Jianbo Gao",
            "Zhong Chen"
        ],
        "published_date": "2023-12-15T10:58:53Z",
        "abstract": "To empower smart contracts with the promising capabilities of cryptography,\nEthereum officially introduced a set of cryptographic APIs that facilitate\nbasic cryptographic operations within smart contracts, such as elliptic curve\noperations. However, since developers are not necessarily cryptography experts,\nrequiring them to directly interact with these basic APIs has caused real-world\nsecurity issues and potential usability challenges. To guide future research\nand solutions to these challenges, we conduct the first empirical study on\nEthereum cryptographic practices. Through the analysis of 91,484,856 Ethereum\ntransactions, 500 crypto-related contracts, and 483 StackExchange posts, we\nprovide the first in-depth look at cryptographic tasks developers need to\naccomplish and identify five categories of obstacles they encounter.\nFurthermore, we conduct an online survey with 78 smart contract practitioners\nto explore their perspectives on these obstacles and elicit the underlying\nreasons. We find that more than half of practitioners face more challenges in\ncryptographic tasks compared to general business logic in smart contracts.\nTheir feedback highlights the gap between low-level cryptographic APIs and\nhigh-level tasks they need to accomplish, emphasizing the need for improved\ncryptographic APIs, task-based templates, and effective assistance tools. Based\non these findings, we provide practical implications for further improvements\nand outline future research directions.",
        "paper_url": "http://arxiv.org/abs/2312.09685v1",
        "pdf_url": "http://arxiv.org/pdf/2312.09685v1",
        "categories": [
            "cs.SE"
        ]
    },
    {
        "title": "Understanding Ethereum Mempool Security under Asymmetric DoS by\n  Symbolized Stateful Fuzzing",
        "authors": [
            "Yibo Wang",
            "Yuzhe Tang",
            "Kai Li",
            "Wanning Ding",
            "Zhihua Yang"
        ],
        "published_date": "2023-12-05T10:31:02Z",
        "abstract": "In blockchains, mempool controls transaction flow before consensus, denial of\nwhose service hurts the health and security of blockchain networks. This paper\npresents MPFUZZ, the first mempool fuzzer to find asymmetric DoS bugs by\nsymbolically exploring mempool state space and optimistically estimating the\npromisingness an intermediate state is in reaching bug oracles. Compared to the\nbaseline blockchain fuzzers, MPFUZZ achieves a > 100x speedup in finding known\nDETER exploits. Running MPFUZZ on six major Ethereum clients leads to the\ndiscovering of new mempool vulnerabilities, which exhibit a wide variety of\nsophisticated patterns including stealthy mempool eviction and mempool locking.\nRule-based mitigation schemes are proposed against newly discovered\nvulnerabilities.",
        "paper_url": "http://arxiv.org/abs/2312.02642v3",
        "pdf_url": "http://arxiv.org/pdf/2312.02642v3",
        "categories": [
            "cs.CR"
        ]
    },
    {
        "title": "FRAD: Front-Running Attacks Detection on Ethereum using Ternary\n  Classification Model",
        "authors": [
            "Yuheng Zhang",
            "Pin Liu",
            "Guojun Wang",
            "Peiqiang Li",
            "Wanyi Gu",
            "Houji Chen",
            "Xuelei Liu",
            "Jinyao Zhu"
        ],
        "published_date": "2023-11-24T14:42:29Z",
        "abstract": "With the evolution of blockchain technology, the issue of transaction\nsecurity, particularly on platforms like Ethereum, has become increasingly\ncritical. Front-running attacks, a unique form of security threat, pose\nsignificant challenges to the integrity of blockchain transactions. In these\nattack scenarios, malicious actors monitor other users' transaction activities,\nthen strategically submit their own transactions with higher fees. This ensures\ntheir transactions are executed before the monitored transactions are included\nin the block. The primary objective of this paper is to delve into a\ncomprehensive classification of transactions associated with front-running\nattacks, which aims to equip developers with specific strategies to counter\neach type of attack. To achieve this, we introduce a novel detection method\nnamed FRAD (Front-Running Attacks Detection on Ethereum using Ternary\nClassification Model). This method is specifically tailored for transactions\nwithin decentralized applications (DApps) on Ethereum, enabling accurate\nclassification of front-running attacks involving transaction displacement,\ninsertion, and suppression. Our experimental validation reveals that the\nMultilayer Perceptron (MLP) classifier offers the best performance in detecting\nfront-running attacks, achieving an impressive accuracy rate of 84.59% and\nF1-score of 84.60%.",
        "paper_url": "http://arxiv.org/abs/2311.14514v1",
        "pdf_url": "http://arxiv.org/pdf/2311.14514v1",
        "categories": [
            "cs.CR",
            "cs.AI"
        ]
    },
    {
        "title": "Enhancing Ethereum's Security with LUMEN, a Novel Zero-Knowledge\n  Protocol Generating Transparent and Efficient zk-SNARKs",
        "authors": [
            "Yunjia Quan"
        ],
        "published_date": "2023-11-10T16:53:49Z",
        "abstract": "This paper proposes a novel recursive polynomial commitment scheme (PCS) and\na new polynomial interactive oracle proof (PIOP) protocol, which compile into\nefficient and transparent zk-SNARKs (zero-knowledge succinct non-interactive\narguments of knowledge). The Ethereum blockchain utilizes zero-knowledge\nRollups (ZKR) to improve its scalability (the ability to handle a large number\nof transactions), and ZKR uses zk-SNARKs to validate transactions. The\ncurrently used zk-SNARKs rely on a trusted setup ceremony, where a group of\nparticipants uses secret information about transactions to generate the public\nparameters necessary to verify the zk-SNARKs. This introduces a security risk\ninto Ethereum's system. Thus, researchers have been developing transparent\nzk-SNARKs (which do not require a trusted setup), but those are not as\nefficient as non-transparent zk-SNARKs, so ZKRs do not use them. In this\nresearch, I developed LUMEN, a set of novel algorithms that generate\ntransparent zk-SNARKs that improve Ethereum's security without sacrificing its\nefficiency. Various techniques were creatively incorporated into LUMEN,\nincluding groups with hidden orders, Lagrange basis polynomials, and an\namortization strategy. I wrote mathematical proofs for LUMEN that convey its\ncompleteness, soundness and zero-knowledgeness, and implemented LUMEN by\nwriting around $8000$ lines of Rust and Python code, which conveyed the\npracticality of LUMEN. Moreover, my implementation revealed the efficiency of\nLUMEN (measured in proof size, proof computation time, and verification time),\nwhich surpasses the efficiency of existing transparent zk-SNARKs and is on par\nwith that of non-transparent zk-SNARKs. Therefore, LUMEN is a promising\nsolution to improve Ethereum's security while maintaining its efficiency.",
        "paper_url": "http://arxiv.org/abs/2312.14159v1",
        "pdf_url": "http://arxiv.org/pdf/2312.14159v1",
        "categories": [
            "cs.CR",
            "math.PR"
        ]
    },
    {
        "title": "Can we run our Ethereum nodes at home?",
        "authors": [
            "Mikel Cortes-Goicoechea",
            "Tarun Mohandas-Daryanani",
            "Jose L. Muñoz-Tapia",
            "Leonardo Bautista-Gomez"
        ],
        "published_date": "2023-11-09T10:20:09Z",
        "abstract": "Scalability is a common issue among the most used permissionless blockchains,\nand several approaches have been proposed to solve this issue. Tackling\nscalability while preserving the security and decentralization of the network\nis a significant challenge. To deliver effective scaling solutions, Ethereum\nachieved a major protocol improvement, including a change in the consensus\nmechanism towards Proof of Stake. This improvement aimed a vast reduction of\nthe hardware requirements to run a node, leading to significant sustainability\nbenefits with a lower network energy consumption. This work analyzes the\nresource usage behavior of different clients running as Ethereum consensus\nnodes, comparing their performance under different configurations and analyzing\ntheir differences. Our results show higher requirements than claimed initially\nand how different clients react to network perturbations. Furthermore, we\ndiscuss the differences between the consensus clients, including their strong\npoints and limitations.",
        "paper_url": "http://arxiv.org/abs/2311.05252v1",
        "pdf_url": "http://arxiv.org/pdf/2311.05252v1",
        "categories": [
            "cs.CR",
            "cs.SI"
        ]
    },
    {
        "title": "Analysis of Information Propagation in Ethereum Network Using Combined\n  Graph Attention Network and Reinforcement Learning to Optimize Network\n  Efficiency and Scalability",
        "authors": [
            "Stefan Kambiz Behfar",
            "Jon Crowcroft"
        ],
        "published_date": "2023-11-02T17:19:45Z",
        "abstract": "Blockchain technology has revolutionized the way information is propagated in\ndecentralized networks. Ethereum plays a pivotal role in facilitating smart\ncontracts and decentralized applications. Understanding information propagation\ndynamics in Ethereum is crucial for ensuring network efficiency, security, and\nscalability. In this study, we propose an innovative approach that utilizes\nGraph Convolutional Networks (GCNs) to analyze the information propagation\npatterns in the Ethereum network. The first phase of our research involves data\ncollection from the Ethereum blockchain, consisting of blocks, transactions,\nand node degrees. We construct a transaction graph representation using\nadjacency matrices to capture the node embeddings; while our major contribution\nis to develop a combined Graph Attention Network (GAT) and Reinforcement\nLearning (RL) model to optimize the network efficiency and scalability. It\nlearns the best actions to take in various network states, ultimately leading\nto improved network efficiency, throughput, and optimize gas limits for block\nprocessing. In the experimental evaluation, we analyze the performance of our\nmodel on a large-scale Ethereum dataset. We investigate effectively aggregating\ninformation from neighboring nodes capturing graph structure and updating node\nembeddings using GCN with the objective of transaction pattern prediction,\naccounting for varying network loads and number of blocks. Not only we design a\ngas limit optimization model and provide the algorithm, but also to address\nscalability, we demonstrate the use and implementation of sparse matrices in\nGraphConv, GraphSAGE, and GAT. The results indicate that our designed GAT-RL\nmodel achieves superior results compared to other GCN models in terms of\nperformance. It effectively propagates information across the network,\noptimizing gas limits for block processing and improving network efficiency.",
        "paper_url": "http://arxiv.org/abs/2311.01406v1",
        "pdf_url": "http://arxiv.org/pdf/2311.01406v1",
        "categories": [
            "cs.LG",
            "cs.AI"
        ]
    },
    {
        "title": "Towards Universal Atomic Composability: A Formal Model for Multi-Rollup\n  Environments on Ethereum",
        "authors": [
            "Dipankar Sarkar"
        ],
        "published_date": "2023-11-01T10:27:18Z",
        "abstract": "In the rapidly evolving domain of distributed ledger technology, scalability\nand interoperability have become paramount challenges for both academic and\nindustry sectors. In this paper, we introduce a comprehensive formal model to\naddress atomic composability across multiple rollups on Ethereum. The proposed\nmodel incorporates mechanisms like buffering, dependency management,\nconcurrency control, and the groundbreaking zero-knowledge proofs. Moreover, we\nevaluate its practical repercussions, strengths, and weaknesses, ensuring\nresilience against manipulative or erroneous actions. The application of the\nproposed model to shared sequencers and other existing solutions accentuates\nits versatility and universality.",
        "paper_url": "http://arxiv.org/abs/2311.00422v2",
        "pdf_url": "http://arxiv.org/pdf/2311.00422v2",
        "categories": [
            "cs.CR"
        ]
    },
    {
        "title": "Bridging BRC-20 to Ethereum",
        "authors": [
            "Qin Wang",
            "Guangsheng Yu",
            "Shiping Chen"
        ],
        "published_date": "2023-10-16T04:58:17Z",
        "abstract": "In this paper, we design, implement, and (partially-) evaluate a lightweight\nbridge (as a type of middleware) to connect the Bitcoin and Ethereum networks\nthat were heterogeneously uncontactable before. Inspired by the recently\nintroduced Bitcoin Request Comment (BRC-20) standard, we leverage the\nflexibility of Bitcoin inscriptions by embedding editable operations within\neach satoshi and mapping them to programmable Ethereum smart contracts. A user\ncan initialize his/her requests from the Bitcoin network, subsequently\ntriggering corresponding actions on the Ethereum network. We validate the\nlightweight nature of our solution and its ability to facilitate secure and\nseamless interactions between two heterogeneous ecosystems.",
        "paper_url": "http://arxiv.org/abs/2310.10065v2",
        "pdf_url": "http://arxiv.org/pdf/2310.10065v2",
        "categories": [
            "cs.CR"
        ]
    },
    {
        "title": "Tikuna: An Ethereum Blockchain Network Security Monitoring System",
        "authors": [
            "Andres Gomez Ramirez",
            "Loui Al Sardy",
            "Francis Gomez Ramirez"
        ],
        "published_date": "2023-10-13T15:39:50Z",
        "abstract": "Blockchain security is becoming increasingly relevant in today's cyberspace\nas it extends its influence in many industries. This paper focuses on\nprotecting the lowest level layer in the blockchain, particularly the P2P\nnetwork that allows the nodes to communicate and share information. The P2P\nnetwork layer may be vulnerable to several families of attacks, such as\nDistributed Denial of Service (DDoS), eclipse attacks, or Sybil attacks. This\nlayer is prone to threats inherited from traditional P2P networks, and it must\nbe analyzed and understood by collecting data and extracting insights from the\nnetwork behavior to reduce those risks. We introduce Tikuna, an open-source\ntool for monitoring and detecting potential attacks on the Ethereum blockchain\nP2P network, at an early stage. Tikuna employs an unsupervised Long Short-Term\nMemory (LSTM) method based on Recurrent Neural Network (RNN) to detect attacks\nand alert users. Empirical results indicate that the proposed approach\nsignificantly improves detection performance, with the ability to detect and\nclassify attacks, including eclipse attacks, Covert Flash attacks, and others\nthat target the Ethereum blockchain P2P network layer, with high accuracy. Our\nresearch findings demonstrate that Tikuna is a valuable security tool for\nassisting operators to efficiently monitor and safeguard the status of Ethereum\nvalidators and the wider P2P network",
        "paper_url": "http://arxiv.org/abs/2310.09193v1",
        "pdf_url": "http://arxiv.org/pdf/2310.09193v1",
        "categories": [
            "cs.CR",
            "cs.AI",
            "cs.DC"
        ]
    },
    {
        "title": "Mixing Solutions in Bitcoin and Ethereum Ecosystems: A Review and\n  Tutorial",
        "authors": [
            "Alireza Arbabi",
            "Ardeshir Shojaeinasab",
            "Behnam Bahrak",
            "Homayoun Najjaran"
        ],
        "published_date": "2023-10-07T19:28:59Z",
        "abstract": "This manuscript presents an exhaustive review of blockchain-based mixing\nservices, aiming to fill the existing gap between academic innovations and\nreal-world implementations. Starting with an identification of the core\nfunctionalities and techniques employed by mixing services, the paper delves\ninto detailed explanations of these operational mechanisms. It further outlines\nan evaluation framework tailored for a rigorous assessment, highlighting the\nkey vulnerabilities and strengths of various solutions. In addition, the study\nidentifies potential attack vectors that compromise these services. The paper\nexplores the dual nature of mixing services, while they contribute to the\npreservation of privacy, a cornerstone of blockchain technologies, they can\nalso facilitate illicit activities. By addressing key research questions, this\nstudy not only offers a comprehensive overview of the current state of mixing\nservices but also sets the stage for future academic discourse in this evolving\nfield.",
        "paper_url": "http://arxiv.org/abs/2310.04899v1",
        "pdf_url": "http://arxiv.org/pdf/2310.04899v1",
        "categories": [
            "cs.CR"
        ]
    },
    {
        "title": "MindTheDApp: A Toolchain for Complex Network-Driven Structural Analysis\n  of Ethereum-based Decentralised Applications",
        "authors": [
            "Giacomo Ibba",
            "Sabrina Aufiero",
            "Silvia Bartolucci",
            "Rumyana Neykova",
            "Marco Ortu",
            "Roberto Tonelli",
            "Giuseppe Destefanis"
        ],
        "published_date": "2023-10-03T20:03:08Z",
        "abstract": "This paper presents MindTheDApp, a toolchain designed specifically for the\nstructural analysis of Ethereum-based Decentralized Applications (DApps), with\na distinct focus on a complex network-driven approach. Unlike existing tools,\nour toolchain combines the power of ANTLR4 and Abstract Syntax Tree (AST)\ntraversal techniques to transform the architecture and interactions within\nsmart contracts into a specialized bipartite graph. This enables advanced\nnetwork analytics to highlight operational efficiencies within the DApp's\narchitecture.\n  The bipartite graph generated by the proposed tool comprises two sets of\nnodes: one representing smart contracts, interfaces, and libraries, and the\nother including functions, events, and modifiers. Edges in the graph connect\nfunctions to smart contracts they interact with, offering a granular view of\ninterdependencies and execution flow within the DApp. This network-centric\napproach allows researchers and practitioners to apply complex network theory\nin understanding the robustness, adaptability, and intricacies of decentralized\nsystems.\n  Our work contributes to the enhancement of security in smart contracts by\nallowing the visualisation of the network, and it provides a deep understanding\nof the architecture and operational logic within DApps. Given the growing\nimportance of smart contracts in the blockchain ecosystem and the emerging\napplication of complex network theory in technology, our toolchain offers a\ntimely contribution to both academic research and practical applications in the\nfield of blockchain technology.",
        "paper_url": "http://arxiv.org/abs/2310.02408v1",
        "pdf_url": "http://arxiv.org/pdf/2310.02408v1",
        "categories": [
            "cs.IT",
            "cs.CL",
            "math.IT"
        ]
    },
    {
        "title": "EX-Graph: A Pioneering Dataset Bridging Ethereum and X",
        "authors": [
            "Qian Wang",
            "Zhen Zhang",
            "Zemin Liu",
            "Shengliang Lu",
            "Bingqiao Luo",
            "Bingsheng He"
        ],
        "published_date": "2023-10-02T09:07:01Z",
        "abstract": "While numerous public blockchain datasets are available, their utility is\nconstrained by an exclusive focus on blockchain data. This constraint limits\nthe incorporation of relevant social network data into blockchain analysis,\nthereby diminishing the breadth and depth of insight that can be derived. To\naddress the above limitation, we introduce EX-Graph, a novel dataset that\nauthentically links Ethereum and X, marking the first and largest dataset of\nits kind. EX-Graph combines Ethereum transaction records (2 million nodes and\n30 million edges) and X following data (1 million nodes and 3 million edges),\nbonding 30,667 Ethereum addresses with verified X accounts sourced from\nOpenSea. Detailed statistical analysis on EX-Graph highlights the structural\ndifferences between X-matched and non-X-matched Ethereum addresses. Extensive\nexperiments, including Ethereum link prediction, wash-trading Ethereum\naddresses detection, and X-Ethereum matching link prediction, emphasize the\nsignificant role of X data in enhancing Ethereum analysis. EX-Graph is\navailable at \\url{https://exgraph.deno.dev/}.",
        "paper_url": "http://arxiv.org/abs/2310.01015v3",
        "pdf_url": "http://arxiv.org/pdf/2310.01015v3",
        "categories": [
            "cs.SI",
            "cs.AI"
        ]
    },
    {
        "title": "Multi-triplet Feature Augmentation for Ponzi Scheme Detection in\n  Ethereum",
        "authors": [
            "Chengxiang Jin",
            "Jiajun Zhou",
            "Shengbo Gong",
            "Chenxuan Xie",
            "Qi Xuan"
        ],
        "published_date": "2023-10-02T02:36:44Z",
        "abstract": "Blockchain technology revolutionizes the Internet, but also poses increasing\nrisks, particularly in cryptocurrency finance. On the Ethereum platform, Ponzi\nschemes, phishing scams, and a variety of other frauds emerge. Existing Ponzi\nscheme detection approaches based on heterogeneous transaction graph modeling\nleverages semantic information between node (account) pairs to establish\nconnections, overlooking the semantic attributes inherent to the edges\n(interactions). To overcome this, we construct heterogeneous Ethereum\ninteraction graphs with multiple triplet interaction patterns to better depict\nthe real Ethereum environment. Based on this, we design a new framework named\nmulti-triplet augmented heterogeneous graph neural network (MAHGNN) for Ponzi\nscheme detection. We introduce the Conditional Variational Auto Encoder (CVAE)\nto capture the semantic information of different triplet interaction patterns,\nwhich facilitates the characterization on account features. Extensive\nexperiments demonstrate that MAHGNN is capable of addressing the problem of\nmulti-edge interactions in heterogeneous Ethereum interaction graphs and\nachieving state-of-the-art performance in Ponzi scheme detection.",
        "paper_url": "http://arxiv.org/abs/2310.00856v1",
        "pdf_url": "http://arxiv.org/pdf/2310.00856v1",
        "categories": [
            "cs.SI"
        ]
    },
    {
        "title": "Probabilistic Sampling-Enhanced Temporal-Spatial GCN: A Scalable\n  Framework for Transaction Anomaly Detection in Ethereum Networks",
        "authors": [
            "Stefan Kambiz Behfar",
            "Jon Crowcroft"
        ],
        "published_date": "2023-09-29T21:08:21Z",
        "abstract": "The rapid evolution of the Ethereum network necessitates sophisticated\ntechniques to ensure its robustness against potential threats and to maintain\ntransparency. While Graph Neural Networks (GNNs) have pioneered anomaly\ndetection in such platforms, capturing the intricacies of both spatial and\ntemporal transactional patterns has remained a challenge. This study presents a\nfusion of Graph Convolutional Networks (GCNs) with Temporal Random Walks (TRW)\nenhanced by probabilistic sampling to bridge this gap. Our approach, unlike\ntraditional GCNs, leverages the strengths of TRW to discern complex temporal\nsequences in Ethereum transactions, thereby providing a more nuanced\ntransaction anomaly detection mechanism. Preliminary evaluations demonstrate\nthat our TRW-GCN framework substantially advances the performance metrics over\nconventional GCNs in detecting anomalies and transaction bursts. This research\nnot only underscores the potential of temporal cues in Ethereum transactional\ndata but also offers a scalable and effective methodology for ensuring the\nsecurity and transparency of decentralized platforms. By harnessing both\nspatial relationships and time-based transactional sequences as node features,\nour model introduces an additional layer of granularity, making the detection\nprocess more robust and less prone to false positives. This work lays the\nfoundation for future research aimed at optimizing and enhancing the\ntransparency of blockchain technologies, and serves as a testament to the\nsignificance of considering both time and space dimensions in the ever-evolving\nlandscape of the decentralized platforms.",
        "paper_url": "http://arxiv.org/abs/2310.00144v1",
        "pdf_url": "http://arxiv.org/pdf/2310.00144v1",
        "categories": [
            "cs.LG",
            "cs.AI",
            "cs.CR"
        ]
    },
    {
        "title": "Unveiling Ethereum's Hidden Centralization Incentives: Does Connectivity\n  Impact Performance?",
        "authors": [
            "Mikel Cortes-Goicoechea",
            "Tarun Mohandas-Daryanani",
            "Jose Luis Munoz-Tapia",
            "Leonardo Bautista-Gomez"
        ],
        "published_date": "2023-09-23T10:20:04Z",
        "abstract": "Modern public blockchains like Ethereum rely on p2p networks to run\ndistributed and censorship-resistant applications. With its wide adoption, it\noperates as a highly critical public ledger. On its transition to become more\nscalable and sustainable, shifting to PoS without sacrificing the security and\nresilience of PoW, Ethereum offers a range of consensus clients to participate\nin the network. In this paper, we present a methodology to measure the\nperformance of the consensus clients based on the latency to receive messages\nfrom the p2p network. The paper includes a study that identifies the incentives\nand limitations that the network experiences, presenting insights about the\nlatency impact derived from running the software in different locations.",
        "paper_url": "http://arxiv.org/abs/2309.13329v1",
        "pdf_url": "http://arxiv.org/pdf/2309.13329v1",
        "categories": [
            "cs.NI"
        ]
    },
    {
        "title": "Defining and Preventing Asymmetric Mempool DoS in Ethereum with saferAd",
        "authors": [
            "Wanning Ding",
            "Yibo Wang",
            "Yuzhe Tang"
        ],
        "published_date": "2023-09-21T01:45:33Z",
        "abstract": "This paper presents secure mempool designs under asymmetric DoS attacks. We\nformulate safety definitions under two abstract DoSes, namely eviction- and\nlocking-based attacks.\n  We propose a safe transaction admission framework for securing mempools,\nnamed saferAd, that achieves both eviction- and locking-safety. The proven\nsecurity stems from an upper bound of the attack damage under locking DoSes and\na lower bound of the attack cost under eviction DoSes. The evaluation by\nreplaying real transaction traces shows saferAd incurs negligible latency or\ninsignificant change of validator revenue.",
        "paper_url": "http://arxiv.org/abs/2309.11721v5",
        "pdf_url": "http://arxiv.org/pdf/2309.11721v5",
        "categories": [
            "cs.CR"
        ]
    },
    {
        "title": "Is Ethereum Proof of Stake Sustainable? $-$ Considering from the\n  Perspective of Competition Among Smart Contract Platforms $-$",
        "authors": [
            "Kenji Saito",
            "Yutaka Soejima",
            "Toshihiko Sugiura",
            "Yukinobu Kitamura",
            "Mitsuru Iwamura"
        ],
        "published_date": "2023-09-20T15:18:21Z",
        "abstract": "Since the Merge update upon which Ethereum transitioned to Proof of Stake, it\nhas been touted that it resulted in lower power consumption and increased\nsecurity. However, even if that is the case, can this state be sustained?\n  In this paper, we focus on the potential impact of competition with other\nsmart contract platforms on the price of Ethereum's native currency, Ether\n(ETH), thereby raising questions about the safety and sustainability\npurportedly brought about by the design of Proof of Stake.",
        "paper_url": "http://arxiv.org/abs/2309.11394v1",
        "pdf_url": "http://arxiv.org/pdf/2309.11394v1",
        "categories": [
            "cs.CY",
            "econ.GN",
            "q-fin.EC"
        ]
    },
    {
        "title": "VulnSense: Efficient Vulnerability Detection in Ethereum Smart Contracts\n  by Multimodal Learning with Graph Neural Network and Language Model",
        "authors": [
            "Phan The Duy",
            "Nghi Hoang Khoa",
            "Nguyen Huu Quyen",
            "Le Cong Trinh",
            "Vu Trung Kien",
            "Trinh Minh Hoang",
            "Van-Hau Pham"
        ],
        "published_date": "2023-09-15T15:26:44Z",
        "abstract": "This paper presents VulnSense framework, a comprehensive approach to\nefficiently detect vulnerabilities in Ethereum smart contracts using a\nmultimodal learning approach on graph-based and natural language processing\n(NLP) models. Our proposed framework combines three types of features from\nsmart contracts comprising source code, opcode sequences, and control flow\ngraph (CFG) extracted from bytecode. We employ Bidirectional Encoder\nRepresentations from Transformers (BERT), Bidirectional Long Short-Term Memory\n(BiLSTM) and Graph Neural Network (GNN) models to extract and analyze these\nfeatures. The final layer of our multimodal approach consists of a fully\nconnected layer used to predict vulnerabilities in Ethereum smart contracts.\nAddressing limitations of existing vulnerability detection methods relying on\nsingle-feature or single-model deep learning techniques, our method surpasses\naccuracy and effectiveness constraints. We assess VulnSense using a collection\nof 1.769 smart contracts derived from the combination of three datasets:\nCurated, SolidiFI-Benchmark, and Smartbugs Wild. We then make a comparison with\nvarious unimodal and multimodal learning techniques contributed by GNN, BiLSTM\nand BERT architectures. The experimental outcomes demonstrate the superior\nperformance of our proposed approach, achieving an average accuracy of 77.96\\%\nacross all three categories of vulnerable smart contracts.",
        "paper_url": "http://arxiv.org/abs/2309.08474v1",
        "pdf_url": "http://arxiv.org/pdf/2309.08474v1",
        "categories": [
            "cs.CR",
            "cs.AI"
        ]
    },
    {
        "title": "Improving the Accuracy of Transaction-Based Ponzi Detection on Ethereum",
        "authors": [
            "Phuong Duy Huynh",
            "Son Hoang Dau",
            "Xiaodong Li",
            "Phuc Luong",
            "Emanuele Viterbo"
        ],
        "published_date": "2023-08-31T01:54:31Z",
        "abstract": "The Ponzi scheme, an old-fashioned fraud, is now popular on the Ethereum\nblockchain, causing considerable financial losses to many crypto investors. A\nfew Ponzi detection methods have been proposed in the literature, most of which\ndetect a Ponzi scheme based on its smart contract source code. This\ncontract-code-based approach, while achieving very high accuracy, is not robust\nbecause a Ponzi developer can fool a detection model by obfuscating the opcode\nor inventing a new profit distribution logic that cannot be detected. On the\ncontrary, a transaction-based approach could improve the robustness of\ndetection because transactions, unlike smart contracts, are harder to be\nmanipulated. However, the current transaction-based detection models achieve\nfairly low accuracy. In this paper, we aim to improve the accuracy of the\ntransaction-based models by employing time-series features, which turn out to\nbe crucial in capturing the life-time behaviour a Ponzi application but were\ncompletely overlooked in previous works. We propose a new set of 85 features\n(22 known account-based and 63 new time-series features), which allows\noff-the-shelf machine learning algorithms to achieve up to 30% higher F1-scores\ncompared to existing works.",
        "paper_url": "http://arxiv.org/abs/2308.16391v2",
        "pdf_url": "http://arxiv.org/pdf/2308.16391v2",
        "categories": [
            "cs.CR",
            "cs.CE",
            "cs.LG",
            "q-fin.ST"
        ]
    },
    {
        "title": "Trustless Privacy-Preserving Data Aggregation on Ethereum with Hypercube\n  Network Topology",
        "authors": [
            "Goshgar Ismayilov",
            "Can Ozturan"
        ],
        "published_date": "2023-08-29T12:51:26Z",
        "abstract": "The privacy-preserving data aggregation is a critical problem for many\napplications where multiple parties need to collaborate with each other\nprivately to arrive at certain results. Blockchain, as a database shared across\nthe network, provides an underlying platform on which such aggregations can be\ncarried out with a decentralized manner. Therefore, in this paper, we have\nproposed a scalable privacy-preserving data aggregation protocol for summation\non the Ethereum blockchain by integrating several cryptographic primitives\nincluding commitment scheme, asymmetric encryption and zero-knowledge proof\nalong with the hypercube network topology. The protocol consists of four stages\nas contract deployment, user registration, private submission and proof\nverification. The analysis of the protocol is made with respect to two main\nperspectives as security and scalability including computational,\ncommunicational and storage overheads. In the paper, the zero-knowledge proof,\nsmart contract and web user interface models for the protocol are provided. We\nhave performed an experimental study in order to identify the required gas\ncosts per individual and per system. The general formulation is provided to\ncharacterize the changes in gas costs for the increasing number of users. The\nzero-knowledge proof generation and verification times are also measured.",
        "paper_url": "http://arxiv.org/abs/2308.15267v1",
        "pdf_url": "http://arxiv.org/pdf/2308.15267v1",
        "categories": [
            "cs.CR"
        ]
    },
    {
        "title": "PTTS: Zero-Knowledge Proof-based Private Token Transfer System on\n  Ethereum Blockchain and its Network Flow Based Balance Range Privacy Attack\n  Analysis",
        "authors": [
            "Goshgar Ismayilov",
            "Can Ozturan"
        ],
        "published_date": "2023-08-29T09:13:31Z",
        "abstract": "Blockchains are decentralized and immutable databases that are shared among\nthe nodes of the network. Although blockchains have attracted a great scale of\nattention in the recent years by disrupting the traditional financial systems,\nthe transaction privacy is still a challenging issue that needs to be addressed\nand analysed. We propose a Private Token Transfer System (PTTS) for the\nEthereum public blockchain in the first part of this paper. For the proposed\nframework, zero-knowledge based protocol has been designed using Zokrates and\nintegrated into our private token smart contract. With the help of web user\ninterface designed, the end users can interact with the smart contract without\nany third-party setup. In the second part of the paper, we provide security and\nprivacy analysis including the replay attack and the balance range privacy\nattack which has been modelled as a network flow problem. It is shown that in\ncase some balance ranges are deliberately leaked out to particular\norganizations or adversial entities, it is possible to extract meaningful\ninformation about the user balances by employing minimum cost flow network\nalgorithms that have polynomial complexity. The experimental study reports the\nEthereum gas consumption and proof generation times for the proposed framework.\nIt also reports network solution times and goodness rates for a subset of\naddresses under the balance range privacy attack with respect to number of\naddresses, number of transactions and ratio of leaked transfer transaction\namounts.",
        "paper_url": "http://arxiv.org/abs/2308.15139v1",
        "pdf_url": "http://arxiv.org/pdf/2308.15139v1",
        "categories": [
            "cs.CR"
        ]
    },
    {
        "title": "To Healthier Ethereum: A Comprehensive and Iterative Smart Contract\n  Weakness Enumeration",
        "authors": [
            "Jiachi Chen",
            "Mingyuan Huang",
            "Zewei Lin",
            "Peilin Zheng",
            "Zibin Zheng"
        ],
        "published_date": "2023-08-20T10:46:39Z",
        "abstract": "With the increasing popularity of cryptocurrencies and blockchain technology,\nsmart contracts have become a prominent feature in developing decentralized\napplications. However, these smart contracts are susceptible to vulnerabilities\nthat hackers can exploit, resulting in significant financial losses. In\nresponse to this growing concern, various initiatives have emerged. Notably,\nthe SWC vulnerability list played an important role in raising awareness and\nunderstanding of smart contract weaknesses. However, the SWC list lacks\nmaintenance and has not been updated with new vulnerabilities since 2020. To\naddress this gap, this paper introduces the Smart Contract Weakness Enumeration\n(SWE), a comprehensive and practical vulnerability list up until 2023. We\ncollect 273 vulnerability descriptions from 86 top conference papers and\njournal papers, employing open card sorting techniques to deduplicate and\ncategorize these descriptions. This process results in the identification of 40\ncommon contract weaknesses, which are further classified into 20 sub-research\nfields through thorough discussion and analysis. SWE provides a systematic and\ncomprehensive list of smart contract vulnerabilities, covering existing and\nemerging vulnerabilities in the last few years. Moreover, SWE is a scalable,\ncontinuously iterative program. We propose two update mechanisms for the\nmaintenance of SWE. Regular updates involve the inclusion of new\nvulnerabilities from future top papers, while irregular updates enable\nindividuals to report new weaknesses for review and potential addition to SWE.",
        "paper_url": "http://arxiv.org/abs/2308.10227v1",
        "pdf_url": "http://arxiv.org/pdf/2308.10227v1",
        "categories": [
            "cs.SE"
        ]
    },
    {
        "title": "Optimal Flexible Consensus and its Application to Ethereum",
        "authors": [
            "Joachim Neu",
            "Srivatsan Sridhar",
            "Lei Yang",
            "David Tse"
        ],
        "published_date": "2023-08-09T17:46:01Z",
        "abstract": "Classic BFT consensus protocols guarantee safety and liveness for all clients\nif fewer than one-third of replicas are faulty. However, in applications such\nas high-value payments, some clients may want to prioritize safety over\nliveness. Flexible consensus allows each client to opt for a higher safety\nresilience, albeit at the expense of reduced liveness resilience. We present\nthe first construction that allows optimal safety--liveness tradeoff for every\nclient simultaneously. This construction is modular and is realized as an\nadd-on applied on top of an existing consensus protocol. The add-on consists of\nan additional round of voting and permanent locking done by the replicas, to\nsidestep a sub-optimal quorum-intersection-based constraint present in previous\nsolutions. We adapt our construction to the existing Ethereum protocol to\nderive optimal flexible confirmation rules that clients can adopt unilaterally\nwithout requiring system-wide changes. This is possible because existing\nEthereum protocol features can double as the extra voting and locking. We\ndemonstrate an implementation using Ethereum's consensus API.",
        "paper_url": "http://arxiv.org/abs/2308.05096v3",
        "pdf_url": "http://arxiv.org/pdf/2308.05096v3",
        "categories": [
            "cs.DC",
            "cs.CR"
        ]
    },
    {
        "title": "An Ethereum-based Product Identification System for Anti-counterfeits",
        "authors": [
            "Shashank Gupta"
        ],
        "published_date": "2023-08-08T02:57:41Z",
        "abstract": "Fake products are items that are marketed and sold as genuine, high-quality\nproducts but are counterfeit or low-quality knockoffs. These products are often\ndesigned to closely mimic the appearance and branding of the genuine product to\ndeceive consumers into thinking they are purchasing the real thing. Fake\nproducts can range from clothing and accessories to electronics and other goods\nand can be found in a variety of settings, including online marketplaces and\nbrick-and-mortar stores. Blockchain technology can be used to help detect fake\nproducts in a few different ways. One of the most common ways is through the\nuse of smart contracts, which are self-executing contracts with the terms of\nthe agreement between buyer and seller being directly written into lines of\ncode. This allows for a high level of transparency and traceability in supply\nchain transactions, making it easier to identify and prevent the sale of fake\nproducts and the use of unique product identifiers, such as serial numbers or\nQR codes, that are recorded on the blockchain. This allows consumers to easily\nverify the authenticity of a product by scanning the code and checking it\nagainst the information recorded on the blockchain. In this study, we will use\nsmart contracts to detect fake products and will evaluate based on Gas cost and\nethers used for each implementation.",
        "paper_url": "http://arxiv.org/abs/2308.04006v1",
        "pdf_url": "http://arxiv.org/pdf/2308.04006v1",
        "categories": [
            "cs.CR",
            "cs.DB",
            "cs.DC"
        ]
    },
    {
        "title": "Anonymity Analysis of the Umbra Stealth Address Scheme on Ethereum",
        "authors": [
            "Alex Kovács",
            "István András Seres"
        ],
        "published_date": "2023-08-03T11:46:23Z",
        "abstract": "Stealth addresses are a privacy-enhancing technology that provides recipient\nanonymity on blockchains. In this work, we investigate the recipient anonymity\nand unlinkability guarantees of Umbra, the most widely used implementation of\nthe stealth address scheme on Ethereum, and its three off-chain scalability\nsolutions, e.g., Arbitrum, Optimism, and Polygon. We define and evaluate four\nheuristics to uncover the real recipients of stealth payments. We find that for\nthe majority of Umbra payments, it is straightforward to establish the\nrecipient, hence nullifying the benefits of using Umbra. Specifically, we find\nthe real recipient of $48.5\\%$, $25.8\\%$, $65.7\\%$, and $52.6\\%$ of all Umbra\ntransactions on the Ethereum main net, Polygon, Arbitrum, and Optimism\nnetworks, respectively. Finally, we suggest easily implementable\ncountermeasures to evade our deanonymization and linking attacks.",
        "paper_url": "http://arxiv.org/abs/2308.01703v2",
        "pdf_url": "http://arxiv.org/pdf/2308.01703v2",
        "categories": [
            "cs.CR"
        ]
    },
    {
        "title": "Game Theoretic Modelling of a Ransom and Extortion Attack on Ethereum\n  Validators",
        "authors": [
            "Alpesh Bhudia",
            "Anna Cartwright",
            "Edward Cartwright",
            "Darren Hurley-Smith",
            "Julio Hernandez-Castro"
        ],
        "published_date": "2023-08-01T15:05:57Z",
        "abstract": "Consensus algorithms facilitate agreement on and resolution of blockchain\nfunctions, such as smart contracts and transactions. Ethereum uses a\nProof-of-Stake (PoS) consensus mechanism, which depends on financial incentives\nto ensure that validators perform certain duties and do not act maliciously.\nShould a validator attempt to defraud the system, legitimate validators will\nidentify this and then staked cryptocurrency is `burned' through a process of\nslashing.\n  In this paper, we show that an attacker who has compromised a set of\nvalidators could threaten to perform malicious actions that would result in\nslashing and thus, hold those validators to ransom. We use game theory to study\nhow an attacker can coerce payment from a victim, for example by deploying a\nsmart contract to provide a root of trust shared between attacker and victim\nduring the extortion process. Our game theoretic model finds that it is in the\ninterests of the validators to fully pay the ransom due to a lack of systemic\nprotections for validators. Financial risk is solely placed on the victim\nduring such an attack, with no mitigations available to them aside from\ncapitulation (payment of ransom) in many scenarios. Such attacks could be\ndisruptive to Ethereum and, likely, to many other PoS networks, if public trust\nin the validator system is eroded. We also discuss and evaluate potential\nmitigation measures arising from our analysis of the game theoretic model.",
        "paper_url": "http://arxiv.org/abs/2308.00590v1",
        "pdf_url": "http://arxiv.org/pdf/2308.00590v1",
        "categories": [
            "cs.GT",
            "cs.CR"
        ]
    },
    {
        "title": "Impact of Black Swan Events on Ethereum Blockchain ERC20 Token\n  Transaction Networks",
        "authors": [
            "Moturi Pradeep",
            "Uday Kumar Reddy Dyapa",
            "Sarika Jalan",
            "Priodyuti Pradhan"
        ],
        "published_date": "2023-07-27T12:38:48Z",
        "abstract": "The Ethereum blockchain and its ERC20 token standard have revolutionized the\nlandscape of digital assets and decentralized applications. ERC20 tokens\ndeveloped on the Ethereum blockchain have gained significant attention since\ntheir introduction. They are programmable and interoperable tokens, enabling\nvarious applications and token economies. Transaction graphs, representing the\nflow of the value between wallets within the Ethereum network, have played a\ncrucial role in understanding the system's dynamics, such as token transfers\nand the behavior of traders. Here, we explore the evolution of daily\ntransaction graphs of ERC20 token transactions, which sheds light on the\ntrader's behavior during the Black Swan Events -- 2018 crypto crash and the\nCOVID-19 pandemic. By using the tools from network science and differential\ngeometry, we analyze 0.98 billion of ERC20 token transaction data from November\n2015 to January 2023. Our analysis reveals that ERC20 financial ecosystem has\nevolved from a localized wealth formation period to a more mature financial\necosystem where wealth has dispersed among the traders in the network after the\ncrypto crash and during the pandemic period. Before the crash, most sellers\nonly sell the tokens, and buyers only buy the tokens. However, after the crash\nand during the pandemic period, sellers and buyers both performed buying and\nselling activities. In addition, we observe no significant negative impact of\nthe COVID-19 pandemic on user behavior in the financial ecosystem.",
        "paper_url": "http://arxiv.org/abs/2307.14812v1",
        "pdf_url": "http://arxiv.org/pdf/2307.14812v1",
        "categories": [
            "nlin.AO"
        ]
    },
    {
        "title": "Security Analysis of Smart Contract Migration from Ethereum to Arbitrum",
        "authors": [
            "Xueyan Tang",
            "Lingzhi Shi"
        ],
        "published_date": "2023-07-27T11:05:29Z",
        "abstract": "When migrating smart contracts from one blockchain platform to another, there\nare potential security risks. This is because different blockchain platforms\nhave different environments and characteristics for executing smart contracts.\nThe focus of this paper is to study the security risks associated with the\nmigration of smart contracts from Ethereum to Arbitrum. We collected relevant\ndata and analyzed smart contract migration cases to explore the differences\nbetween Ethereum and Arbitrum in areas such as Arbitrum cross-chain messaging,\nblock properties, contract address alias, and gas fees. From the 36 types of\nsmart contract migration cases we identified, we selected 4 typical types of\ncases and summarized their security risks. The research shows that smart\ncontracts deployed on Ethereum may face certain potential security risks during\nmigration to Arbitrum, mainly due to issues inherent in public blockchain\ncharacteristics, such as outdated off-chain data obtained by the inactive\nsequencer, logic errors based on time, the permission check failed, Denial of\nService(DOS) attacks. To mitigate these security risks, we proposed avoidance\nmethods and provided considerations for users and developers to ensure a secure\nmigration process. It's worth noting that this study is the first to conduct an\nin-depth analysis of the secure migration of smart contracts from Ethereum to\nArbitrum.",
        "paper_url": "http://arxiv.org/abs/2307.14773v3",
        "pdf_url": "http://arxiv.org/pdf/2307.14773v3",
        "categories": [
            "cs.CR",
            "68-02 (Primary)",
            "J.2; E.3"
        ]
    },
    {
        "title": "With Trail to Follow: Measurements of Real-world Non-fungible Token\n  Phishing Attacks on Ethereum",
        "authors": [
            "Jingjing Yang",
            "Jieli Liu",
            "Jiajing Wu"
        ],
        "published_date": "2023-07-04T09:18:59Z",
        "abstract": "With the popularity of Non-Fungible Tokens (NFTs), NFTs have become a new\ntarget of phishing attacks, posing a significant threat to the NFT trading\necosystem. There has been growing anecdotal evidence that new means of NFT\nphishing attacks have emerged in Ethereum ecosystem. Most of the existing\nresearch focus on detecting phishing scam accounts for native cryptocurrency on\nthe blockchain, but there is a lack of research in the area of phishing attacks\nof emerging NFTs. Although a few studies have recently started to focus on the\nanalysis and detection of NFT phishing attacks, NFT phishing attack means are\ndiverse and little has been done to understand these various types of NFT\nphishing attacks. To the best of our knowledge, we are the first to conduct\ncase retrospective analysis and measurement study of real-world historical NFT\nphishing attacks on Ethereum. By manually analyzing the existing scams reported\nby Chainabuse, we classify NFT phishing attacks into four patterns. For each\npattern, we further investigate the tricks and working principles of them.\nBased on 469 NFT phishing accounts collected up until October 2022 from\nmultiple channels, we perform a measurement study of on-chain transaction data\ncrawled from Etherscan to characterizing NFT phishing scams by analyzing the\nmodus operandi and preferences of NFT phishing scammers, as well as economic\nimpacts and whereabouts of stolen NFTs. We classify NFT phishing transactions\ninto one of the four patterns by log parsing and transaction record parsing. We\nfind these phishing accounts stole 19,514 NFTs for a total profit of 8,858.431\nETH (around 18.57 million dollars). We also observe that scammers remain highly\nactive in the last two years and favor certain categories and series of NFTs,\naccompanied with signs of gang theft.",
        "paper_url": "http://arxiv.org/abs/2307.01579v2",
        "pdf_url": "http://arxiv.org/pdf/2307.01579v2",
        "categories": [
            "cs.CR"
        ]
    },
    {
        "title": "Abusing the Ethereum Smart Contract Verification Services for Fun and\n  Profit",
        "authors": [
            "Pengxiang Ma",
            "Ningyu He",
            "Yuhua Huang",
            "Haoyu Wang",
            "Xiapu Luo"
        ],
        "published_date": "2023-07-02T12:05:43Z",
        "abstract": "Smart contracts play a vital role in the Ethereum ecosystem. Due to the\nprevalence of kinds of security issues in smart contracts, the smart contract\nverification is urgently needed, which is the process of matching a smart\ncontract's source code to its on-chain bytecode for gaining mutual trust\nbetween smart contract developers and users. Although smart contract\nverification services are embedded in both popular Ethereum browsers (e.g.,\nEtherscan and Blockscout) and official platforms (i.e., Sourcify), and gain\ngreat popularity in the ecosystem, their security and trustworthiness remain\nunclear. To fill the void, we present the first comprehensive security analysis\nof smart contract verification services in the wild. By diving into the\ndetailed workflow of existing verifiers, we have summarized the key security\nproperties that should be met, and observed eight types of vulnerabilities that\ncan break the verification. Further, we propose a series of detection and\nexploitation methods to reveal the presence of vulnerabilities in the most\npopular services, and uncover 19 exploitable vulnerabilities in total. All the\nstudied smart contract verification services can be abused to help spread\nmalicious smart contracts, and we have already observed the presence of using\nthis kind of tricks for scamming by attackers. It is hence urgent for our\ncommunity to take actions to detect and mitigate security issues related to\nsmart contract verification, a key component of the Ethereum smart contract\necosystem.",
        "paper_url": "http://arxiv.org/abs/2307.00549v1",
        "pdf_url": "http://arxiv.org/pdf/2307.00549v1",
        "categories": [
            "cs.CR"
        ]
    },
    {
        "title": "Streaming phishing scam detection method on Ethereum",
        "authors": [
            "Wenjia Yu",
            "Yijun Xia",
            "Jieli Liu",
            "Jiajing Wu"
        ],
        "published_date": "2023-06-29T01:57:08Z",
        "abstract": "Phishing is a widespread scam activity on Ethereum, causing huge financial\nlosses to victims. Most existing phishing scam detection methods abstract\naccounts on Ethereum as nodes and transactions as edges, then use manual\nstatistics of static node features to obtain node embedding and finally\nidentify phishing scams through classification models. However, these methods\ncan not dynamically learn new Ethereum transactions. Since the phishing scams\nfinished in a short time, a method that can detect phishing scams in real-time\nis needed. In this paper, we propose a streaming phishing scam detection\nmethod. To achieve streaming detection and capture the dynamic changes of\nEthereum transactions, we first abstract transactions into edge features\ninstead of node features, and then design a broadcast mechanism and a storage\nmodule, which integrate historical transaction information and neighbor\ntransaction information to strengthen the node embedding. Finally, the node\nembedding can be learned from the storage module and the previous node\nembedding. Experimental results show that our method achieves decent\nperformance on the Ethereum phishing scam detection task.",
        "paper_url": "http://arxiv.org/abs/2306.16624v1",
        "pdf_url": "http://arxiv.org/pdf/2306.16624v1",
        "categories": [
            "cs.SI"
        ]
    },
    {
        "title": "ethp2psim: Evaluating and deploying privacy-enhanced peer-to-peer\n  routing protocols for the Ethereum network",
        "authors": [
            "Ferenc Béres",
            "István András Seres",
            "Domokos M. Kelen",
            "András A. Benczúr"
        ],
        "published_date": "2023-06-26T19:31:33Z",
        "abstract": "Network-level privacy is the Achilles heel of financial privacy in\ncryptocurrencies. Financial privacy amounts to achieving and maintaining\nblockchain- and network-level privacy. Blockchain-level privacy recently\nreceived substantial attention. Specifically, several privacy-enhancing\ntechnologies were proposed and deployed to enhance blockchain-level privacy. On\nthe other hand, network-level privacy, i.e., privacy on the peer-to-peer layer,\nhas seen far less attention and development. In this work, we aim to provide a\npeer-to-peer network simulator, ethp2psim, that allows researchers to evaluate\nthe privacy guarantees of privacy-enhanced broadcast and message routing\nalgorithms. Our goal is two-fold. First, we want to enable researchers to\nimplement their proposed protocols in our modular simulator framework. Second,\nour simulator allows researchers to evaluate the privacy guarantees of\nprivacy-enhanced routing algorithms. Finally, ethp2psim can help choose the\nright protocol parameters for efficient, robust, and private deployment.",
        "paper_url": "http://arxiv.org/abs/2306.15024v1",
        "pdf_url": "http://arxiv.org/pdf/2306.15024v1",
        "categories": [
            "cs.CR",
            "cs.NI"
        ]
    },
    {
        "title": "Data Availability Sampling in Ethereum: Analysis of P2P Networking\n  Requirements",
        "authors": [
            "Michał Król",
            "Onur Ascigil",
            "Sergi Rene",
            "Etienne Rivière",
            "Matthieu Pigaglio",
            "Kaleem Peeroo",
            "Vladimir Stankovic",
            "Ramin Sadre",
            "Felix Lange"
        ],
        "published_date": "2023-06-20T11:12:59Z",
        "abstract": "Despite their increasing popularity, blockchains still suffer from severe\nscalability limitations. Recently, Ethereum proposed a novel approach to block\nvalidation based on Data Availability Sampling (DAS), that has the potential to\nimprove its transaction per second rate by more than two orders of magnitude.\nDAS should also significantly reduce per-transaction validation costs. At the\nsame time, DAS introduces new communication patterns in the Ethereum\nPeer-to-Peer (P2P) network. These drastically increase the amount of exchanged\ndata and impose stringent latency objectives. In this paper, we review the new\nrequirements for P2P networking associated with DAS, discuss open challenges,\nand identify new research directions.",
        "paper_url": "http://arxiv.org/abs/2306.11456v1",
        "pdf_url": "http://arxiv.org/pdf/2306.11456v1",
        "categories": [
            "cs.NI",
            "cs.CR"
        ]
    },
    {
        "title": "Ethereum Proof-of-Stake Consensus Layer: Participation and\n  Decentralization",
        "authors": [
            "Dominic Grandjean",
            "Lioba Heimbach",
            "Roger Wattenhofer"
        ],
        "published_date": "2023-06-19T08:51:27Z",
        "abstract": "In September 2022, Ethereum transitioned from Proof-of-Work (PoW) to\nProof-of-Stake (PoS) during \"the merge\" - making it the largest PoS\ncryptocurrency in terms of market capitalization. With this work, we present a\ncomprehensive measurement study of the current state of the Ethereum PoS\nconsensus layer on the beacon chain. We perform a longitudinal study of the\nhistory of the beacon chain. Our work finds that all dips in network\nparticipation are caused by network upgrades, issues with major consensus\nclients, or issues with service operators controlling a large number of\nvalidators. Further, our longitudinal staking power decentralization analysis\nreveals that Ethereum PoS fairs similarly to its PoW counterpart in terms of\ndecentralization and exhibits the immense impact of (liquid) staking services\non staking power decentralization. Finally, we highlight the heightened\nsecurity concerns in Ethereum PoS caused by high degrees of centralization.",
        "paper_url": "http://arxiv.org/abs/2306.10777v2",
        "pdf_url": "http://arxiv.org/pdf/2306.10777v2",
        "categories": [
            "cs.DC"
        ]
    },
    {
        "title": "SmartBugs 2.0: An Execution Framework for Weakness Detection in Ethereum\n  Smart Contracts",
        "authors": [
            "Monika di Angelo",
            "Thomas Durieux",
            "João F. Ferreira",
            "Gernot Salzer"
        ],
        "published_date": "2023-06-08T09:22:25Z",
        "abstract": "Smart contracts are blockchain programs that often handle valuable assets.\nWriting secure smart contracts is far from trivial, and any vulnerability may\nlead to significant financial losses. To support developers in identifying and\neliminating vulnerabilities, methods and tools for the automated analysis have\nbeen proposed. However, the lack of commonly accepted benchmark suites and\nperformance metrics makes it difficult to compare and evaluate such tools.\nMoreover, the tools are heterogeneous in their interfaces and reports as well\nas their runtime requirements, and installing several tools is time-consuming.\n  In this paper, we present SmartBugs 2.0, a modular execution framework. It\nprovides a uniform interface to 19 tools aimed at smart contract analysis and\naccepts both Solidity source code and EVM bytecode as input. After describing\nits architecture, we highlight the features of the framework. We evaluate the\nframework via its reception by the community and illustrate its scalability by\ndescribing its role in a study involving 3.25 million analyses.",
        "paper_url": "http://arxiv.org/abs/2306.05057v1",
        "pdf_url": "http://arxiv.org/pdf/2306.05057v1",
        "categories": [
            "cs.CR",
            "cs.SE"
        ]
    },
    {
        "title": "An Empirical Study of Impact of Solidity Compiler Updates on\n  Vulnerabilities in Ethereum Smart Contracts",
        "authors": [
            "Chihiro Kado",
            "Naoto Yanai",
            "Jason Paul Cruz",
            "Kyosuke Yamashita",
            "Shingo Okamura"
        ],
        "published_date": "2023-06-07T08:42:42Z",
        "abstract": "Vulnerabilities of Ethereum smart contracts often cause serious financial\ndamage. Whereas the Solidity compiler has been updated to prevent\nvulnerabilities, its effectiveness has not been revealed so far, to the best of\nour knowledge. In this paper, we shed light on the impact of compiler versions\nof vulnerabilities of Ethereum smart contracts. To this end, we collected\n503,572 contracts with Solidity source codes in the Ethereum blockchain and\nthen analyzed their vulnerabilities. For three vulnerabilities with high\nseverity, i.e., Locked Money, Using tx.origin, and Unchecked Call, we show that\ntheir appearance rates are decreased by virtue of major updates of the Solidity\ncompiler. We then found the following four key insights. First, after the\nrelease of version 0.6, the appearance rate for Locked Money has decreased.\nSecond, regardless of compiler updates, the appearance rate for Using tx.origin\nis significantly low. Third, although the appearance rate for Unchecked Call\nhas decreased in version 0.8, it still remains high due to various factors,\nincluding code clones. Fourth, through analysis of code clones, our promising\nresults show that the appearance rate for Unchecked Call can be further\ndecreased by removing the code clones.",
        "paper_url": "http://arxiv.org/abs/2306.04250v1",
        "pdf_url": "http://arxiv.org/pdf/2306.04250v1",
        "categories": [
            "cs.CR",
            "cs.SE"
        ]
    },
    {
        "title": "SourceP: Detecting Ponzi Schemes on Ethereum with Source Code",
        "authors": [
            "Pengcheng Lu",
            "Liang Cai",
            "Keting Yin"
        ],
        "published_date": "2023-06-02T16:40:42Z",
        "abstract": "As blockchain technology becomes more and more popular, a typical financial\nscam, the Ponzi scheme, has also emerged in the blockchain platform Ethereum.\nThis Ponzi scheme deployed through smart contracts, also known as the smart\nPonzi scheme, has caused a lot of economic losses and negative impacts.\nExisting methods for detecting smart Ponzi schemes on Ethereum mainly rely on\nbytecode features, opcode features, account features, and transaction behavior\nfeatures of smart contracts, which are unable to truly characterize the\nbehavioral features of Ponzi schemes, and thus generally perform poorly in\nterms of detection accuracy and false alarm rates. In this paper, we propose\nSourceP, a method to detect smart Ponzi schemes on the Ethereum platform using\npre-trained models and data flow, which only requires using the source code of\nsmart contracts as features. SourceP reduces the difficulty of data acquisition\nand feature extraction of existing detection methods. Specifically, we first\nconvert the source code of a smart contract into a data flow graph and then\nintroduce a pre-trained model based on learning code representations to build a\nclassification model to identify Ponzi schemes in smart contracts. The\nexperimental results show that SourceP achieves 87.2% recall and 90.7% F-score\nfor detecting smart Ponzi schemes within Ethereum's smart contract dataset,\noutperforming state-of-the-art methods in terms of performance and\nsustainability. We also demonstrate through additional experiments that\npre-trained models and data flow play an important contribution to SourceP, as\nwell as proving that SourceP has a good generalization ability.",
        "paper_url": "http://arxiv.org/abs/2306.01665v8",
        "pdf_url": "http://arxiv.org/pdf/2306.01665v8",
        "categories": [
            "cs.SE",
            "cs.AI"
        ]
    },
    {
        "title": "Ethereum's Proposer-Builder Separation: Promises and Realities",
        "authors": [
            "Lioba Heimbach",
            "Lucianna Kiffer",
            "Christof Ferreira Torres",
            "Roger Wattenhofer"
        ],
        "published_date": "2023-05-30T13:55:23Z",
        "abstract": "With Ethereum's transition from Proof-of-Work to Proof-of-Stake in September\n2022 came another paradigm shift, the Proposer-Builder Separation (PBS) scheme.\nPBS was introduced to decouple the roles of selecting and ordering transactions\nin a block (i.e., the builder), from those validating its contents and\nproposing the block to the network as the new head of the blockchain (i.e., the\nproposer). In this landscape, proposers are the validators in the\nProof-of-Stake consensus protocol, while now relying on specialized block\nbuilders for creating blocks with the highest value for the proposer.\nAdditionally, relays act as mediators between builders and proposers. We study\nPBS adoption and show that the current landscape exhibits significant\ncentralization amongst the builders and relays. Further, we explore whether PBS\neffectively achieves its intended objectives of enabling hobbyist validators to\nmaximize block profitability and preventing censorship. Our findings reveal\nthat although PBS grants validators the opportunity to access optimized and\ncompetitive blocks, it tends to stimulate censorship rather than reduce it.\nAdditionally, we demonstrate that relays do not consistently uphold their\ncommitments and may prove unreliable. Specifically, proposers do not always\nreceive the complete promised value, and the censorship or filtering\ncapabilities pledged by relays exhibit significant gaps.",
        "paper_url": "http://arxiv.org/abs/2305.19037v2",
        "pdf_url": "http://arxiv.org/pdf/2305.19037v2",
        "categories": [
            "cs.DC"
        ]
    },
    {
        "title": "Towards Understanding Crypto Money Laundering in Web3 Through the Lenses\n  of Ethereum Heists",
        "authors": [
            "Dan Lin",
            "Jiajing Wu",
            "Qishuang Fu",
            "Yunmei Yu",
            "Kaixin Lin",
            "Zibin Zheng",
            "Shuo Yang"
        ],
        "published_date": "2023-05-24T05:46:42Z",
        "abstract": "With the overall momentum of the blockchain industry, crypto-based crimes are\nbecoming more and more prevalent. After committing a crime, the main goal of\ncybercriminals is to obfuscate the source of the illicit funds in order to\nconvert them into cash and get away with it. Many studies have analyzed money\nlaundering in the field of the traditional financial sector and\nblockchain-based Bitcoin. But so far, little is known about the characteristics\nof crypto money laundering in the blockchain-based Web3 ecosystem. To fill this\ngap, and considering that Ethereum is the largest platform on Web3, in this\npaper, we systematically study the behavioral characteristics and economic\nimpact of money laundering accounts through the lenses of Ethereum heists.\nBased on a very small number of tagged accounts of exchange hackers, DeFi\nexploiters, and scammers, we mine untagged money laundering groups through\nheuristic transaction tracking methods, to carve out a full picture of security\nincidents. By analyzing account characteristics and transaction networks, we\nobtain many interesting findings about crypto money laundering in Web3,\nobserving the escalating money laundering methods such as creating counterfeit\ntokens and masquerading as speculators. Finally, based on these findings we\nprovide inspiration for anti-money laundering to promote the healthy\ndevelopment of the Web3 ecosystem.",
        "paper_url": "http://arxiv.org/abs/2305.14748v1",
        "pdf_url": "http://arxiv.org/pdf/2305.14748v1",
        "categories": [
            "cs.CR",
            "cs.SI"
        ]
    },
    {
        "title": "Agent-Based Modelling of Ethereum Consensus",
        "authors": [
            "Benjamin Kraner",
            "Nicolò Vallarano",
            "Claudio J. Tessone",
            "Caspar Schwarz-Schilling"
        ],
        "published_date": "2023-05-23T10:29:25Z",
        "abstract": "This paper presents a study of the Poof-of-Stake (PoW) Ethereum consensus\nprotocol, following the recent switch from Proof-of-Work (PoS) to\nProof-of-Stake within Merge upgrade. The new protocol has resulted in reduced\nenergy consumption and a shift in economic incentives, but it has also\nintroduced new threat sources such as chain reorganizations and balancing\nattacks. Using a simple and flexible agent-based model, this study employs a\ntime-continuous simulation algorithm to analyze the evolution of the blocktree\nand assess the impact of initial conditions on consensus quality. The model\nsimulates validator node behavior and the information propagation throughout\nthe peer-to-peer network of validators to analyze the resulting blockchain\nstructure. Key variables in the model include the topology of the peer-to-peer\nnetwork and average block and attestation latencies. Metrics to evaluate\nconsensus quality are established, and means to observe the model's\nresponsiveness to changes in parameters are provided. The simulations reveal a\nphase transition in which the system switches from a consensus state to a\nnon-consensus state, with a theoretical justification presented for this\nobservation.",
        "paper_url": "http://arxiv.org/abs/2305.13906v1",
        "pdf_url": "http://arxiv.org/pdf/2305.13906v1",
        "categories": [
            "cs.GT",
            "cs.CR"
        ]
    },
    {
        "title": "Demystifying Random Number in Ethereum Smart Contract: Taxonomy,\n  Vulnerability Identification, and Attack Detection",
        "authors": [
            "Peng Qian",
            "Jianting He",
            "Lingling Lu",
            "Siwei Wu",
            "Zhipeng Lu",
            "Lei Wu",
            "Yajin Zhou",
            "Qinming He"
        ],
        "published_date": "2023-04-25T08:23:11Z",
        "abstract": "Recent years have witnessed explosive growth in blockchain smart contract\napplications. As smart contracts become increasingly popular and carry trillion\ndollars worth of digital assets, they become more of an appealing target for\nattackers, who have exploited vulnerabilities in smart contracts to cause\ncatastrophic economic losses. Notwithstanding a proliferation of work that has\nbeen developed to detect an impressive list of vulnerabilities, the bad\nrandomness vulnerability is overlooked by many existing tools. In this paper,\nwe make the first attempt to provide a systematic analysis of random numbers in\nEthereum smart contracts, by investigating the principles behind pseudo-random\nnumber generation and organizing them into a taxonomy. We also lucubrate\nvarious attacks against bad random numbers and group them into four categories.\nFurthermore, we present RNVulDet - a tool that incorporates taint analysis\ntechniques to automatically identify bad randomness vulnerabilities and detect\ncorresponding attack transactions. To extensively verify the effectiveness of\nRNVulDet, we construct three new datasets: i) 34 well-known contracts that are\nreported to possess bad randomness vulnerabilities, ii) 214 popular contracts\nthat have been rigorously audited before launch and are regarded as free of bad\nrandomness vulnerabilities, and iii) a dataset consisting of 47,668 smart\ncontracts and 49,951 suspicious transactions. We compare RNVulDet with three\nstate-of-the-art smart contract vulnerability detectors, and our tool\nsignificantly outperforms them. Meanwhile, RNVulDet spends 2.98s per contract\non average, in most cases orders-of-magnitude faster than other tools. RNVulDet\nsuccessfully reveals 44,264 attack transactions. Our implementation and\ndatasets are released, hoping to inspire others.",
        "paper_url": "http://arxiv.org/abs/2304.12645v1",
        "pdf_url": "http://arxiv.org/pdf/2304.12645v1",
        "categories": [
            "cs.SE",
            "cs.CR"
        ]
    },
    {
        "title": "Base Fee Manipulation In Ethereum's EIP-1559 Transaction Fee Mechanism",
        "authors": [
            "Sarah Azouvi",
            "Guy Goren",
            "Lioba Heimbach",
            "Alexander Hicks"
        ],
        "published_date": "2023-04-22T20:35:24Z",
        "abstract": "In 2021 Ethereum adjusted the transaction pricing mechanism by implementing\nEIP-1559, which introduces the base fee - a network fee that is burned and\ndynamically adjusts to the network demand. The authors of the Ethereum\nImprovement Proposal (EIP) noted that a miner with more than 50% of the mining\npower could be incentivized to deviate from the honest mining strategy.\nInstead, such a miner could propose a series of empty blocks to artificially\nlower demand and increase her future rewards. In this paper, we generalize this\nattack and show that under rational player behavior, deviating from the honest\nstrategy can be profitable for a miner with less than 50% of the mining power.\nWe show that even when miners do not collaborate, it is at times rational for\nsmaller miners to join the attack. Finally, we propose a mitigation to address\nthe identified vulnerability.",
        "paper_url": "http://arxiv.org/abs/2304.11478v3",
        "pdf_url": "http://arxiv.org/pdf/2304.11478v3",
        "categories": [
            "cs.GT"
        ]
    },
    {
        "title": "An Ethereum-compatible blockchain that explicates and ensures\n  design-level safety properties for smart contracts",
        "authors": [
            "Nikolaj Bjørner",
            "Shuo Chen",
            "Yang Chen",
            "Zhongxin Guo",
            "Peng Liu",
            "Nanqing Luo"
        ],
        "published_date": "2023-04-17T23:14:45Z",
        "abstract": "Smart contracts are crucial elements of decentralized technologies, but they\nface significant obstacles to trustworthiness due to security bugs and\ntrapdoors. To address the core issue, we propose a technology that enables\nprogrammers to focus on design-level properties rather than specific low-level\nattack patterns. Our proposed technology, called Theorem-Carrying-Transaction\n(TCT), combines the benefits of runtime checking and symbolic proof. Under the\nTCT protocol, every transaction must carry a theorem that proves its adherence\nto the safety properties in the invoked contracts, and the blockchain checks\nthe proof before executing the transaction. The unique design of TCT ensures\nthat the theorems are provable and checkable in an efficient manner. We believe\nthat TCT holds a great promise for enabling provably secure smart contracts in\nthe future. As such, we call for collaboration toward this vision.",
        "paper_url": "http://arxiv.org/abs/2304.08655v1",
        "pdf_url": "http://arxiv.org/pdf/2304.08655v1",
        "categories": [
            "cs.CR",
            "cs.PL"
        ]
    },
    {
        "title": "Smart Contract Upgradeability on the Ethereum Blockchain Platform: An\n  Exploratory Study",
        "authors": [
            "Ilham Qasse",
            "Mohammad Hamdaqa",
            "Björn Þór Jónsson"
        ],
        "published_date": "2023-04-13T14:26:12Z",
        "abstract": "Context: Smart contracts are computerized self-executing contracts that\ncontain clauses, which are enforced once certain conditions are met. Smart\ncontracts are immutable by design and cannot be modified once deployed, which\nensures trustlessness. Despite smart contracts' immutability benefits,\nupgrading contract code is still necessary for bug fixes and potential feature\nimprovements. In the past few years, the smart contract community introduced\nseveral practices for upgrading smart contracts. Upgradeable contracts are\nsmart contracts that exhibit these practices and are designed with\nupgradeability in mind. During the upgrade process, a new smart contract\nversion is deployed with the desired modification, and subsequent user requests\nwill be forwarded to the latest version (upgraded contract). Nevertheless,\nlittle is known about the characteristics of the upgrading practices, how\ndevelopers apply them, and how upgrading impacts contract usage.\n  Objectives: This paper aims to characterize smart contract upgrading patterns\nand analyze their prevalence based on the deployed contracts that exhibit these\npatterns. Furthermore, we intend to investigate the reasons why developers\nupgrade contracts (e.g., introduce features, fix vulnerabilities) and how\nupgrades affect the adoption and life span of a contract in practice.\n  Method: We collect deployed smart contracts metadata and source codes to\nidentify contracts that exhibit certain upgrade patterns (upgradeable\ncontracts) based on a set of policies. Then we trace smart contract versions\nfor each upgradable contract and identify the changes in contract versions\nusing similarity and vulnerabilities detection tools. Finally, we plan to\nanalyze the impact of upgrading on contract usage based on the number of\ntransactions received and the lifetime of the contract version.",
        "paper_url": "http://arxiv.org/abs/2304.06568v1",
        "pdf_url": "http://arxiv.org/pdf/2304.06568v1",
        "categories": [
            "cs.SE"
        ]
    },
    {
        "title": "BERT4ETH: A Pre-trained Transformer for Ethereum Fraud Detection",
        "authors": [
            "Sihao Hu",
            "Zhen Zhang",
            "Bingqiao Luo",
            "Shengliang Lu",
            "Bingsheng He",
            "Ling Liu"
        ],
        "published_date": "2023-03-29T20:30:52Z",
        "abstract": "As various forms of fraud proliferate on Ethereum, it is imperative to\nsafeguard against these malicious activities to protect susceptible users from\nbeing victimized. While current studies solely rely on graph-based fraud\ndetection approaches, it is argued that they may not be well-suited for dealing\nwith highly repetitive, skew-distributed and heterogeneous Ethereum\ntransactions. To address these challenges, we propose BERT4ETH, a universal\npre-trained Transformer encoder that serves as an account representation\nextractor for detecting various fraud behaviors on Ethereum. BERT4ETH features\nthe superior modeling capability of Transformer to capture the dynamic\nsequential patterns inherent in Ethereum transactions, and addresses the\nchallenges of pre-training a BERT model for Ethereum with three practical and\neffective strategies, namely repetitiveness reduction, skew alleviation and\nheterogeneity modeling. Our empirical evaluation demonstrates that BERT4ETH\noutperforms state-of-the-art methods with significant enhancements in terms of\nthe phishing account detection and de-anonymization tasks. The code for\nBERT4ETH is available at: https://github.com/git-disl/BERT4ETH.",
        "paper_url": "http://arxiv.org/abs/2303.18138v2",
        "pdf_url": "http://arxiv.org/pdf/2303.18138v2",
        "categories": [
            "cs.CR",
            "cs.LG"
        ]
    },
    {
        "title": "Does Money Laundering on Ethereum Have Traditional Traits?",
        "authors": [
            "Qishuang Fu",
            "Dan Lin",
            "Yiyue Cao",
            "Jiajing Wu"
        ],
        "published_date": "2023-03-28T09:25:26Z",
        "abstract": "As the largest blockchain platform that supports smart contracts, Ethereum\nhas developed with an incredible speed. Yet due to the anonymity of blockchain,\nthe popularity of Ethereum has fostered the emergence of various illegal\nactivities and money laundering by converting ill-gotten funds to cash. In the\ntraditional money laundering scenario, researchers have uncovered the prevalent\ntraits of money laundering. However, since money laundering on Ethereum is an\nemerging means, little is known about money laundering on Ethereum. To fill the\ngap, in this paper, we conduct an in-depth study on Ethereum money laundering\nnetworks through the lens of a representative security event on \\textit{Upbit\nExchange} to explore whether money laundering on Ethereum has traditional\ntraits. Specifically, we construct a money laundering network on Ethereum by\ncrawling the transaction records of \\textit{Upbit Hack}. Then, we present five\nquestions based on the traditional traits of money laundering networks. By\nleveraging network analysis, we characterize the money laundering network on\nEthereum and answer these questions. In the end, we summarize the findings of\nmoney laundering networks on Ethereum, which lay the groundwork for money\nlaundering detection on Ethereum.",
        "paper_url": "http://arxiv.org/abs/2303.15841v1",
        "pdf_url": "http://arxiv.org/pdf/2303.15841v1",
        "categories": [
            "cs.CY"
        ]
    },
    {
        "title": "Turn the Rudder: A Beacon of Reentrancy Detection for Smart Contracts on\n  Ethereum",
        "authors": [
            "Zibin Zheng",
            "Neng Zhang",
            "Jianzhong Su",
            "Zhijie Zhong",
            "Mingxi Ye",
            "Jiachi Chen"
        ],
        "published_date": "2023-03-24T03:07:30Z",
        "abstract": "Smart contracts are programs deployed on a blockchain and are immutable once\ndeployed. Reentrancy, one of the most important vulnerabilities in smart\ncontracts, has caused millions of dollars in financial loss. Many reentrancy\ndetection approaches have been proposed. It is necessary to investigate the\nperformance of these approaches to provide useful guidelines for their\napplication. In this work, we conduct a large-scale empirical study on the\ncapability of five well-known or recent reentrancy detection tools such as\nMythril and Sailfish. We collect 230,548 verified smart contracts from\nEtherscan and use detection tools to analyze 139,424 contracts after\ndeduplication, which results in 21,212 contracts with reentrancy issues. Then,\nwe manually examine the defective functions located by the tools in the\ncontracts. From the examination results, we obtain 34 true positive contracts\nwith reentrancy and 21,178 false positive contracts without reentrancy. We also\nanalyze the causes of the true and false positives. Finally, we evaluate the\ntools based on the two kinds of contracts. The results show that more than\n99.8% of the reentrant contracts detected by the tools are false positives with\neight types of causes, and the tools can only detect the reentrancy issues\ncaused by call.value(), 58.8% of which can be revealed by the Ethereum's\nofficial IDE, Remix. Furthermore, we collect real-world reentrancy attacks\nreported in the past two years and find that the tools fail to find any issues\nin the corresponding contracts. Based on the findings, existing works on\nreentrancy detection appear to have very limited capability, and researchers\nshould turn the rudder to discover and detect new reentrancy patterns except\nthose related to call.value().",
        "paper_url": "http://arxiv.org/abs/2303.13770v1",
        "pdf_url": "http://arxiv.org/pdf/2303.13770v1",
        "categories": [
            "cs.SE"
        ]
    },
    {
        "title": "Evolution of Automated Weakness Detection in Ethereum Bytecode: a\n  Comprehensive Study",
        "authors": [
            "Monika di Angelo",
            "Thomas Durieux",
            "João F. Ferreira",
            "Gernot Salzer"
        ],
        "published_date": "2023-03-18T23:28:14Z",
        "abstract": "Blockchain programs (also known as smart contracts) manage valuable assets\nlike cryptocurrencies and tokens, and implement protocols in domains like\ndecentralized finance (DeFi) and supply-chain management. These types of\napplications require a high level of security that is hard to achieve due to\nthe transparency of public blockchains. Numerous tools support developers and\nauditors in the task of detecting weaknesses. As a young technology,\nblockchains and utilities evolve fast, making it challenging for tools and\ndevelopers to keep up with the pace.\n  In this work, we study the robustness of code analysis tools and the\nevolution of weakness detection on a dataset representing six years of\nblockchain activity. We focus on Ethereum as the crypto ecosystem with the\nlargest number of developers and deployed programs. We investigate the behavior\nof single tools as well as the agreement of several tools addressing similar\nweaknesses.\n  Our study is the first that is based on the entire body of deployed bytecode\non Ethereum's main chain. We achieve this coverage by considering bytecodes as\nequivalent if they share the same skeleton. The skeleton of a bytecode is\nobtained by omitting functionally irrelevant parts. This reduces the 48 million\ncontracts deployed on Ethereum up to January 2022 to 248328 contracts with\ndistinct skeletons. For bulk execution, we utilize the open-source framework\nSmartBugs that facilitates the analysis of Solidity smart contracts, and\nenhance it to accept also bytecode as the only input. Moreover, we integrate\nsix further tools for bytecode analysis. The execution of the 12 tools included\nin our study on the dataset took 30 CPU years. While the tools report a total\nof 1307486 potential weaknesses, we observe a decrease in reported weaknesses\nover time, as well as a degradation of tools to varying degrees.",
        "paper_url": "http://arxiv.org/abs/2303.10517v2",
        "pdf_url": "http://arxiv.org/pdf/2303.10517v2",
        "categories": [
            "cs.CR",
            "cs.SE"
        ]
    },
    {
        "title": "Autopsy of Ethereum's Post-Merge Reward System",
        "authors": [
            "Mikel Cortes-Goicoechea",
            "Tarun Mohandas-Daryanani",
            "Jose Luis Muñoz-Tapia",
            "Leonardo Bautista-Gomez"
        ],
        "published_date": "2023-03-17T09:12:07Z",
        "abstract": "Like most modern blockchain networks, Ethereum has relied on economic\nincentives to promote honest participation in the chain's consensus. The\ndistributed character of the platform, together with the \"randomness\" or \"luck\"\nfactor that both proof of work (PoW) and proof of stake (PoS) provide when\nelecting the next block proposer, pushed the industry to model and improve the\nreward system of the system. With several improvements to predict PoW block\nproposal rewards and to maximize the extractable rewards of the same ones, the\nultimate Ethereum's transition to PoS applied in the Paris Hard-Fork, more\ngenerally known as \"The Merge\", has meant a significant modification on the\nreward system in the platform. In this paper, we aim to break down both\ntheoretically and empirically the new reward system in this post-merge era. We\npresent a highly detailed description of the different rewards and their share\namong validators' rewards. Ultimately, we offer a study that uses the presented\nreward model to analyze the performance of the network during this transition.",
        "paper_url": "http://arxiv.org/abs/2303.09850v1",
        "pdf_url": "http://arxiv.org/pdf/2303.09850v1",
        "categories": [
            "cs.CR",
            "cs.GT"
        ]
    },
    {
        "title": "Code Will Tell: Visual Identification of Ponzi Schemes on Ethereum",
        "authors": [
            "Xiaolin Wen",
            "Kim Siang Yeo",
            "Yong Wang",
            "Ling Cheng",
            "Feida Zhu",
            "Min Zhu"
        ],
        "published_date": "2023-03-14T06:58:39Z",
        "abstract": "Ethereum has become a popular blockchain with smart contracts for investors\nnowadays. Due to the decentralization and anonymity of Ethereum, Ponzi schemes\nhave been easily deployed and caused significant losses to investors. However,\nthere are still no explainable and effective methods to help investors easily\nidentify Ponzi schemes and validate whether a smart contract is actually a\nPonzi scheme. To fill the research gap, we propose PonziLens, a novel\nvisualization approach to help investors achieve early identification of Ponzi\nschemes by investigating the operation codes of smart contracts. Specifically,\nwe conduct symbolic execution of opcode and extract the control flow for\ninvesting and rewarding with critical opcode instructions. Then, an intuitive\ndirected-graph based visualization is proposed to display the investing and\nrewarding flows and the crucial execution paths, enabling easy identification\nof Ponzi schemes on Ethereum. Two usage scenarios involving both Ponzi and\nnon-Ponzi schemes demonstrate the effectiveness of PonziLens.",
        "paper_url": "http://arxiv.org/abs/2303.07657v1",
        "pdf_url": "http://arxiv.org/pdf/2303.07657v1",
        "categories": [
            "cs.HC"
        ]
    },
    {
        "title": "Towards a Privacy-Preserving Dispute Resolution Protocol on Ethereum",
        "authors": [
            "Andrea Gangemi",
            "Aida Manzano Kharman"
        ],
        "published_date": "2023-03-01T14:14:01Z",
        "abstract": "We present a new dispute resolution protocol that can be built on the\nEthereum blockchain. Unlike existing applications like Kleros, privacy is\nensured by design through the use of the zero-knowledge protocols Semaphore and\nMACI (Minimal Anti-Collusion Infrastructure), which provide, among other\nthings, resistance to Sybil-like attacks and corruption. Differently from\nKleros, dispute resolution is guaranteed despite the users having the final\nsay. Moreover, the proposed model does not use a native token on the platform,\nbut aims to reward stakeholders through a social incentive mechanism based on\nsoulbound tokens, introduced by Weyl, Ohlhaver, and Buterin in 2022. Users with\nthese tokens will be considered trustworthy and will have the ability to govern\nthe platform. As far as we know, this is one of the first blockchain projects\nthat seeks to introduce social governance rather than one based on economic\nincentives.",
        "paper_url": "http://arxiv.org/abs/2303.00533v2",
        "pdf_url": "http://arxiv.org/pdf/2303.00533v2",
        "categories": [
            "cs.CR"
        ]
    },
    {
        "title": "Formal and Executable Semantics of the Ethereum Virtual Machine in Dafny",
        "authors": [
            "Franck Cassez",
            "Joanne Fuller",
            "Milad K. Ghale",
            "David J. Pearce",
            "Horacio M. A. Quiles"
        ],
        "published_date": "2023-03-01T00:55:33Z",
        "abstract": "The Ethereum protocol implements a replicated state machine. The network\nparticipants keep track of the system state by: 1) agreeing on the sequence of\ntransactions to be processed and 2) computing the state transitions that\ncorrespond to the sequence of transactions. Ethereum transactions are programs,\ncalled smart contracts, and computing a state transition requires executing\nsome code. The Ethereum Virtual Machine (EVM) provides this capability and can\nexecute programs written in EVM bytecode. We present a formal and executable\nsemantics of the EVM written in the verification-friendly language Dafny: it\nprovides (i) a readable, formal and verified specification of the semantics of\nthe EVM; (ii) a framework to formally reason about bytecode.",
        "paper_url": "http://arxiv.org/abs/2303.00152v1",
        "pdf_url": "http://arxiv.org/pdf/2303.00152v1",
        "categories": [
            "cs.LO"
        ]
    },
    {
        "title": "A Simple Single Slot Finality Protocol For Ethereum",
        "authors": [
            "Francesco D'Amato",
            "Luca Zanolini"
        ],
        "published_date": "2023-02-24T16:57:57Z",
        "abstract": "Currently, Gasper, the implemented consensus protocol of Ethereum, takes\nbetween 64 and 95 slots to finalize blocks. Because of that, a significant\nportion of the chain is susceptible to reorgs. The possibility to capture MEV\n(Maximum Extractable Value) through such reorgs can then disincentivize\nhonestly following the protocol, breaking the desired correspondence of honest\nand rational behavior. Moreover, the relatively long time to finality forces\nusers to choose between economic security and faster transaction confirmation.\nThis motivates the study of the so-called single slot finality protocols:\nconsensus protocols that finalize a block in each slot and, more importantly,\nthat finalize the block proposed at a given slot within such slot.\n  In this work we propose a simple, non-blackbox protocol that combines a\nsynchronous dynamically available protocol with a partially synchronous\nfinality gadget, resulting in a consensus protocol that can finalize one block\nper slot, paving the way to single slot finality within Ethereum. Importantly,\nthe protocol we present can finalize the block proposed in a slot, within such\nslot.",
        "paper_url": "http://arxiv.org/abs/2302.12745v2",
        "pdf_url": "http://arxiv.org/pdf/2302.12745v2",
        "categories": [
            "cs.DC"
        ]
    },
    {
        "title": "Dissecting Bitcoin and Ethereum Transactions: On the Lack of Transaction\n  Contention and Prioritization Transparency in Blockchains",
        "authors": [
            "Johnnatan Messias",
            "Vabuk Pahari",
            "Balakrishnan Chandrasekaran",
            "Krishna P. Gummadi",
            "Patrick Loiseau"
        ],
        "published_date": "2023-02-14T10:42:17Z",
        "abstract": "In permissionless blockchains, transaction issuers include a fee to\nincentivize miners to include their transactions. To accurately estimate this\nprioritization fee for a transaction, transaction issuers (or blockchain\nparticipants, more generally) rely on two fundamental notions of transparency,\nnamely contention and prioritization transparency. Contention transparency\nimplies that participants are aware of every pending transaction that will\ncontend with a given transaction for inclusion. Prioritization transparency\nstates that the participants are aware of the transaction or prioritization\nfees paid by every such contending transaction. Neither of these notions of\ntransparency holds well today. Private relay networks, for instance, allow\nusers to send transactions privately to miners. Besides, users can offer fees\nto miners via either direct transfers to miners' wallets or off-chain payments\n-- neither of which are public. In this work, we characterize the lack of\ncontention and prioritization transparency in Bitcoin and Ethereum resulting\nfrom such practices. We show that private relay networks are widely used and\nprivate transactions are quite prevalent. We show that the lack of transparency\nfacilitates miners to collude and overcharge users who may use these private\nrelay networks despite them offering little to no guarantees on transaction\nprioritization. The lack of these transparencies in blockchains has crucial\nimplications for transaction issuers as well as the stability of blockchains.\nFinally, we make our data sets and scripts publicly available.",
        "paper_url": "http://arxiv.org/abs/2302.06962v2",
        "pdf_url": "http://arxiv.org/pdf/2302.06962v2",
        "categories": [
            "cs.CR"
        ]
    },
    {
        "title": "Neural-FEBI: Accurate Function Identification in Ethereum Virtual\n  Machine Bytecode",
        "authors": [
            "Jiahao He",
            "Shuangyin Li",
            "Xinming Wang",
            "Shing-Chi Cheung",
            "Gansen Zhao",
            "Jinji Yang"
        ],
        "published_date": "2023-01-30T07:02:44Z",
        "abstract": "Millions of smart contracts have been deployed onto the Ethereum platform,\nposing potential attack subjects. Therefore, analyzing contract binaries is\nvital since their sources are unavailable, involving identification comprising\nfunction entry identification and detecting its boundaries. Such boundaries are\ncritical to many smart contract applications, e.g. reverse engineering and\nprofiling. Unfortunately, it is challenging to identify functions from these\nstripped contract binaries due to the lack of internal function call statements\nand the compiler-inducing instruction reshuffling. Recently, several existing\nworks excessively relied on a set of handcrafted heuristic rules which impose\nseveral faults. To address this issue, we propose a novel neural network-based\nframework for EVM bytecode Function Entries and Boundaries Identification\n(neural-FEBI) that does not rely on a fixed set of handcrafted rules. Instead,\nit used a two-level bi-Long Short-Term Memory network and a Conditional Random\nField network to locate the function entries. The suggested framework also\ndevises a control flow traversal algorithm to determine the code segments\nreachable from the function entry as its boundary. Several experiments on\n38,996 publicly available smart contracts collected as binary demonstrate that\nneural-FEBI confirms the lowest and highest F1-scores for the function entries\nidentification task across different datasets of 88.3 to 99.7, respectively.\nIts performance on the function boundary identification task is also increased\nfrom 79.4% to 97.1% compared with state-of-the-art. We further demonstrate that\nthe identified function information can be used to construct more accurate\nintra-procedural CFGs and call graphs. The experimental results confirm that\nthe proposed framework significantly outperforms state-of-the-art, often based\non handcrafted heuristic rules.",
        "paper_url": "http://arxiv.org/abs/2301.12695v2",
        "pdf_url": "http://arxiv.org/pdf/2301.12695v2",
        "categories": [
            "cs.SE"
        ]
    },
    {
        "title": "TxT: Real-time Transaction Encapsulation for Ethereum Smart Contracts",
        "authors": [
            "Nikolay Ivanov",
            "Qiben Yan",
            "Anurag Kompalli"
        ],
        "published_date": "2023-01-20T21:14:15Z",
        "abstract": "Ethereum is a permissionless blockchain ecosystem that supports execution of\nsmart contracts, the key enablers of decentralized finance (DeFi) and\nnon-fungible tokens (NFT). However, the expressiveness of Ethereum smart\ncontracts is a double-edged sword: while it enables blockchain programmability,\nit also introduces security vulnerabilities, i.e., the exploitable\ndiscrepancies between expected and actual behaviors of the contract code. To\naddress these discrepancies and increase the vulnerability coverage, we propose\na new smart contract security testing approach called transaction\nencapsulation. The core idea lies in the local execution of transactions on a\nfully-synchronized yet isolated Ethereum node, which creates a preview of\noutcomes of transaction sequences on the current state of blockchain. This\napproach poses a critical technical challenge -- the well-known\ntime-of-check/time-of-use (TOCTOU) problem, i.e., the assurance that the final\ntransactions will exhibit the same execution paths as the encapsulated test\ntransactions. In this work, we determine the exact conditions for guaranteed\nexecution path replicability of the tested transactions, and implement a\ntransaction testing tool, TxT, which reveals the actual outcomes of Ethereum\ntransactions. To ensure the correctness of testing, TxT deterministically\nverifies whether a given sequence of transactions ensues an identical execution\npath on the current state of blockchain. We analyze over 1.3 billion Ethereum\ntransactions and determine that 96.5% of them can be verified by TxT. We\nfurther show that TxT successfully reveals the suspicious behaviors associated\nwith 31 out of 37 vulnerabilities (83.8% coverage) in the smart contract\nweakness classification (SWC) registry. In comparison, the vulnerability\ncoverage of all the existing defense approaches combined only reaches 40.5%.",
        "paper_url": "http://arxiv.org/abs/2301.08806v1",
        "pdf_url": "http://arxiv.org/pdf/2301.08806v1",
        "categories": [
            "cs.CR",
            "cs.DC"
        ]
    },
    {
        "title": "Shackled: a 3D Rendering Engine Programmed Entirely in Ethereum Smart\n  Contracts",
        "authors": [
            "Ike Smith",
            "Casey Clifton"
        ],
        "published_date": "2023-01-17T05:00:13Z",
        "abstract": "The Ethereum blockchain permits the development and deployment of smart\ncontracts which can store and execute code 'on-chain' - that is, entirely on\nnodes in the blockchain's network. Smart contracts have traditionally been used\nfor financial purposes, but since smart contracts are Turing-complete, their\nalgorithmic scope is broader than any single domain. To that end, we design,\ndevelop, and deploy a comprehensive 3D rendering engine programmed entirely in\nEthereum smart contracts, called Shackled. Shackled computes a 2D image from a\n3D scene, executing every single computation on-chain, on Ethereum. To our\nknowledge, Shackled is the first and only fully on-chain 3D rendering engine\nfor Ethereum. In this work, we 1) provide three unique datasets for the purpose\nof using and benchmarking Shackled, 2) execute said benchmarks and provide\nresults, 3) demonstrate a potential use case of Shackled in the domain of\ntokenised generative art, 4) provide a no-code user interface to Shackled, 5)\nenumerate the challenges associated with programming complex algorithms in\nSolidity smart contracts, and 6) outline potential directions for improving the\nShackled platform. It is our hope that this work increases the Ethereum\nblockchain's native graphics processing capabilities, and that it enables\nincreased use of smart contracts for more complex algorithms, thus increasing\nthe overall richness of the Ethereum ecosystem.",
        "paper_url": "http://arxiv.org/abs/2301.06702v1",
        "pdf_url": "http://arxiv.org/pdf/2301.06702v1",
        "categories": [
            "cs.CR",
            "cs.GR"
        ]
    },
    {
        "title": "Explainable Ponzi Schemes Detection on Ethereum",
        "authors": [
            "Letterio Galletta",
            "Fabio Pinelli"
        ],
        "published_date": "2023-01-12T08:38:23Z",
        "abstract": "Blockchain technology has been successfully exploited for deploying new\neconomic applications. However, it has started arousing the interest of\nmalicious actors who deliver scams to deceive honest users and to gain economic\nadvantages. Ponzi schemes are one of the most common scams. Here, we present a\nclassifier for detecting smart Ponzi contracts on Ethereum, which can be used\nas the backbone for developing detection tools. First, we release a labelled\ndata set with 4422 unique real-world smart contracts to address the problem of\nthe unavailability of labelled data. Then, we show that our classifier\noutperforms the ones proposed in the literature when considering the AUC as a\nmetric. Finally, we identify a small and effective set of features that ensures\na good classification quality and investigate their impacts on the\nclassification using eXplainable AI techniques.",
        "paper_url": "http://arxiv.org/abs/2301.04872v2",
        "pdf_url": "http://arxiv.org/pdf/2301.04872v2",
        "categories": [
            "cs.CR",
            "cs.LG"
        ]
    },
    {
        "title": "Inferring Needless Write Memory Accesses on Ethereum Bytecode (Extended\n  Version)",
        "authors": [
            "Elvira Albert",
            "Jesús Correas",
            "Pablo Gordillo",
            "Guillermo Román-Díez",
            "Albert Rubio"
        ],
        "published_date": "2023-01-11T23:36:47Z",
        "abstract": "Efficiency is a fundamental property of any type of program, but it is even\nmore so in the context of the programs executing on the blockchain (known as\nsmart contracts). This is because optimizing smart contracts has direct\nconsequences on reducing the costs of deploying and executing the contracts, as\nthere are fees to pay related to their bytes-size and to their resource\nconsumption (called gas). Optimizing memory usage is considered a challenging\nproblem that, among other things, requires a precise inference of the memory\nlocations being accessed. This is also the case for the Ethereum Virtual\nMachine (EVM) bytecode generated by the most-widely used compiler,\n\\texttt{solc}, whose rather unconventional and low-level memory usage\nchallenges automated reasoning. This paper presents a static analysis,\ndeveloped at the level of the EVM bytecode generated by \\texttt{solc}, that\ninfers write memory accesses that are needless and thus can be safely removed.\nThe application of our implementation on more than 19,000 real smart contracts\nhas detected about 6,200 needless write accesses in less than 4 hours.\nInterestingly, many of these writes were involved in memory usage patterns\ngenerated by \\texttt{solc} that can be greatly optimized by removing entire\nblocks of bytecodes. To the best of our knowledge, existing optimization tools\ncannot infer such needless write accesses, and hence cannot detect these\ninefficiencies that affect both the deployment and the execution costs of\nEthereum smart contracts.",
        "paper_url": "http://arxiv.org/abs/2301.04757v1",
        "pdf_url": "http://arxiv.org/pdf/2301.04757v1",
        "categories": [
            "cs.PL"
        ]
    },
    {
        "title": "Bubble or Not: Measurements, Analyses, and Findings on the Ethereum\n  ERC721 and ERC1155 Non-fungible Token Ecosystem",
        "authors": [
            "Yixiang Tan",
            "Zhiying Wu",
            "Jieli Liu",
            "Jiajing Wu",
            "Zibin Zheng",
            "Ting Chen"
        ],
        "published_date": "2023-01-05T10:17:57Z",
        "abstract": "The non-fungible token (NFT) is an emergent type of cryptocurrency that has\ngarnered extensive attention since its inception. The uniqueness,\nindivisibility and humanistic value of NFTs are the key characteristics that\ndistinguish them from traditional tokens. The market capitalization of NFT\nreached 21.5 billion USD in 2021, almost 200 times of all previous\ntransactions. However, the subsequent rapid decline in NFT market fever in the\nsecond quarter of 2022 casts doubts on the ostensible boom in the NFT market.\nTo date, there has been no comprehensive and systematic study of the NFT trade\nmarket or of the NFT bubble and hype phenomenon. To fill this gap, we conduct\nan in-depth investigation of the whole Ethereum ERC721 and ERC1155 NFT\necosystem via graph analysis and apply several metrics to measure the\ncharacteristics of NFTs. By collecting data from the whole blockchain, we\nconstruct three graphs, namely NFT create graph, NFT transfer graph, and NFT\nhold graph, to characterize the NFT traders, analyze the characteristics of\nNFTs, and discover many observations and insights. Moreover, we propose new\nindicators to quantify the activeness and value of NFT and propose an algorithm\nthat combines indicators and graph analyses to find bubble NFTs. Real-world\ncases demonstrate that our indicators and approach can be used to discern\nbubble NFTs effectively.",
        "paper_url": "http://arxiv.org/abs/2301.01991v1",
        "pdf_url": "http://arxiv.org/pdf/2301.01991v1",
        "categories": [
            "cs.CY"
        ]
    },
    {
        "title": "RiskProp: Account Risk Rating on Ethereum via De-anonymous Score and\n  Network Propagation",
        "authors": [
            "Dan Lin",
            "Jiajing Wu",
            "Qishuang Fu",
            "Zibin Zheng",
            "Ting Chen"
        ],
        "published_date": "2023-01-01T05:33:54Z",
        "abstract": "As one of the most popular blockchain platforms supporting smart contracts,\nEthereum has caught the interest of both investors and criminals. Differently\nfrom traditional financial scenarios, executing Know Your Customer verification\non Ethereum is rather difficult due to the pseudonymous nature of the\nblockchain. Fortunately, as the transaction records stored in the Ethereum\nblockchain are publicly accessible, we can understand the behavior of accounts\nor detect illicit activities via transaction mining. Existing risk control\ntechniques have primarily been developed from the perspectives of\nde-anonymizing address clustering and illicit account classification. However,\nthese techniques cannot be used to ascertain the potential risks for all\naccounts and are limited by specific heuristic strategies or insufficient label\ninformation. These constraints motivate us to seek an effective rating method\nfor quantifying the spread of risk in a transaction network. To the best of our\nknowledge, we are the first to address the problem of account risk rating on\nEthereum by proposing a novel model called RiskProp, which includes a\nde-anonymous score to measure transaction anonymity and a network propagation\nmechanism to formulate the relationships between accounts and transactions. We\ndemonstrate the effectiveness of RiskProp in overcoming the limitations of\nexisting models by conducting experiments on real-world datasets from Ethereum.\nThrough case studies on the detected high-risk accounts, we demonstrate that\nthe risk assessment by RiskProp can be used to provide warnings for investors\nand protect them from possible financial losses, and the superior performance\nof risk score-based account classification experiments further verifies the\neffectiveness of our rating method.",
        "paper_url": "http://arxiv.org/abs/2301.00354v1",
        "pdf_url": "http://arxiv.org/pdf/2301.00354v1",
        "categories": [
            "cs.SI"
        ]
    },
    {
        "title": "HCB: Enabling Compact Block in Ethereum Network with Secondary Pool and\n  Transaction Prediction",
        "authors": [
            "Chonghe Zhao",
            "Taotao Wang",
            "Shengli Zhang",
            "Soung Chang Liew"
        ],
        "published_date": "2022-12-27T05:50:21Z",
        "abstract": "Compact block, which replaces transactions in the block with their hashes, is\nan effective means to speed up block propagation in the Bitcoin network. The\ncompact block mechanism in Bitcoin counts on the fact that many nodes may\nalready have the transactions (or most of the transactions) in the block,\ntherefore sending the complete block containing the full transactions is\nunnecessary. This fact, however, does not hold in the Ethereum network.\nAdopting compact block directly in Ethereum may degrade the block propagation\nspeed significantly because the probability of a node not having a transaction\nin the sending block is relatively high in Ethereum and requesting the missing\ntransactions after receiving the compact block takes much additional time. This\npaper proposes hybrid-compact block (HCB), an efficient compact block\npropagation scheme for Ethereum and other similar blockchains. First, we\ndevelop a Secondary Pool to store the low-fee transactions, which are removed\nfrom the primary transaction pool, to conserve storage space. As simple\nauxiliary storage, the Secondary Pool does not affect the normal block\nprocessing of the primary pool in Ethereum. Second, we design a machine\nlearning-based transaction prediction module to precisely predict the missing\ntransactions caused by network latency and selfish behaviors. We implemented\nour HCB scheme and other compact-block-like schemes (as benchmarks) and\ndeployed a number of worldwide nodes over the Ethereum MainNet to\nexperimentally investigate them. Experimental results show that HCB performs\nbest among the existing compact-block-like schemes and can reduce propagation\ntime by more than half with respect to the current block propagation scheme in\nEthereum.",
        "paper_url": "http://arxiv.org/abs/2212.13367v1",
        "pdf_url": "http://arxiv.org/pdf/2212.13367v1",
        "categories": [
            "cs.NI"
        ]
    },
    {
        "title": "AutoMESC: Automatic Framework for Mining and Classifying Ethereum Smart\n  Contract Vulnerabilities and Their Fixes",
        "authors": [
            "Majd Soud",
            "Ilham Qasse",
            "Grischa Liebel",
            "Mohammad Hamdaqa"
        ],
        "published_date": "2022-12-20T21:29:16Z",
        "abstract": "Due to the risks associated with vulnerabilities in smart contracts, their\nsecurity has gained significant attention in recent years. However, there is a\nlack of open datasets on smart contract vulnerabilities and their fixes that\nallows for data-driven research. Towards this end, we propose an automated\nmethod for mining and classifying Ethereum's smart contract vulnerabilities and\ntheir corresponding fixes from GitHub and from the Common Vulnerabilities and\nExposures (CVE) records in the National Vulnerability Database. We implemented\nthe proposed method in a fully automated framework, which we call AutoMESC.\nAutoMESC uses seven of the most well-known smart contract security tools to\nclassify and label the collected vulnerabilities based on vulnerability types.\nFurthermore, it collects metadata that can be used in data-intensive smart\ncontract security research (e.g., vulnerability detection, vulnerability\nclassification, severity prediction, and automated repair). We used AutoMESC to\nconstruct a sample dataset and made it publicly available. Currently, the\ndataset contains 6.7K smart contracts' vulnerability-fix pairs written in\nSolidity. We assess the quality of the constructed dataset in terms of\naccuracy, provenance, and relevance, and compare it with existing datasets.\nAutoMESC is designed to collect data continuously and keep the corresponding\ndataset up-to-date with newly discovered smart contract vulnerabilities and\ntheir fixes from GitHub and CVE records.",
        "paper_url": "http://arxiv.org/abs/2212.10660v1",
        "pdf_url": "http://arxiv.org/pdf/2212.10660v1",
        "categories": [
            "cs.CR",
            "cs.SE"
        ]
    },
    {
        "title": "A Game of NFTs: Characterizing NFT Wash Trading in the Ethereum\n  Blockchain",
        "authors": [
            "Massimo La Morgia",
            "Alessandro Mei",
            "Alberto Maria Mongardini",
            "Eugenio Nerio Nemmi"
        ],
        "published_date": "2022-12-02T15:03:35Z",
        "abstract": "The Non-Fungible Token (NFT) market in the Ethereum blockchain experienced\nexplosive growth in 2021, with a monthly trade volume reaching \\$6 billion in\nJanuary 2022. However, concerns have emerged about possible wash trading, a\nform of market manipulation in which one party repeatedly trades an NFT to\ninflate its volume artificially. Our research examines the effects of wash\ntrading on the NFT market in Ethereum from the beginning until January 2022,\nusing multiple approaches. We find that wash trading affects 5.66% of all NFT\ncollections, with a total artificial volume of \\$3,406,110,774. We look at two\nways to profit from wash trading: Artificially increasing the price of the NFT\nand taking advantage of the token reward systems provided by some marketplaces.\nOur findings show that exploiting the token reward systems of NFTMs is much\nmore profitable (mean gain of successful operations is \\$1.055M on LooksRare),\nmore likely to succeed (more than 80% of operations), and less risky than\nreselling an NFT at a higher price using wash trading (50% of activities result\nin a loss). Our research highlights that wash trading is frequent in Ethereum\nand that NFTMs should implement protective mechanisms to stop such illicit\nbehavior.",
        "paper_url": "http://arxiv.org/abs/2212.01225v3",
        "pdf_url": "http://arxiv.org/pdf/2212.01225v3",
        "categories": [
            "cs.CY"
        ]
    },
    {
        "title": "Time-aware Metapath Feature Augmentation for Ponzi Detection in Ethereum",
        "authors": [
            "Chengxiang Jin",
            "Jiajun Zhou",
            "Jie Jin",
            "Jiajing Wu",
            "Qi Xuan"
        ],
        "published_date": "2022-10-30T15:31:19Z",
        "abstract": "With the development of Web 3.0 which emphasizes decentralization, blockchain\ntechnology ushers in its revolution and also brings numerous challenges,\nparticularly in the field of cryptocurrency. Recently, a large number of\ncriminal behaviors continuously emerge on blockchain, such as Ponzi schemes and\nphishing scams, which severely endanger decentralized finance. Existing\ngraph-based abnormal behavior detection methods on blockchain usually focus on\nconstructing homogeneous transaction graphs without distinguishing the\nheterogeneity of nodes and edges, resulting in partial loss of transaction\npattern information. Although existing heterogeneous modeling methods can\ndepict richer information through metapaths, the extracted metapaths generally\nneglect temporal dependencies between entities and do not reflect real\nbehavior. In this paper, we introduce Time-aware Metapath Feature Augmentation\n(TMFAug) as a plug-and-play module to capture the real metapath-based\ntransaction patterns during Ponzi scheme detection on Ethereum. The proposed\nmodule can be adaptively combined with existing graph-based Ponzi detection\nmethods. Extensive experimental results show that our TMFAug can help existing\nPonzi detection methods achieve significant performance improvements on the\nEthereum dataset, indicating the effectiveness of heterogeneous temporal\ninformation for Ponzi scheme detection.",
        "paper_url": "http://arxiv.org/abs/2210.16863v2",
        "pdf_url": "http://arxiv.org/pdf/2210.16863v2",
        "categories": [
            "cs.LG",
            "q-fin.ST"
        ]
    },
    {
        "title": "Classical ensemble of Quantum-classical ML algorithms for Phishing\n  detection in Ethereum transaction networks",
        "authors": [
            "Anupama Ray",
            "Sai Sakunthala Guddanti",
            "Vishnu Ajith",
            "Dhinakaran Vinayagamurthy"
        ],
        "published_date": "2022-10-30T14:37:21Z",
        "abstract": "Ethereum is one of the most valuable blockchain networks in terms of the\ntotal monetary value locked in it, and arguably been the most active network\nwhere new blockchain innovations in research and applications are demonstrated.\nBut, this also leads to Ethereum network being susceptible to a wide variety of\nthreats and attacks in an attempt to gain unreasonable advantage or to\nundermine the value of the users. Even with the state-of-art classical ML\nalgorithms, detecting such attacks is still hard. This motivated us to build a\nhybrid system of quantum-classical algorithms that improves phishing detection\nin financial transaction networks. This paper presents a classical ensemble\npipeline of classical and quantum algorithms and a detailed study benchmarking\nexisting Quantum Machine Learning algorithms such as Quantum Support Vector\nMachine and Variational Quantum Classifier. With the current generation of\nquantum hardware available, smaller datasets are more suited to the QML models\nand most research restricts to hundreds of samples. However, we experimented on\ndifferent data sizes and report results with a test data of 12K transaction\nnodes, which is to the best of the authors knowledge the largest QML experiment\nrun so far on any real quantum hardware. The classical ensembles of\nquantum-classical models improved the macro F-score and phishing F-score. One\nkey observation is QSVM constantly gives lower false positives, thereby higher\nprecision compared with any other classical or quantum network, which is always\npreferred for any anomaly detection problem. This is true for QSVMs when used\nindividually or via bagging of same models or in combination with other\nclassical/quantum models making it the most advantageous quantum algorithm so\nfar. The proposed ensemble framework is generic and can be applied for any\nclassification task",
        "paper_url": "http://arxiv.org/abs/2211.00004v1",
        "pdf_url": "http://arxiv.org/pdf/2211.00004v1",
        "categories": [
            "quant-ph",
            "cs.CR",
            "cs.LG"
        ]
    },
    {
        "title": "Ethereum Proof-of-Stake under Scrutiny",
        "authors": [
            "Ulysse Pavloff",
            "Yackolley Amoussou-Guenou",
            "Sara Tucci-Piergiovanni"
        ],
        "published_date": "2022-10-28T11:41:54Z",
        "abstract": "Ethereum has undergone a recent change called \\textit{the Merge}, which made\nEthereum a Proof-of-Stake blockchain, shifting closer to BFT consensus.\nEthereum, which wished to keep the best of the two protocol designs (BFT and\nNakomoto-style), now has a convoluted consensus protocol as its core. The\nresult is a blockchain being possibly produced in a tree-like form while\nparticipants try to finalize blocks. We categorize different attacks\njeopardizing the liveness of the protocol. The Ethereum community has responded\nby creating patches against some of them. We discovered a new attack on the\npatched protocol. To support our analysis, we propose a new high-level\nformalization of the properties of liveness and availability of the Ethereum\nblockchain, and we provide a pseudo-code. We believe this formalization to be\nhelpful for other analyses as well. Our results yield that the Ethereum\nProof-of-Stake has safety but only probabilistic liveness. The probability of\nthe liveness is influenced by the parameter describing the time frame allowed\nfor validators to change their mind about the current main chain.",
        "paper_url": "http://arxiv.org/abs/2210.16070v2",
        "pdf_url": "http://arxiv.org/pdf/2210.16070v2",
        "categories": [
            "cs.CR",
            "cs.DC"
        ]
    },
    {
        "title": "An Event Study of the Ethereum Transition to Proof-of-Stake",
        "authors": [
            "Elie Kapengut",
            "Bruce Mizrach"
        ],
        "published_date": "2022-10-24T23:30:11Z",
        "abstract": "On September 15, 2022, the Ethereum network adopted a proof-of-stake (PoS)\nconsensus mechanism. We study the impact on the network and competing platforms\nin a two month event window around the Beacon chain merge. We find that the\ntransition to PoS has reduced energy consumption by 99.98%. Miners have not\ntransformed into validators, and total block reward income (in USD) has fallen\nby 97%, though transaction fees (in ETH) for Ether have increased nearly 10%.\nThe Herfindahl index for the top 10 is 1,009; the network is 19% less\nconcentrated after the merge. Ethereum supply growth has been deflationary\nsince the merge. The time between consecutive blocks is now steady at 12\nseconds and transactions per day are up 7.0%. On Polygon, Matic fees rose but\ntoken fees fell. Polygon also slows, processing 3.3% fewer transactions per\nday. Solana's fees fall by $0.0003, and transactions per day are down 48%.\nStablecoin transfer volumes fall on Ethereum and Polygon, but rise on Solana.",
        "paper_url": "http://arxiv.org/abs/2210.13655v2",
        "pdf_url": "http://arxiv.org/pdf/2210.13655v2",
        "categories": [
            "q-fin.TR",
            "q-fin.PR"
        ]
    },
    {
        "title": "Building an Ethereum-Based Decentralized Vehicle Rental System",
        "authors": [
            "N García-Moreno",
            "P Caballero-Gil",
            "C Caballero-Gil",
            "J Molina-Gil"
        ],
        "published_date": "2022-09-28T16:16:34Z",
        "abstract": "Blockchain technology, beyond cryptocurrencies, is called to be the new\ninformation exchange ecosystem due to its unique properties, such as\nimmutability and transparency. The main objective of this work is to introduce\nthe design of a decentralized rental system, which leverages smart contracts\nand the Ethereum public blockchain. The work started from an exhaustive\ninvestigation on the Ethereum platform, emphasizing the aspect of cryptography\nand all the technology behind this platform. In order to test the proposed\nscheme in a realistic use, the implementation of a web application for the\nrental of vehicles has been carried out. The application covers the entire\nvehicle rental process offered in traditional web applications, adding more\nautonomy and ease of use to users. Following Ethereum application development\nguidelines, all business logic is located in the smart contracts implemented in\nthe Ethereum network, where these contracts control the entire vehicle rental\nsystem of customers. While this is a work in progress, the results obtained in\nthe first proof of concept have been very promising.",
        "paper_url": "http://arxiv.org/abs/2209.14200v1",
        "pdf_url": "http://arxiv.org/pdf/2209.14200v1",
        "categories": [
            "cs.CR"
        ]
    },
    {
        "title": "Goldfish: No More Attacks on Ethereum?!",
        "authors": [
            "Francesco D'Amato",
            "Joachim Neu",
            "Ertem Nusret Tas",
            "David Tse"
        ],
        "published_date": "2022-09-07T16:04:17Z",
        "abstract": "The LMD GHOST consensus protocol is a critical component of proof-of-stake\nEthereum. In its current form, this protocol is brittle, as evidenced by recent\nattacks and patching attempts. We propose Goldfish, a new protocol that\nsatisfies key properties required of a drop-in replacement for LMD GHOST:\nGoldfish is secure in the sleepy model, assuming a majority of the validators\nfollows the protocol. Goldfish is reorg resilient so that honestly produced\nblocks are guaranteed inclusion in the ledger, and it supports fast\nconfirmation with expected confirmation latency independent of the desired\nsecurity level. Subsampling validators can improve the communication efficiency\nof Goldfish, and Goldfish is composable with finality/accountability gadgets.\nCrucially, Goldfish is structurally similar to LMD GHOST, providing a credible\npath to adoption in Ethereum. Attacks on LMD GHOST exploit lack of coordination\namong honest validators, typically provided by a locking mechanism in classical\nBFT protocols. However, locking requires votes from a quorum of all\nparticipants and is not compatible with fluctuating participation. Goldfish is\npowered by a novel coordination mechanism to synchronize the honest validators'\nactions. Experiments with our prototype implementation of Goldfish suggest\npracticality.",
        "paper_url": "http://arxiv.org/abs/2209.03255v4",
        "pdf_url": "http://arxiv.org/pdf/2209.03255v4",
        "categories": [
            "cs.CR",
            "cs.DC"
        ]
    },
    {
        "title": "AuthROS: Secure Data Sharing Among Robot Operating Systems Based on\n  Ethereum",
        "authors": [
            "Shenhui Zhang",
            "Wenkai Li",
            "Xiaoqi Li",
            "Boyi Liu"
        ],
        "published_date": "2022-08-30T13:43:47Z",
        "abstract": "The Robot Operating System (ROS) streamlines human processes, increasing the\nefficiency of various production tasks. However, the security of data transfer\noperations in ROS is still in its immaturity. Securing data exchange between\nseveral robots is a significant problem. This paper proposes \\textit{AuthROS},\nan Ethereum blockchain-based secure data sharing method, for robot\ncommunication. It is a ROS node authorization system capable of ensuring the\nimmutability and security of private data flow between ROS nodes of any size.\nTo ensure data security, AuthROS employs the smart contract for permission\ngranting and identification, SM2-based key exchange, and SM4-based plaintext\nencryption techniques. In addition, we deploy a data digest upload technique to\noptimize data query and upload performance. Finally, the experimental findings\nreveal that AuthROS has strong security, time performance, and node forging in\ncases where data should be recorded and robots need to remain immobile.",
        "paper_url": "http://arxiv.org/abs/2208.14269v3",
        "pdf_url": "http://arxiv.org/pdf/2208.14269v3",
        "categories": [
            "cs.RO"
        ]
    }
]